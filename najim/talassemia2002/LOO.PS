%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: loo.dvi
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSCommandLine: dvips -o loo.ps loo.dvi
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1999.04.06:1617
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (loo.dvi)
@start /Fa 1 83 df<90B512FCEDFF80903907C00FC0ED03F090380F800116F81500A2
90381F0001A3ED03F0013E14E0ED07C0ED1F80ED7E0090387FFFF815E090387C01F0EC00
7849137C153C153EA24848137EA448485BEDFE06A20007EC7E0CD8FFFE1418ED3FF0C8EA
07E027237CA12E>82 D E /Fb 1 25 df<013F16402601FFE015E04813F8487F4813FF48
80D83FC06D1301273E001FE014C048D907F8130300786D6C13070070D900FFEB0F8000F0
91387FE07F486EB512006F5B03075B6F5B03005B0040ED1F8033127C9B3C>24
D E /Fc 10 118 df<EB03F0EB0FF890383E1C6090387C0FF0EBF807EA01F0EA03E00007
EB03E0EA0FC0A2381F800715C0EA3F00A2140F481480127EA2141F00FE14005A1506EC3F
07EC3E0F150E147E007C141EECFE1CEB01FCD83C03133C393E07BE38391F0E1E783907FC
0FF03901F003C0202278A027>97 D<14FCEB07FF90381F078090383E03C0EBFC013801F8
033803F0073807E00F13C0120F391F80070091C7FC48C8FCA35A127EA312FE5AA4007C14
C0EC01E0A2EC03C06CEB0F80EC1F006C137C380F81F03803FFC0C648C7FC1B2278A023>
99 D<EB03F8EB0FFEEB3E0F9038F807803801F003EA03E0EA07C0120FEA1F801407D83F
0013005C007E133EEB03F8387FFFE04848C7FC00FCC8FCA45AA4EC0180EC03C0A2007CEB
0780EC1F00003C133E6C13F8380F03E03807FF80D801FCC7FC1A2277A023>101
D<151FED7FC0EDF0E0020113F0EC03E3A2EC07C316E0EDC1C091380FC0005DA4141F92C7
FCA45C143E90381FFFFEA3D9007EC7FC147CA414FC5CA513015CA413035CA413075CA313
0FA25CA3131F91C8FCA35B133E1238EA7E3CA2EAFE7812FC485AEA78E0EA3FC0000FC9FC
244582B418>I<133FEA07FF5A13FEEA007EA3137CA213FCA213F8A21201A213F0A21203
A213E0A21207A213C0A2120FA21380A2121FA21300A25AA2123EA2127EA2127C1318EAFC
1C133CEAF838A21378137012F013F0EAF8E01279EA3FC0EA0F00103579B314>108
D<011E137C90387F81FF9039F3C387C09039E3EF03E03901E1FE01D9C1FC13F0EBC3F800
0313F0018314F814E0EA07871307000313C01200010F130316F01480A2011F130716E014
00A249EB0FC0A2013EEB1F80A2017EEB3F00017F133E5D5D9038FF81F09038FDC3E09038
F8FF80027EC7FC000190C8FCA25BA21203A25BA21207A25BB5FCA325307FA027>112
D<3903C00FC0390FF03FF0391E78F078391C7DE03C393C3FC0FC00381380EB7F00007814
F8D8707E13701500EAF0FC12E0EA60F812001201A25BA21203A25BA21207A25BA2120FA2
5BA2121FA290C8FC120E1E227AA020>114 D<EB03F0EB1FFCEB3C1EEB780FEBF007EA01
E0140F0003131F13C0A2EBE00414007FEBFF8014E06C13F06C13F8EB7FFC1307EB00FE14
7E143E123800FC133CA3147C00F013784813F0EAF001387803E0383C0F80381FFE00EA03
F818227AA01F>I<1303EB0F80A3131FA21400A25BA2133EA2137EA2137C387FFFF8A2B5
FC3800F800A21201A25BA21203A25BA21207A25BA2120FA25B1460001F13F014E0130013
0114C01303001E1380EB07005BEA0F1EEA07F8EA01E015307AAE19>I<EA01F0D803FC13
07D80F1E5B000E5C121C123C00385CD8783E133E1270A2017E137ED8F07C137CEA60FCC6
5A15FC00015C5BA2140100035C13E0166002031370EDE0F0D807C014E0A20003EB07E116
C09038E00FC1EC1FC3000190383FE3809038F071E73A007FE0FF0090381F803C24227AA0
29>I E /Fd 42 128 df<EC1FE0ECFFFC903803F01E90390FC00780EB1F8090393F000F
C0017E131F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F150FB3A6486CEB1FE0
267FFFC1B5FCA328357FB42B>12 D<123C127EB4FCA21380A2127F123D1201A412031300
A25A1206120E120C121C5A5A126009177AB315>39 D<123C127EB4FCA21380A2127F123D
1201A412031300A25A1206120E120C121C5A5A126009177A8715>44
D<B512F0A514057F921A>I<123C127E12FFA4127E123C08087A8715>I<1530157815F8A2
15F01401A215E01403A215C01407A21580140FA215005CA2143EA2143C147CA2147814F8
A25C1301A25C1303A25C1307A2495AA291C7FC5BA2131E133EA2133C137CA2137813F8A2
5B1201A25B1203A2485AA25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A
12601D4B7CB726>I<123C127E12FFA4127E123C1200B0123C127E12FFA4127E123C0820
7A9F15>58 D<15E0A34A7EA24A7EA34A7EA3EC0DFE140CA2EC187FA34A6C7EA202707FEC
601FA202E07FECC00FA2D901807F1507A249486C7EA301066D7EA2010E80010FB5FCA249
800118C77EA24981163FA2496E7EA3496E7EA20001821607487ED81FF04A7ED8FFFE49B5
12E0A333367DB53A>65 D<B7FC16E016F83A03FC0003FE0001EC00FFEE7F80EE3FC0161F
17E0160F17F0A617E0161F17C0EE3F80EE7F0016FEED03FC90B612F05E9039FC0007FCED
00FEEE3F80EE1FC0EE0FE017F0160717F8160317FCA617F81607A2EE0FF0EE1FE0163FEE
7FC00003913803FF00B75A16F816C02E337DB236>I<B5D8FE03B512F8A3000190C73807
FC006C486E5AB390B7FCA349C71203B3A3486C4A7EB5D8FE03B512F8A335337EB23A>72
D<B512FEA3D803FEC9FC6C5AB3A9EE0180A416031700A45EA25E5E5E5E16FE00031407B7
FCA329337DB230>76 D<D8FFFC923801FFF86D5DA20003EFFE00D801BFED06FCA3D99F80
140CA2D98FC01418A3D987E01430A2D983F01460A3D981F814C0A3D980FCEB0180A2027E
EB0300A36E1306A26E6C5AA36E6C5AA36E6C5AA26E6C5AA36E6C5AA3913800FD80A2037F
C7FCA3486C133ED80FF04B7EB5011C90387FFFF8A33D337CB246>I<EC07FC91387FFFC0
903901FC07F0903907E000FCD90F80133E013FC76C7E017E6E7E496E7E48486E7E48486E
7EA248486E7E000F8249157E001F167FA24848ED3F80A2007F17C0A290C9121FA24817E0
AB6C17C06D153FA3003F17806D157FA2001F17006D5D000F5E6C6C4A5AA26C6C4A5A0001
5E6C6C4A5A017E4A5A6D4A5AD91FC0017FC7FCD907E013FC903901FC07F09039007FFFC0
DA07FCC8FC33377CB43C>79 D<B612FCEDFF8016F03A01FE0007FC0000EC01FEED007F70
7E707E83160F83A65FA24C5AA24C5A047EC7FC4B5AED0FF090B612C093C8FC9039FE001F
C0ED07F06F7E6F7E150082167E167FA583A5180C17C0A2043F131C486C1618B500FEEB1F
E0040F1338933807F070C93801FFE09338003F8036357EB239>82
D<90381FE00390387FFC0748B5FC3907F01FCF390F8003FF48C7FC003E80814880A20078
8000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13F06C13FF6C14C06C14F0C68001
3F7F01037F9038003FFF140302001380157F153FED1FC0150F12C0A21507A37EA26CEC0F
80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0B512E0011F138026C003FEC7FC
22377CB42B>I<007FB712FEA390398007F001D87C00EC003E0078161E0070160EA20060
160600E01607A3481603A6C71500B3AB4A7E011FB512FCA330337DB237>I<B500F09038
03FFF8A3D807FEC8EA7FC06C48ED1F000001161E6D151C00001618A26D15386D1530A26D
6C5CA26E14E0011F5DA26D6C495AA28001074AC7FCA26D6C1306A28001015CA26E131C01
001418806E5BA2ED8070023F1360A26E6C5AA215E1020F5BA2DA07F3C8FCA215FBEC03FE
A36E5AA26E5AA31570A235357EB23A>86 D<EB7F803803FFF0380F80FC381C003E003F13
3F6D6C7E6E7EA26E7EEA1F00C7FCA4EB01FF131FEBFF873803FC07EA0FF0EA1FC0EA3F80
127F13004815C05AA3140FA26C131F6C133B3A3F8071F180391FC1E1FF2607FFC0130039
00FE003C22237DA126>97 D<EA03F012FFA312071203AEEC3F80ECFFE09038F3C0F89038
F7007E01FE7F49EB1F8049EB0FC05BED07E016F0A2150316F8AA16F0150716E0A2ED0FC0
7F6DEB1F8001ECEB3F0001CF137C90388381F8903801FFE0C76CC7FC25357EB32B>I<EB
07F8EB3FFF9038FC07C03901F000E03903E003F03807C007120FEA1F80123F90380003E0
4890C7FCA2127E12FEAA127FA26C14187F001F14386D1330000F14706C6C13E03903F001
C03900FC0F8090383FFE00EB07F01D237EA122>I<153FEC0FFFA3EC007F81AEEB07F0EB
3FFCEBFC0F3901F003BF3907E001FF48487E48487F8148C7FCA25A127E12FEAA127E127F
A27E6C6C5BA26C6C5B6C6C4813803A03F007BFFC3900F81E3FEB3FFCD90FE0130026357D
B32B>I<EB0FE0EB7FFCEBF83F3903F00F80D807E013C0390FC007E0381F800315F0EA3F
0014014814F8127EA212FEA2B6FCA248C8FCA5127E127FA26C1418A26C6C1338000F1430
6D13706C6C13E03901F003C03900FC0F00EB3FFEEB07F01D237EA122>I<EB01FCEB07FF
90381F078090383E0FC0EB7C1F13FCEA01F8A20003EB070049C7FCACB512F0A3D803F0C7
FCB3A7487E387FFFE0A31A357FB417>I<151F90391FC07F809039FFF8E3C03901F07FC7
3907E03F033A0FC01F83809039800F8000001F80EB00074880A66C5CEB800F000F5CEBC0
1F6C6C48C7FCEBF07C380EFFF8380C1FC0001CC9FCA3121EA2121F380FFFFEECFFC06C14
F06C14FC4880381F0001003EEB007F4880ED1F8048140FA56C141F007C15006C143E6C5C
390FC001F83903F007E0C6B51280D91FFCC7FC22337EA126>I<EA03F012FFA312071203
AEEC1FC0EC7FF09038F1E0FC9038F3807C9038F7007E13FE497FA25BA25BB3486CEB7F80
B538C7FFFCA326347EB32B>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCAAEA07E012
FFA3120F1207B3A6EA0FF0B5FCA310337EB215>I<EA03F012FFA312071203AF913803FF
E0A36E1300EC00F8EC01E05D4A5A020FC7FC141C5C5C14F0EBF3F8EBF7FC13FEEBFC7EEB
F87F496C7E141F6E7E8114076E7E8114016E7E81486CEBFF80B500C313F0A324347EB329
>107 D<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347EB315>I<2703F01FE013FF
00FF90267FF80313C0903BF1E07C0F03E0903BF3803E1C01F02807F7003F387FD803FE14
70496D486C7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFFF0A33C217EA041>I<39
03F01FC000FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE497FA25BA25BB3486C
EB7F80B538C7FFFCA326217EA02B>I<EB07F0EB3FFE9038FC1F803901F007C03903C001
E000078048486C7E48C7127CA248147E003E143E007E143FA300FE1580A8007E1500A36C
147EA26C147C6D13FC6C6C485A00075C3903F007E03900FC1F80D93FFEC7FCEB07F02123
7EA126>I<3903F03F8000FFEBFFE09038F3C0F89038F7007ED807FE7F6C48EB1F804914
C049130F16E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D131F6DEB3F80160001FF
13FC9038F381F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0A325307EA02B>I<3803
E07C38FFE1FF9038E38F809038E71FC0EA07EEEA03ECA29038FC0F8049C7FCA35BB2487E
B512E0A31A217FA01E>114 D<EBFF06000713CE381F00FE003C133E48131E140E5A1406
A27EA200FE90C7FC6C7EEA7FFC383FFFC014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0
131F140F6C1307A37E15006C5B6C130E6C5B38F7807838E1FFE038C07F8019237EA11E>
I<1330A51370A313F0A21201A212031207381FFFFEB5FCA23803F000AF1403A814073801
F806A23800FC0EEB7E1CEB1FF8EB07E0182F7FAD1E>I<D803F0133F00FFEB0FFFA30007
EB007F000380B35DA35D12016D4813800000903803BFFC90387E073FEB1FFED907F81300
26227EA02B>I<B5EBFFF0A3D80FF0EB3F800007EC1F000003140E150C6D131C00011418
A26C6C5BA26D1370017E1360137F6D5BA290381F8180A214C3010F90C7FCA2EB07E6A214
FE6D5AA26D5AA36D5AA2146024217E9F29>I<B53A1FFF81FFF0A33C07F801FC003F8001
F049EB1E0000030100141C816C6C017C1318A26D017E1338000002FE1330A290267E01FF
5B159F168090263F030F5BA216C0903A1F8607C180A202C613E390260FCC0390C7FCA2D9
07FC13F6ECF80116FE6D486C5AA36D481378A36D48133034217F9F37>I<B53801FFF8A3
2603FE0013806C48EB7C0000001478017E1370017F5B90383F81C090381F8380D90FC3C7
FCEB07E614FE6D5A6D5A6D7E80805B9038039F809038071FC09038060FE0EB0C0790381C
03F0496C7E01707FEBF000000180000FECFF8026FFFC0313FCA326207F9F29>I<3A7FFF
807FF8A33A07F8001FC00003EC0F800001EC070015066C6C5BA26D131C017E1318A26D5B
A2EC8070011F1360ECC0E0010F5BA2903807E180A214F3010390C7FC14FBEB01FEA26D5A
A31478A21430A25CA214E05CA2495A1278D8FC03C8FCA21306130EEA701CEA7838EA1FF0
EA0FC025307F9F29>I<003FB512F0A2EB000F003C14E00038EB1FC00030EB3F80007013
7F1500006013FE495A13035CC6485A495AA2495A495A49C7FC153013FE485A12035B4848
1370485A001F14604913E0485A387F000348130F90B5FCA21C207E9F22>I<001C137038
7F01FC00FF13FEA4007F13FC381C0070170879B226>127 D E /Fe
3 52 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013
FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600
185A5A383FFFF85AB512F0A216217CA01E>I<13FF000313C0380F03E0381C00F014F800
3E13FC147CA2001E13FC120CC712F8A2EB01F0EB03E0EB0FC03801FF00A2380003E0EB00
F01478147C143E143F1230127812FCA2143E48137E0060137C003813F8381E03F0380FFF
C00001130018227DA01E>I E /Ff 31 123 df<EDFFF8020F13FF027F8049B612E00107
9038C01FF090390FFE0007D91FF8497ED93FE0131F4948497E13FF5C5A91C7FCA2705A70
5AEE03C093C8FCA6EE03FCB8FCA50001903880001F160FB3AB007FD9FE03B512F0A53440
7EBF3A>12 D<EA0FC0EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA0FC00E0E
798D1D>46 D<140F143F5C495A130F48B5FCB6FCA313F7EAFE071200B3B3A8B712F0A524
3C78BB34>49 D<903803FF80013F13F890B512FE00036E7E4881260FF80F7F261FC0037F
4848C67F486C6D7E6D6D7E487E6D6D7EA26F1380A46C5A6C5A6C5A0007C7FCC8FC4B1300
A25E153F5E4B5AA24B5A5E4A5B4A5B4A48C7FC5D4A5AEC1FE04A5A4A5A9139FF000F80EB
01FC495A4948EB1F00495AEB1F8049C7FC017E5C5B48B7FC485D5A5A5A5A5AB7FC5EA429
3C7BBB34>I<903801FFE0010F13FE013F6D7E90B612E04801817F3A03FC007FF8D807F0
6D7E82D80FFC131F6D80121F7FA56C5A5E6C48133FD801F05CC8FC4B5A5E4B5A4A5B020F
5B902607FFFEC7FC15F815FEEDFFC0D9000113F06E6C7E6F7E6F7E6F7E1780A26F13C0A2
17E0EA0FC0487E487E487E487EA317C0A25D491580127F49491300D83FC0495A6C6C495A
3A0FFE01FFF86CB65A6C5DC61580013F49C7FC010313E02B3D7CBB34>I<ED01F8150315
07A2150F151F153FA2157F15FF5C5CA25C5CEC1FBFEC3F3F143E147C14FCEB01F814F0EB
03E01307EB0FC0EB1F801400133E137E5B485A5B485A1207485A5B48C7FC5A127E5AB812
F8A5C8387FF800AA49B612F8A52D3C7DBB34>I<00071538D80FE0EB01F801FE133F90B6
FC5E5E5E5E93C7FC5D15F85D15C04AC8FC0180C9FCA9ECFFC0018713FC019F13FF90B67E
020113E09039F8007FF0496D7E01C06D7E5B6CC77FC8120F82A31780A21207EA1FC0487E
487E12FF7FA21700A25B4B5A6C5A01805C6CC7123F6D495AD81FE0495A260FFC075B6CB6
5A6C92C7FCC614FC013F13F0010790C8FC293D7BBB34>I<16FCA24B7EA24B7EA34B7FA2
4B7FA34B7FA24B7FA34B7F157C03FC7FEDF87FA2020180EDF03F0203804B7E02078115C0
82020F814B7E021F811500824A81023E7F027E81027C7FA202FC814A147F49B77EA34982
A2D907E0C7001F7F4A80010F835C83011F8391C87E4983133E83017E83017C81B500FC91
B612FCA5463F7CBE4F>65 D<B812F8EFFF8018F018FC8426003FFCC7EA3FFF050F138071
13C07113E08319F0A27113F8A719F05FA24D13E019C04D13804D1300EF3FFE933801FFF8
91B712E0188018F818FE02FCC7380FFF80050313C07113E07113F019F8F07FFCA2F03FFE
A219FFA38460A419FE187FA2F0FFFC4D13F85F4D13F0053F13E0BA12C0190018FC18F095
C7FC403E7DBD4A>I<B812F8EFFF8018F018FC18FF26003FFCC76C13C005077F05017F71
6C7E727E727E727E721380A27213C0A27213E0A21AF084A21AF8A41AFCA5197FA319FFA5
1AF8A41AF0A2601AE0A24E13C0A24E13804E1300604E5A4E5A4D485A050713E0057F5BBA
5A4EC7FC18F818C005F8C8FC463E7DBD50>68 D<B6051FB512C06F5EA26F5EA2D8003F97
C7FC6F16F7A26E6CED01E7A26E6CED03C7A36E6CED0787A26E6CED0F07A26E6C151EA36E
6D143CA26E6D1478A26E6D14F0A26F6CEB01E0A36F6CEB03C0A26F6CEB0780A26F6CEB0F
00A36F6C131EA26F6D5AA26F6D5AA26F6D5AA393387FF1E0A293383FFBC0A270B45AA370
90C7FCA2705AA2705AB600C0031FB612C0A2705AA2705A5A3E7CBD63>77
D<B87E17FCEFFF8018F08428003FFC000113FE9338003FFF050F7F717F717FA2858385A7
61A25F61614D5B4D90C8FCEF3FFE4CB45A91B712F018C04DC9FC717E9126FC000F7F0401
13F0707F717EA2717EA2717EA685A6F207C019C0A271140F07E01380B76DEBF01F719038
FC3F007190B5FC716C5B061F13F8CB000113E04A3F7DBD4E>82 D<903A03FFC001C0011F
EBF803017FEBFE0748B6128F4815DF48010013FFD80FF8130F48481303497F4848EB007F
127F49143F161F12FF160FA27F1607A27F7F01FC91C7FCEBFF806C13F8ECFFC06C14FCED
FF806C15E016F86C816C816C816C16806C6C15C07F010715E0EB007F020714F0EC003F15
03030013F8167F163F127800F8151FA2160FA27EA217F07E161F6C16E06D143F01E015C0
01F8EC7F8001FEEB01FF9026FFE00713004890B55A486C14F8D8F81F5CD8F00314C027E0
003FFEC7FC2D407ABE3A>I<903807FFC0013F13F848B6FC48812607FE037F260FF8007F
6DEB3FF0486C806F7EA36F7EA26C5A6C5AEA01E0C8FC153F91B5FC130F137F3901FFFE0F
4813E0000F1380381FFE00485A5B485A12FF5BA4151F7F007F143F6D90387BFF806C6C01
FB13FE391FFF07F36CEBFFE100031480C6EC003FD91FF890C7FC2F2B7DA933>97
D<EC7FF00107B5FC011F14C0017F14E09039FFF01FF0489038800FF848EB001F4848EB3F
FC120F485AA2485AA2007FEC1FF849EB0FF0ED03C000FF91C7FCAB127F7FA3003F153E7F
001F157E6C6C147C6C6C14FC91388001F86C9038C003F0C69038F81FE06DB512C0011F14
800107EBFE009038007FF0272B7DA92E>99 D<ECFFF0010713FE011F6D7E017F809039FF
E07FE0489038801FF048496C7E48486D7E48486D7E121F491301003F81A2485A6F1380A2
12FFA290B7FCA401F0C9FCA5127FA27F123FEE0F806C7E161F6C6C15006C6C5C6C6D137E
6C9038E001FC6C9038F80FF8013FB55A6D14C0010391C7FC9038007FF8292B7DA930>
101 D<903A03FF8007F0013F9038F83FF8499038FCFFFC48B712FE48018313F93A07FC00
7FC34848EB3FE1001FEDF1FC4990381FF0F81700003F81A7001F5DA26D133F000F5D6C6C
495A3A03FF83FF8091B5C7FC4814FC01BF5BD80F03138090CAFCA2487EA27F13F06CB6FC
16F016FC6C15FF17806C16C06C16E01207001F16F0393FE000034848EB003F49EC1FF800
FF150F90C81207A56C6CEC0FF06D141F003F16E001F0147FD81FFC903801FFC02707FF80
0F13006C90B55AC615F8013F14E0010101FCC7FC2F3D7DA834>103
D<13FFB5FCA512077EAFED1FF8EDFFFE02036D7E4A80DA0FE07F91381F007F023C805C4A
6D7E5CA25CA35CB3A4B5D8FE0FB512E0A5333F7CBE3A>I<EA01F8487E487E487E481380
A66C13006C5A6C5A6C5AC8FCA913FFB5FCA512077EB3ABB512F8A515407CBF1D>I<13FF
B5FCA512077EB092380FFFFEA5DB01FEC7FC4B5AED07F0ED1FE04B5A4B5A4BC8FCEC03FC
4A5A4A5A141FEC7FF84A7EA2818102E77F02C37F148102007F826F7E6F7E151F6F7E826F
7F6F7F816F7FB5D8FC07EBFFC0A5323F7DBE37>107 D<13FFB5FCA512077EB3B3AFB512
FCA5163F7CBE1D>I<01FFD91FF8ECFFC0B590B5010713F80203DAC01F13FE4A6E487FDA
0FE09026F07F077F91261F003FEBF8010007013EDAF9F0806C0178ECFBC04A6DB4486C7F
A24A92C7FC4A5CA34A5CB3A4B5D8FE07B5D8F03FEBFF80A551297CA858>I<01FFEB1FF8
B5EBFFFE02036D7E4A80DA0FE07F91381F007F0007013C806C5B4A6D7E5CA25CA35CB3A4
B5D8FE0FB512E0A533297CA83A>I<EC7FF0903803FFFE011FEBFFC0017F14F09039FFE0
3FF8489038800FFC3A03FE0003FE48486D7E000F168048486D13C0A2003F16E049147F00
7F16F0A400FF16F8AA007F16F0A46C6CECFFE0A2001F16C06C6C491380A26C6C4913003A
03FF800FFE6C9038E03FFC6C6CB512F0011F14C0010791C7FC9038007FF02D2B7DA934>
I<01FFEBFFE0B5000713FC021FEBFF80027F80DAFF8113F09139FC007FF8000301F06D7E
4A6D7E4A130F4A6D7E1880A27013C0A38218E0AA4C13C0A318805E18005E6E5C6E495A6E
495A02FCEBFFF0DAFF035B92B55A029F91C7FC028713FC028113C00280C9FCACB512FEA5
333B7DA83A>I<3901FE01FE00FF903807FF804A13E04A13F0EC3F1F91387C3FF8000713
F8000313F0EBFFE0A29138C01FF0ED0FE091388007C092C7FCA391C8FCB3A2B6FCA52529
7DA82B>114 D<90383FFC1E48B512BE000714FE5A381FF00F383F800148C7FC007E147E
A200FE143EA27E7F6D90C7FC13F8EBFFE06C13FF15C06C14F06C806C806C806C80C61580
131F1300020713C014000078147F00F8143F151F7EA27E16806C143F6D140001E013FF90
38F803FE90B55A15F0D8F87F13C026E00FFEC7FC222B7DA929>I<EB07C0A5130FA4131F
A3133F137FA213FF5A1207001FEBFFFEB6FCA40001EBC000B3151FA96CEBE03EA2017F13
7EECF8FC90383FFFF86D13F0010713E001001380203B7EB929>I<D9FF80EB0FF8B5EB0F
FFA50007EC007F6C153FB3A5167FA316FF6C5C4B7F6C903AC007DFFFE09138F01F9F6DB5
121F6D13FE010F13F8010101E0EBE000332A7CA83A>I<B500FC90383FFFC0A5000101C0
903803E0006E1307A26C5E6E130F017F5D6E131F013F92C7FC6E5B011F143E6E137E010F
147C6E13FCA26D5C15816D5C15C36D5C15E76D5C15FF6E5BA36E90C8FCA26E5AA26E5AA2
6E5AA26E5AA35D14075D000E130FD83F805B387FC01FD8FFE090C9FC5C143E147E5CEBC1
F8387FC3F0387E0FE06CB45A6C5B6C48CAFCEA03F8323B7EA737>121
D<003FB612F8A4D9F80113F001C014E0495A494813C04A1380007E15005C4A5A007C5C14
7F4A5A495B5DC65A495B495BA249EB007C495A5C137F494813FC484913F85C5A48EBC001
14804814034813004848130749131F007FECFFF0B7FCA426287DA72E>I
E /Fg 2 55 df<13E0EA01F0EA03F8A3EA07F0A313E0A2120F13C0A3EA1F80A21300A25A
123EA35AA3127812F8A25A12100D1E7D9F13>48 D<150EA2151E151C153C1578157015F0
15E0140115C0140315801407EC0F00140E141E141C143C14381478147014F0495A5C1303
5C130791C7FC5B131E131C133C13381378137013F05B1201485A5B120790C8FC5A120E12
1E121C123C5A127012F05A12601F3576A800>54 D E /Fh 1 83
df<007FB612E0B712FE6C6F7E2703C01E0313E0000190393C00F3F00238EB70F8EE783C
EE381E83EE3C07161C18801703A617071800EE3C0FEE380E173EEE78FCEEF7F892380FFF
E0023FB5128004FCC7FC16B8913838F03CED701CED781EED380EED3C0FED1C07031E7FED
0E03030F7FED0701EE81E0ED0380707E030113701778EEE0380300133C707EEE700EEE78
0F9338380780EE3C03041C13C093381E01E00003013C90380E00F0007FB539F00FFFFEB6
7F6C8137397DB836>82 D E /Fi 2 25 df<EC07FE91387FFFC049B512F0903907FE07FC
90271FF001FE133C49486C7ED9FFC014804849017F137C4890C7EBC078484815E0043F13
F8484816F0001F16F118E0484815F3041F13C0007F16F749168017FF180012FF495D5F5F
A2495DA383127F167F6D14FF003F0203143C6C6CEB0FC76C6CD93F87137C3C07FC03FE03
FCF80001B539F801FFF06C6C9039C0007FE0D90FFCC7EA1F8036277DA53F>11
D<15E01401A6EDFFF04A13FC021F13FE91387FF01ED901FF133E49EBFFFE903907FE7FF8
90390FFC1FE0011F90C7FC495A495AA2495AA25A5CA86CEBCFFE91B512807F90383FF807
131F017FB5FC01FD14003901F81FF84848C8FC485A485A5B121F48C9FCA25A127EA3B4FC
7F7F7FEA7FF813FF14E06C13FC6CEBFF8015E0000714FC6C14FFC615C0013F14E0130713
00141F1403EC007F151F150F16C0EB03C09138F81F800100B51200EC3FFCEC07F0274C7F
BA2A>24 D E /Fj 4 62 df<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215
267BA521>49 D<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80
A4127CC7FC15005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA
0180390300030012065A001FB5FC5A485BB5FCA219267DA521>I<13FF000313E0380F01
F8381C007C0030137E003C133E007E133FA4123CC7123E147E147C5C495AEB07E03801FF
8091C7FC380001E06D7E147C80143F801580A21238127C12FEA21500485B0078133E0070
5B6C5B381F01F03807FFC0C690C7FC19277DA521>I<B812E0A3CBFCABB812E0A32B117D
9633>61 D E /Fk 9 108 df<EB07F8EB1FFF01381380EB303FEC1F00140691C7FC1338
133CA27F131F6D7E806D7EA2EB3FF0EB7BF8EA01E13803C1FCEA0780EA0F00001E137C00
3E137E123C007C137CA25AA4481378A214F85CA2387801E05C6C485A6C48C7FCEA0FFE6C
5A192A7DA81E>14 D<1238127C12FE12FFA2127F123B1203A31206A3120C121812381270
122008127A8614>59 D<D93FFC903801FFF88001019138001F006E141E170C902603BF80
131C1718EC1FC0A2496C6C1338173090380607F0A290260E03F81370176090380C01FCA2
90261C00FE13E05F0118137FA20138EB3F81031F5B013014C1150F017014E3030790C7FC
016014F3150301E014FF6F5A5B15001201167C5B486C143C1207D8FFFC1418A235287DA7
35>78 D<013FB512E016FC903901FC007F4AEB0F80EE07C0010315E016035C17F01307EE
07E05CA2010FEC0FC017804AEB1F00163E011F14F8ED07F091B51280A290393F800FE0ED
03F002007F15015BA2137EA201FE1303A2495CA20001160817184914E017380003EDF070
B5D8C00113E0923800FFC0C9EA3F002D297DA732>82 D<143C147E14E6EB01C3EB038313
071402EB0F06130E131EA2EB3E0C133CEB7C18A2EB783013F8146014E03801F0C0EBF180
EBF30013F7EA03E613EC13F85B5B5BA31207120F121B123300E313040043130E0001131C
14383800E0E0EBF7C0EB7F00182A7FA81C>96 D<EC03E0EC0FF0EC1E38EC3C3C157CEC7C
FC1478ECF8F815701500A2495AA590B512E0A2903803E000A4495AA5495AA649C7FCA513
3EA4133C137C123CEA7C78127EEAFC7013F0EA78E0EA71C0EA3F80001EC8FC1E357CA820
>102 D<130E131F5BA2133E131C90C7FCA7EA03E0487EEA0C78EA187C1230A212605B12
C0A2EA01F0A3485AA2485AA2EBC180EA0F81A2381F0300A213066C5A131CEA07F06C5A11
287DA617>105 D<1407EC0F80141FA21500140E91C7FCA7EB03E0EB07F8EB0C3C1318EB
303E136013C0A248485AA2C7FCA25CA4495AA4495AA4495AA4495AA21238D87C1FC7FC12
FC133E485AEA70F8EA7FE0EA1F80193380A61B>I<133EEA07FEA2EA007CA213FCA25BA2
1201A25BA21203EC07809038E01FC0EC38600007EB61E014C3EBC187EBC307D80FC613C0
9038CC038001B8C7FC13E0487E13FEEB3F80EB0FC0486C7E1303003E1460A2127EECC0C0
127CECC18012FC903801E30038F800FE0070137C1B297CA723>I
E /Fl 8 89 df<EE01E01603EE07C0EE0F80161F1700163E5E5E15015E4B5A15074B5A5E
151F4BC7FC153E157E5DA24A5A14035D14075D140F5D141F5D143F92C8FC5C147E14FE5C
1301A25C13035C1307A25C130FA2495AA3495AA3137F91C9FCA25B5BA312015BA31203A2
5BA21207A35BA2120FA35BA3121FA45BA2123FA75B127FAC90CAFC5AB3B3A27E7FAC123F
7FA7121FA27FA4120FA37FA31207A27FA31203A27FA21201A37F1200A37F7FA280133FA3
6D7EA36D7EA2130780A2130380130180A2130080147E147F8081141F81140F8114078114
038114016E7EA2157E153E153F6F7E150F826F7E15036F7E821500167C82821780160FEE
07C0EE03E016012BF86C8242>32 D<12F07E127C7E123F7E6C7E6C7E6C7E7F12016C7E7F
137E133E133F6D7E130F806D7EA26D7E80130180130080147E147F8081141F81140F8114
0781A2140381140181A2140081A2157FA36F7EA382151FA282150FA3821507A382A21503
A282A31501A282A31500A382A482A21780A7163F17C0AC161F17E0B3B3A217C0163FAC17
80167FA71700A25EA45EA31501A35EA21503A35EA21507A25EA3150F5EA3151F5EA2153F
5EA34BC7FCA315FEA25D1401A25D14035D1407A25D140F5D141F5D143F92C8FC5C147E14
FE5C13015C13035C495AA2495A5C131F49C9FC133E137E5B5B485A12035B485A485A48CA
FC5A123E5A5A5A2BF87E8242>I<177C17FCEE01F8A2EE03F0EE07E0EE0FC0A2EE1F80EE
3F005E167E5E15015E15034B5A5E150F5E151F4B5AA24BC7FCA215FEA24A5AA24A5AA24A
5AA2140F5D141F5D143F5DA2147F92C8FC5CA25C13015C1303A25C1307A3495AA3495AA3
133F5CA3137F5CA313FF91C9FCA35A5BA31203A25BA31207A35BA3120FA45BA2121FA65B
A2123FA85BA2127FAE5B12FFB3A62E95688149>48 D<12F87E127EA27E6C7E6C7EA26C7E
6C7E7F12016C7E7F137E137F6D7E131F80130F806D7EA26D7EA26D7EA26D7EA2147FA26E
7EA281141F81140F811407A281140381A2140181140081A28182A36F7EA36F7EA382150F
A3821507A3821503A3821501A382A281A31780A3167FA317C0A4163FA217E0A6161FA217
F0A8160FA217F8AE160717FCB3A62E957E8149>I<B47EB3A6127F7FAE123FA27FA8121F
A27FA6120FA27FA41207A37FA31203A37FA21201A37F7EA380137FA380133FA380131FA3
6D7EA36D7EA3130380A2130180130080A28081143FA281141F81140F811407A26E7EA26E
7EA26E7EA2157FA26F7EA26F7E150F821507826F7E1501821500167E167F82EE1F80EE0F
C0A2EE07E0EE03F0EE01F8A2EE00FC177C2E95688349>64 D<EE07FCB3A617F8160FAE17
F0A2161FA817E0A2163FA617C0A2167FA41780A316FFA31700A35DA25EA315035EA31507
5EA3150F5EA3151F5EA34B5AA34B5AA393C7FC5DA25D14015D1403A25D14075DA2140F5D
141F5D143F5DA24AC8FCA214FEA2495AA2495AA2495AA2495A5C131F5C133F49C9FC137E
13FE5B485A12035B485A485AA2485A48CAFC127EA25A5A2E957E8349>I<BB12FC86A3D8
7FC0C9001F7FF0007F6C6C17076C6C050113806C6CEF007F1A1F6C6CF00FC06C6C18076C
6C1803F201E06C6D17006D6C1860013F19706E18306D7E6D6C18181B006D7E6D7E6D7EA2
6D7F6E7E6E7EA26E7E6E7E6E7EA26E7E6E7E80826F7E6F7EA26F7E6F7E6F5A5EA24B5A5E
4BCBFC153E157E5D5D4A5A4A5A14075D4A5A4ACCFC143E147E147C5C4948181801031930
495A4A18704948186049CC12E0491801017EF003C0017C180749180F4848F01F80000319
7F49EF01FF4848050713004848173F48CA000FB5FC48BA5AA25ABB5AA24D537B7F58>80
D<BF12E08AA38A6C90CCFC0900806C6D19076C6D07007F6C6D1A1F1D076C6DF201FF6C6D
747E6C6DF33F801E0F6C6D1B076D6CF303C06D6D1A01F600E06D7F6D6D1B706D1D30816D
6D1B186D6D1B007F816E7E6E7FA26E7F6E7F6E7FA26E7F6E7F6E7FA26F7E6F7F6F7FA26F
7F6F7F81836F7F6F7F167F83707F707F8284707F707FA2707F82715A60173F715A604D5A
4DCDFC17FEA24C5A4C5A4C5A4C5A4C5A5F163F4CCEFC16FE4B5A4B5A4B5AA24B5A4B5A4B
5A4BCFFC15FEA24A5A4A5A4A481B184A481B304A5A4B1B70023F1C604ACF12E002FE1B01
4948F303C049481B074948F30F801E1F49481B7F4948F3FF0049481A0349CE120F01FEF3
7FFEF403FF48481A7F4848077FB55A48BEFC48655AA248655ABFFC666D747B7F78>88
D E /Fm 19 121 df<49B4FC010F13E0017F13FC9038FF83FE4848C67E4848EB7F804848
EB3FC04848EB1FE0A2001F15F0A24848EB0FF8A3007F15FCA500FF15FEB3007F15FCA400
3F15F8A26D131F001F15F0A2000F15E06D133F000715C06C6CEB7F806C6CEBFF003900FF
83FE6DB45A011F13F0010190C7FC27387CB630>48 D<141E143E14FE1307133FB5FCA313
CFEA000FB3B3A6007FB61280A4213779B630>I<ED03E04B7EA24B7EA34B7EA24B7EA34B
7EA292B57EA34A8015F302038015E1A202078015C0020F80ED807FA2021F80ED003F4A80
023E131FA2027E80027C7F02FC814A7FA20101824A7F49B77EA3498202C0C7FC010F824A
147FA2011F8291C8123F4982013E151FA2017E82017C8101FE83B500F80107B61280A441
3A7DB948>65 D<003FB91280A4D9F800EBF003D87FC09238007FC049161F007EC7150FA2
007C1707A200781703A400F818E0481701A4C892C7FCB3AE010FB7FCA43B387DB742>84
D<903801FFC0010F13FC017F13FFD9FF8013802603FE0013C048485AEA0FF8121F13F012
3F6E13804848EB7F00151C92C7FC12FFA9127FA27F123FED01E06C7E15036C6CEB07C06C
6C14806C6C131FC69038C07E006DB45A010F13F00101138023257DA42A>99
D<EE7F80ED7FFFA4150381AF903801FF81010F13F1013F13FD9038FFC07F0003EB001FD8
07FC1307000F8048487F5B123FA2485AA312FFAA127FA27F123FA26C6C5B000F5C6C6C5B
6C6C4913C02701FF80FD13FE39007FFFF9011F13E1010313012F3A7DB935>I<903803FF
80011F13F0017F13FC3901FF83FE3A03FE007F804848133F484814C0001FEC1FE05B003F
EC0FF0A2485A16F8150712FFA290B6FCA301E0C8FCA4127FA36C7E1678121F6C6C14F86D
14F000071403D801FFEB0FE06C9038C07FC06DB51200010F13FC010113E025257DA42C>
I<161FD907FEEBFFC090387FFFE348B6EAEFE02607FE07138F260FF801131F48486C138F
003F15CF4990387FC7C0EEC000007F81A6003F5DA26D13FF001F5D6C6C4890C7FC3907FE
07FE48B512F86D13E0261E07FEC8FC90CAFCA2123E123F7F6C7E90B512F8EDFF8016E06C
15F86C816C815A001F81393FC0000F48C8138048157F5A163FA36C157F6C16006D5C6C6C
495AD81FF0EB07FCD807FEEB3FF00001B612C06C6C91C7FC010713F02B377DA530>103
D<13FFB5FCA412077EAFED7FC0913803FFF8020F13FE91381F03FFDA3C01138014784A7E
4A14C05CA25CA291C7FCB3A3B5D8FC3F13FFA4303A7DB935>I<13FFB5FCA412077EAF92
380FFFE0A4923803FC0016F0ED0FE0ED1F804BC7FC157E5DEC03F8EC07E04A5A141FEC7F
E04A7E8181A2ECCFFEEC0FFF496C7F806E7F6E7F82157F6F7E6F7E82150F82B5D8F83F13
F8A42D3A7EB932>107 D<13FFB5FCA412077EB3B3ACB512FCA4163A7DB91B>I<01FED97F
E0EB0FFC00FF902601FFFC90383FFF80020701FF90B512E0DA1F81903983F03FF0DA3C00
903887801F000749DACF007F00034914DE6D48D97FFC6D7E4A5CA24A5CA291C75BB3A3B5
D8FC1FB50083B512F0A44C257DA451>I<01FEEB7FC000FF903803FFF8020F13FE91381F
03FFDA3C011380000713780003497E6D4814C05CA25CA291C7FCB3A3B5D8FC3F13FFA430
257DA435>I<903801FFC0010F13F8017F13FFD9FF807F3A03FE003FE048486D7E48486D
7E48486D7EA2003F81491303007F81A300FF1680A9007F1600A3003F5D6D1307001F5DA2
6C6C495A6C6C495A6C6C495A6C6C6CB45A6C6CB5C7FC011F13FC010113C029257DA430>
I<9038FE03F000FFEB0FFEEC3FFF91387C7F809138F8FFC000075B6C6C5A5CA29138807F
80ED3F00150C92C7FC91C8FCB3A2B512FEA422257EA427>114 D<90383FF0383903FFFE
F8000F13FF381FC00F383F0003007E1301007C130012FC15787E7E6D130013FCEBFFE06C
13FCECFF806C14C06C14F06C14F81203C614FC131F9038007FFE140700F0130114007E15
7E7E157C6C14FC6C14F8EB80019038F007F090B512C000F8140038E01FF81F257DA426>
I<130FA55BA45BA25B5BA25A1207001FEBFFE0B6FCA3000390C7FCB21578A815F86CEB80
F014816CEBC3E090383FFFC06D1380903803FE001D357EB425>I<B500F1B538803FFFA4
3D07FE000FF80003E06C6C010715C082028015076C6E6C148015076C01C0ED0F00826E48
5C017FED801E5D90273FF01E7F5B17C0DAF83E147C011F90393C3FE078037C14F8903B0F
FC781FF0F0A29139FEF00FF10107EDF9E002FF14FB6D496CB45AA24B7E6D5EA26D496C90
C7FCA292C7FC6E5CA2023E147C023C143C40257EA445>119 D<B539F01FFFF0A4000390
398003F8006C01C013E06C1407D97FE05B6D6C485A6E48C7FC90381FFC3E010F5B903807
FEFC6D6C5A5D6D5B6D5B6E7E6E7E814A7EA24A7E903801F3FFD903E37FD907C17FEB0FC0
49486C7E4A6C7E013E80496D7E49130F00016E7EB590383FFFF8A42D257EA432>I
E /Fn 12 107 df<007FB81280B912C0A26C17803204799641>0
D<121C127FEAFF80A5EA7F00121C0909799917>I<15301578B3A6007FB812F8B912FCA2
6C17F8C80078C8FCB3A3007FB812F8B912FCA26C17F836367BB641>6
D<EF0180EF07C0171FEF7F80933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED1FF0
ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FC
EA3FF0EA7FC048CBFC5AEA7F80EA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE9038
00FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE0F
F8EE03FE933800FF80EF3FC0170FEF038094C7FCAE007FB81280B912C0A26C1780324479
B441>20 D<126012F812FEEA7F80EA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE90
3800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE
0FF8EE03FE933800FF80EF3FC0171FEF7F80933801FF00EE07FCEE1FF0EE7FC04B48C7FC
ED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC048
48CAFCEA07FCEA1FF0EA7FC048CBFC12FC1270CCFCAE007FB81280B912C0A26C17803244
79B441>I<181EA4181F84A285180785727EA2727E727E85197E85F11F80F10FC0F107F0
007FBA12FCBCFCA26C19FCCCEA07F0F10FC0F11F80F13F00197E61614E5A4E5AA24E5A61
180F96C7FCA260181EA4482C7BAA53>33 D<D90FF0ED07F0D93FFEED3FFE90B56C91B5FC
00036E903903F807C02707F07FF0903907C001E0270F801FF890390F8000F090260007FC
013EC71270001E6D6C491438486D6C0178141C00386D6D5A48DA7FC1150E92383FE3E000
6091261FF3C01406EEF78000E0DA0FFF1507486E90C812036F5AA26F7E6F7F707EA24C7E
6C4A6D14070060DBEFF81406ED03CF0070912607C7FC140E92380F83FE6CDB01FF141CDB
1E006D133C6C023E6D6C13786C4A6D6C13F0000FD901F090381FF8016C6C484890390FFE
0FE02703E01FC00103B512C0C6B5C76C1400D97FFC9138007FFCD90FE0ED0FF048267BA4
53>49 D<91381FFFFE91B6FC1303010F14FED91FF0C7FCEB7F8001FEC8FCEA01F8485A48
5A485A5B48C9FCA2123EA25AA2127812F8A25AA2B712FE16FFA216FE00F0C9FCA27EA212
78127CA27EA27EA26C7E7F6C7E6C7E6C7EEA00FEEB7F80EB1FF06DB512FE010314FF1300
021F13FE283279AD37>I<0307B612FE033FEDFF804AB812C0140791260F807EC7FC9126
3C00FEEC3F004A161E4A491418010194C7FC495A01071301A2D90FC05B14801400011813
0390C75BA34B5AA3150F5EA34B5AA293B512FC4B5C604B14C0037ECAFCA25DA25D1401A2
4A5AA25D14075D140F5D141F92CBFC5C0006133E003E137E007E137CB413FC6D5AEBC1F0
EBF1E06CB45A6C90CCFC6C5AEA07F0423C7EB83C>70 D<EC01F8140FEC3F80ECFC00495A
495A495AA2130F5CB3A7131F5C133F49C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA
00FE137F6D7E131F80130FB3A7801307A26D7E6D7E6D7EEC3F80EC0FF814011D537ABD2A
>102 D<12FCEAFFC0EA07F0EA01FCEA007E7F80131F80130FB3A7801307806D7E6D7EEB
007EEC1FF0EC07F8EC1FF0EC7E00495A495A495A5C130F5CB3A7131F5C133F91C7FC137E
485AEA07F0EAFFC000FCC8FC1D537ABD2A>I<126012F0B3B3B3B3A91260045377BD17>
106 D E /Fo 18 122 df<EC3FC0ECFFF8903807E07C90380F801FD93F00EB800C017E13
0F49903807C01C4848ECE018485A484801031338000FEDF0305B001F16704848156017E0
007F16C090C713F1178016F34816004815F716FE5EA2485D5EA4007E1407150F003E9138
1DF818003F14796C02E11338270F8007C013303B07E03F007CF02601FFF8EB3FC026003F
C0EB0F802E267DA435>11 D<1403EC3FF891387FFF80D901E313C014800103133F913800
1F80ED070092C7FC80A280A2808013018080130080147F81143F8149B47E130790380F8F
F0EB3E0F496C7E13F83801F003D803E07F1207380FC0011380121FEA3F0014005A127EA2
12FE5D481301A35DA24813035D6C13075D127C4A5A6C91C7FC5C6C133E6C6C5A3807C0F0
3801FFE0D8003FC8FC223D7DBB25>14 D<EC03F0EC0FFCEC3E1EEC780F14F00101148090
3803E007D907C013C0EB0F80131F14004914E0137EA25BA2485A1203A249130F1207A248
5AA2ED1FC0121F5BA290B6FC481580A3903880007F007F150090C7FCA215FEA2127E4A5A
A200FE5C1403A2007C5C4A5AA24A5AA24A5A92C7FC5C6C137E147C001E5B495A6C485A38
0787806CB4C8FCEA00F8233C7EBA27>18 D<133F14C0EB07F06D7E801301A26D7EA3147F
A36E7EA36E7EA36E7EA36E7EA36E7EA36E7EA26E7EA214014A7E5C4A7E91381E3F80143C
14784A6C7E1301EB03E049486C7EEB0F80EB1F00496D7E137E5B48486D7E485A485A000F
6E7E485A485A48C87E12FE167F4816800070151F293B7CB930>21
D<1406A6913807FFC04A13E091383F80609138FDFFE0903903F87F804948C7FC495A495A
495A137F91C8FC5B5B1201A25BA512007F137E90383F3FF090381FFFFC90380FC01C9038
1FFFF890383C7FE001F0C8FC485A485A485AA248C9FC121EA25AA2127C1278A312F87EA2
127E127F7FEA3FE013FC6CB4FC6C13E06C13F8000113FF6C6C13C0010F13F001037FEB00
7F140F14031400A4010C5BEB0E0190380783E0903801FF80D9007EC7FC234B7EB924>24
D<15FE913803FF8091380F83E091383E01F091387C00F85C494813FC0103147C4948137E
5C130F495AA249C7FC16FE5B137EA2150113FE4914FCA20001140316F85BED07F01203ED
0FE04914C0151F000715806DEB3F00157E6D5B390FEE01F09038E707E09038C3FF80D9C0
FCC7FC001F90C8FCA25BA2123FA290C9FCA25AA2127EA212FEA25AA2127027377EA42B>
26 D<121C127FEAFF80A5EA7F00121C0909798817>58 D<121C127FEAFF80A213C0A312
7F121C1200A412011380A2120313005A1206120E5A5A5A12600A19798817>I<126012FC
B4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC
07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE01FF933800
7F80EF1FC0A2EF7F80933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED1FF0ED7FC0
4A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FCEA3FF0
EA7FC048CBFC12FC1270323279AD41>62 D<9339FF8001C0030F13E0037F9038F8038091
3A01FF807E07913A07F8000F0FDA1FE0EB079FDA3F80903803BF0002FFC76CB4FCD901FC
80495A4948157E495A495A4948153E017F163C49C9FC5B1201484816385B1207485A1830
121F4993C7FCA2485AA3127F5BA312FF90CCFCA41703A25F1706A26C160E170C171C5F6C
7E5F001F5E6D4A5A6C6C4A5A16076C6C020EC8FC6C6C143C6C6C5C6CB4495A90393FE00F
C0010FB5C9FC010313FC9038007FC03A3D7CBA3B>67 D<0103B500F8903807FFFC5BA290
260007F8C813804BEDFC0019F0020F4B5AF003804B4AC7FC180E021F1538604B5CEF0380
023F4AC8FC170E4B133C1770027F5C4C5ADB0007C9FC160E4A5B167E4A13FE4B7E01015B
92380E7F80ECFC1CED383F010301E07FECFDC04A486C7EECFF00D907FC6D7E5C4A130783
130F707E5C1601011F81A24A6D7EA2013F6F7EA24A143F84137F717E91C8123F496C81B6
0107B512C0A26146397DB847>75 D<1578EC01FEEC07C6EC0F861507EC1E03143E147C15
07ECF806A2EB01F00103130EECE00C1307A2ECC01C010F1318153890381F803015701560
90383F00E015C01401017F1380EB7E03EC07001406EBFE0E495A5C143000011370495AEB
F9C0EBFB8001FFC7FC5B5B485AA25BA4485A120F121DEA39F0127100E1140C0080143C00
00147015E090387801C0EC078090383C1E00EB1FF8EB07E0203C7FBA23>96
D<16F8ED03FEED0F8792381F0F80ED3E3F167F157CA215FC1700161C4A48C7FCA414035D
A414075DA20107B512F0A39026000FE0C7FC5DA4141F5DA4143F92C8FCA45C147EA514FE
5CA413015CA4495AA45C1307A25C121E123F387F8F80A200FF90C9FC131E12FEEA7C3CEA
7878EA1FF0EA07C0294C7CBA29>102 D<14E0EB03F8A21307A314F0EB01C090C7FCAB13
F8EA03FEEA070F000E1380121C121812381230EA701F1260133F00E0130012C05BEA007E
A213FE5B1201A25B12035BA20007131813E01438000F133013C01470EB806014E014C013
81EB838038078700EA03FEEA00F815397EB71D>105 D<EB03F0EA01FFA3EA00075CA313
0F5CA3131F5CA3133F91C8FCA35B017EEB07C0ED1FF0ED783801FEEBE0F89039FC01C1FC
EC0383EC07070001130ED9F81C13F891383803F091387001E0000349C7FCEBF1C0EBF380
01F7C8FCEA07FEA2EBFFE0EBE7F8380FE0FEEBC07F6E7E141F001F80D9800F1330A21670
003F011F136001001380A216E04815C0007E1481020F1380158300FE903807870048EB03
FE0038EB00F8263B7CB92B>107 D<01F816F0D803FE9138E001F8D8070F903801F00300
0ED9800314FC121C12180038020713010030EDE000D8701F167C1260030F143CD8E03F16
3800C001005B5BD8007E131F183001FE5C5B033F1470000117604991C7FCA218E000034A
14C049137E17011880170318005F03FE1306170E000101015C01F801BF5B3B00FC039F80
70903A7E0F0FC0E0903A1FFC03FFC0902703F0007FC7FC36267EA43B>119
D<903907E001F090391FF807FC9039783E0E0F9039E01F1C1FD801C09038383F803A0380
0FF07F0100EBE0FF5A000E4A1300000C157E021F133C001C4AC7FC1218A2C7123FA292C8
FCA25CA2147EA214FEA24A130CA20101141C001E1518003F5BD87F81143801835C00FF15
60010714E03AFE0E7C01C0D87C1C495A2778383E0FC7FC391FF00FFC3907C003F029267E
A42F>I<13F8D803FE1470D8070F14F8000EEB8001121C121800381403003015F0EA701F
1260013F130700E0010013E012C05BD8007E130F16C013FE5B151F000115805BA2153F00
0315005BA25D157EA315FE5D1401000113033800F80790387C1FF8EB3FF9EB0FE1EB0003
5DA2000E1307D83F805B007F495AA24A5A92C7FCEB003E007C5B00705B6C485A381E07C0
6CB4C8FCEA01FC25367EA429>I E /Fp 51 124 df<EE3FFC4BB51280923907E007C092
391F8001E0DB3F0013F0037E13034B1307A24A5A18E04A48EB038094C7FCA314075DA414
0F5DA3010FB7FCA25F903A001F80007EA217FE023F5C92C7FCA216015F5C147E16035FA2
14FE4A13075FA30101140F5F4AECC1C0A2161F1783010316805CA2EF870013074A5CEE0F
8EEE079EEE03FC010FEC00F04A91C7FCA35C131FA2001C90CAFC127E5BEAFE3E133C137C
EAF878EA78F0EA3FE0EA0F80344C82BA2F>12 D<EA01E0EA07F0120F13F8121FA3120FEA
07B0EA0030A21370136013E013C0120113801203EA0700120E5A5A5A5A5A0D196EB919>
39 D<150C151C153815F0EC01E0EC03C0EC0780EC0F00141E5C147C5C5C495A1303495A
5C130F49C7FCA2133EA25BA25BA2485AA212035B12075BA2120F5BA2121FA290C8FCA25A
A2123EA2127EA2127CA412FC5AAD1278A57EA3121C121EA2120E7EA26C7E6C7EA212001E
5274BD22>I<140C140E80EC0380A2EC01C015E0A2140015F0A21578A4157C153CAB157C
A715FCA215F8A21401A215F0A21403A215E0A21407A215C0140F1580A2141F1500A2143E
A25CA25CA2495AA2495A5C1307495A91C7FC5B133E133C5B5B485A12035B48C8FC120E5A
12785A12C01E527FBD22>I<EA03C0EA07F0120F121F13F8A313F0EA07B0EA0030137013
60A213E013C01201EA038013005A120E5A5A5A5A5A0D197A8819>44
D<387FFFF8A2B5FCA214F0150579941E>I<120EEA3F80127F12FFA31300127E123C0909
778819>I<15181538157815F0140114031407EC0FE0141F147FEB03FF90383FEFC0148F
EB1C1F13001580A2143FA21500A25CA2147EA214FEA25CA21301A25CA21303A25CA21307
A25CA2130FA25CA2131FA25CA2133FA291C7FC497EB61280A31D3877B72A>49
D<16E0ED01F01503A3150716E0A3150F16C0A2151F1680A2ED3F00A3157EA2157C15FC5D
14015D14035D14075D140F5D141F92C7FC143EA25CECF81C153E903801F07EEB03E014C0
90380780FE130F49485A133EEB7C01137801F05BEA01E03803C003EA0FFE391FFFC3F048
13FB267C01FF13403AF0003FFFE000601307C71400EC0FE05DA3141F5DA3143F92C7FCA4
143E141C24487DB72A>52 D<157F913803FFC0020F13E0EC3F8191387E00F002F8137090
3903F003F0903807E007EB0FC0EB1F80020013E04914C0017E90C7FC13FE5B485AA21203
485AA2380FE07E9038E3FF809038E783E0391FCE01F09038DC00F813F84848137C5B4913
7EA2485AA290C7FC15FE5A5AA214015D5AA214035DA348495A5D140F5D4A5A6C49C7FC12
7C147C6C485A6C485A6CB45A6C1380D801FCC8FC243A76B72A>54
D<EC01FCEC0FFF023F138091387E07C0903901F803E0EB03F0903907E001F0EB0FC0EB1F
80013F14F814005B137E13FEA2485AA2150312035BA2ED07F012075B150FA216E0000314
1FA2153FED7FC0120115FF6C6C5A90397803BF8090383C0F3FD91FFC1300903807F07F90
C7FC157E15FE5D14015D4A5AA2003E495A007F495A5D4AC7FC00FE5B48137E007013F838
7803F0387C0FE0383FFF806C48C8FCEA03F8253A78B72A>57 D<EE01C01603A21607160F
A2161F83163FA2167F16FF16EF150116CFED038FA2ED070FA2150E151E151C1538A20370
7FA2EDE007A2EC01C014031580EC0700A2140EA25CA25C027FB5FCA291B6FC9139E00007
F849481303A2495A130791C7FC5B130E5BA25B1378137013F0EA03F8486C4A7EB56C48B5
12F0A3343C7BBB3E>65 D<0107B612FCEFFF8018C0903B000FF0001FF04BEB07F8170302
1F15FC17014B14FEA2023F1400A24B1301A2147F18FC92C7120318F84A140718F04AEC0F
E0EF1FC00101ED3F80EF7F004AEB01FEEE07F849B612E05F9139F80007F0EE01FC01076E
7E177F4AEC3F80A2010F16C0171F5CA2131F173F5CA2133FEF7F805C1800017F5D4C5A91
C7485A5F49140FEE1FE0494A5A00014AB45AB748C7FC16F816C037397BB83A>I<DB03FE
130E92393FFF801E92B5EAE03C913903FE01F0913A0FF000787CDA3FC0EB3CFC4AC7EA1F
F802FE140FEB03FC49481407494815F049481403495A5C49C813E05B485A5B000317C048
5AA2485A1880485A94C7FCA2485AA3127F5BA312FF90CBFCA41738A217784816707E17F0
6C5E16015F16036C6C4A5A94C7FC001F150E6D141E000F5D6D5C6C6C495A6C6CEB03C0D8
01FEEB0F8027007F807EC8FC6DB45A010F13E0010090C9FC373D74BA3B>I<0107B8FCA3
903A000FF000034BEB007F183E141F181E5DA2143FA25D181C147FA29238000380A24A13
0718004A91C7FC5E13015E4A133E167E49B512FEA25EECF8000107147C163C4A1338A201
0F147818E04A13701701011F16C016004A14031880013F150718004A5CA2017F151E173E
91C8123C177C4915FC4C5A4914070001ED7FF0B8FCA25F38397BB838>69
D<0107B712FEA3903A000FF000074B1300187C021F153CA25DA2143FA25D1838147FA292
C8FCEE03804A130718004A91C7FCA201015CA24A131E163E010314FE91B5FC5EA2903807
F800167C4A1378A2130FA24A1370A2011F14F0A24A90C8FCA2133FA25CA2137FA291CAFC
A25BA25B487EB6FCA337397BB836>I<0103B512F8A390390007F8005DA2140FA25DA214
1FA25DA2143FA25DA2147FA292C7FCA25CA25CA21301A25CA21303A25CA21307A25CA213
0FA25CA2131FA25CA2133FA25CA2137FA291C8FC497EB6FCA25C25397CB820>73
D<0107B512FCA25E9026000FF8C7FC5D5D141FA25DA2143FA25DA2147FA292C8FCA25CA2
5CA21301A25CA21303A25CA21307A25CA2130F170C4A141CA2011F153C17384A1478A201
3F157017F04A14E01601017F140317C091C71207160F49EC1F80163F4914FF0001020713
00B8FCA25E2E397BB834>76 D<902607FFF8923807FFF0614F13E0D9000FEFF0004F5AA2
021F167FF1EFC0141DDA1CFCEC01CF023C16DF9538039F800238ED071FA20278ED0E3F97
C7FC0270151CA202F04B5AF0707E14E0037E14E0010117FE4D485A02C0EC0380A20103ED
0701610280140EA20107ED1C0305385B14006F137049160705E05B010EEC01C0A2011E91
3803800F61011CEC0700A2013C020E131F4C5C1338ED1FB80178163F04F091C8FC01705C
A201F04A5B187E00015DD807F816FEB500C09039007FFFFC151E150E4C397AB84A>I<90
2603FFF891B512E0A281D90007923807F8006F6E5A61020F5E81DA0E7F5DA2021E6D1307
033F92C7FC141C82DA3C1F5C70130EEC380FA202786D131E0307141C147082DAF003143C
70133814E0150101016E1378030014705C8201036E13F0604A1480163F010715C1041F5B
91C7FC17E149EC0FE360010E15F31607011E15FF95C8FC011C80A2013C805F1338160013
785F01F8157CEA03FC267FFFE0143CB51538A243397CB83E>I<0107B612F817FF188090
3B000FF0003FE04BEB0FF0EF03F8141FEF01FC5DA2023F15FEA25DA2147FEF03FC92C7FC
A24A15F817074A15F0EF0FE01301EF1FC04AEC3F80EFFE0001034A5AEE0FF091B612C04C
C7FCD907F8C9FCA25CA2130FA25CA2131FA25CA2133FA25CA2137FA291CAFCA25BA25B12
01B512FCA337397BB838>80 D<0103B612F017FEEFFF80903B0007F8003FC04BEB0FF017
07020FEC03F8EF01FC5DA2021F15FEA25DA2143FEF03FC5DA2027FEC07F818F092C7120F
18E04AEC1FC0EF3F004A14FEEE01F80101EC0FE091B6128004FCC7FC9138FC003F0103EC
0F80834A6D7E8301071403A25C83010F14075F5CA2011F140FA25CA2133F161F4AECE007
A2017F160F180E91C7FC49020F131C007F01FE153CB5913807F078040313F0CAEAFFE0EF
3F80383B7CB83D>82 D<92383FC00E913901FFF01C020713FC91391FC07E3C91393F001F
7C027CEB0FF84A130749481303495A4948EB01F0A2495AA2011F15E091C7FCA34915C0A3
6E90C7FCA2806D7E14FCECFF806D13F015FE6D6D7E6D14E0010080023F7F14079138007F
FC150F15031501A21500A2167C120EA3001E15FC5EA3003E4A5AA24B5AA2007F4A5A4B5A
6D49C7FC6D133ED8F9F013FC39F8FC03F839F07FFFE0D8E01F138026C003FCC8FC2F3D7A
BA2F>I<0007B812E0A25AD9F800EB001F01C049EB07C0485AD900011403121E001C5C00
3C17801403123800785C00701607140700F01700485CA2140FC792C7FC5DA2141FA25DA2
143FA25DA2147FA292C9FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA25CEB
3FF0007FB512F8B6FCA2333971B83B>I<B500F8903803FFFEA218FCD803FEC8EA7FC049
ED3F000001163E173C17385FA25F16015F6D4A5AA200004BC7FC5E160E5EA25EA25E5EA2
6D495A7F4B5A150793C8FC150EA25D153C15385D1480013F5B14815DEC8380A20287C9FC
A2148E149E149C14F8A26D5AA25C5CA25CA291CAFC131EA2373B6FB83E>86
D<14F8EB07FE90381F871C90383E03FE137CEBF801120148486C5A485A120FEBC001001F
5CA2EA3F801403007F5C1300A21407485C5AA2140F5D48ECC1C0A2141F15831680143F15
87007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901F000F0222677
A42A>97 D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0F8EBE7FE
9038EF0F80390FFC07C013F89038F003E013E0D81FC013F0A21380A2123F1300A214075A
127EA2140F12FE4814E0A2141F15C05AEC3F80A215005C147E5C387801F8007C5B383C03
E0383E07C0381E1F80D80FFEC7FCEA01F01C3B77B926>I<147F903803FFC090380FC1E0
90381F0070017E13784913383901F801F83803F003120713E0120FD81FC013F091C7FC48
5AA2127F90C8FCA35A5AA45AA3153015381578007C14F0007EEB01E0003EEB03C0EC0F80
6CEB3E00380F81F83803FFE0C690C7FC1D2677A426>I<ED01F815FFA3150316F0A21507
A216E0A2150FA216C0A2151FA21680A2153FA202F81300EB07FE90381F877F90383E03FF
017C5BEBF80112013803F00048485B120FEBC001121F5DEA3F801403127F01005BA21407
5A485CA2140FA248ECC1C0A2141F15C3ED8380143F1587007C017F1300ECFF076C485B90
38038F8E391F0F079E3907FE03FC3901F000F0253B77B92A>I<147F903803FFC090380F
C1E090383F00F0017E13785B485A485A485A120F4913F8001F14F0383F8001EC07E0EC1F
80397F81FF00EBFFF891C7FC90C8FC5A5AA55AA21530007C14381578007E14F0003EEB01
E0EC03C06CEB0F806CEB3E00380781F83803FFE0C690C7FC1D2677A426>I<ED07C0ED1F
F0ED3E38ED7C3CEDF8FC15F9140115F1020313F8EDF0F0160014075DA4140F5DA4141F5D
010FB512C05B16809039003F800092C7FCA45C147EA414FE5CA413015CA413035CA41307
5CA4130F5CA3131F5CA391C8FC5B121CEA7E3EA2EAFE3C137C1378EAF8F01278EA3FC0EA
0F80264C82BA19>I<EC07C0EC3FF09138FC38E0903901F01FF0EB03E0903807C00FEB0F
80011F1307D93F0013E05B017E130F13FE4914C01201151F1203491480A2153F12074914
00A25DA249137EA215FEA25D00031301140314076C6C485A0000131FEB787BEB3FF39038
0FC3F0EB00031407A25DA2140F5D121C007E131F5D00FE49C7FC147E5C387801F8387C07
E0381FFF80D803FEC8FC24367CA426>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5C
A3133F91C8FCA35B90387E07F0EC1FFCEC783E9038FFE01F02C01380EC800F1400485A16
C05B49EB1F8012035BA2153F000715005BA25D000F147E5B15FE5D121FD98001131C15F8
163C003F01031338010013F0A216704814E0007E15F016E0EDE1C000FE903801E3804890
3800FF000038143C263B7BB92A>I<EB01C0EB07E014F0130F14E01307EB038090C7FCAB
13F0EA03FCEA071EEA0E1F121CA212385B1270A25BEAF07E12E013FEC65AA212015B1203
A25B12075BA2000F13E013C013C1001F13C01381A2EB83801303EB0700A2130E6C5AEA07
F8EA01E0143879B619>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FC
A35B017EEB0F80ED3FE015F09039FE01C1F09038FC0387EC0707140E0001011C13E0EBF8
3891383003800270C7FC00035BEBF1C0EBF38001FFC8FCEA07FC7FEBFFC0EBE7F8380FE1
FCEBC07E147F80001F809039801F81C0A21583003F013F138001001303A2150748150000
7E133EEC1E0E151E00FE6D5A48EB07F80038EB01E0243B7BB926>107
D<EB0FC0EA07FFA3EA001F1480A2133FA21400A25BA2137EA213FEA25BA21201A25BA212
03A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AA2EA7E0EA212FE131E
EAFC1CA2133C133812F81378EA7870EA7CE0121FEA0F80123B79B915>I<D801E001FEEB
07F03C07F803FF801FFC3C0E3C0F07C0783E3C1E3E3C03E1E01F261C1F78D9F3C013803C
383FF001F7800F02E01400007801C013FE007018C002805B4A4848EB1F80EAF07FD8E07E
5CA200000207143F01FE1700495CA2030F5C0001177E495C18FE031F5C120349DA800113
1C18F8033F153C00070403133849020013F0A24B1570000F17E049017E15F019E003FEEC
E1C0001FEE01E34949903800FF000007C70038143C3E2679A444>I<D801E013FE3A07F8
03FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39383FF00114E0007813C00070811480
4A485AEAF07FEAE07EA20000140701FE5C5BA2150F00015D5B151F5E12034990383F8380
160316070007027F130049137EA2160E000F147C49141E161C5E001FEC3C7849EB1FE000
07C7EA0780292679A42F>I<147F903803FFC090380FC1F090381F00F8017E137C5B4848
137E4848133E0007143F5B120F485AA2485A157F127F90C7FCA215FF5A4814FEA2140115
FC5AEC03F8A2EC07F015E0140F007C14C0007EEB1F80003EEB3F00147E6C13F8380F83F0
3803FFC0C648C7FC202677A42A>I<9039078007C090391FE03FF090393CF0787C903938
F8E03E9038787FC00170497EECFF00D9F0FE148013E05CEA01E113C15CA2D80003143FA2
5CA20107147FA24A1400A2010F5C5E5C4B5A131F5EEC80035E013F495A6E485A5E6E48C7
FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA21201A25BA21203A25B1207B512
C0A3293580A42A>I<ECF803903807FE0790381F871F90383E03BF017C13FEEBF8011201
3803F000484813FC120F5B001F130115F8EA3F80A2007F1303010013F0A34813074814E0
A3140F4814C0A3141F1580143FA2007C137FECFF006C5AEB03BF381F0F7F3807FE7EEA01
F0C7FC14FE5CA313015CA313035C130748B512C0A3203577A426>I<3903C003F0390FF0
1FFC391E783C0F381C7C703A3C3EE03F8038383FC0EB7F800078150000701300151CD8F0
7E90C7FCEAE0FE5BA2120012015BA312035BA312075BA3120F5BA3121F5BA3123F90C9FC
120E212679A423>I<14FE903807FF8090380F83C090383E00E04913F00178137001F813
F00001130313F0A215E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D13807F010F13
C01300143F141F140F123E127E00FE1480A348EB1F0012E06C133E00705B6C5B381E03E0
6CB45AD801FEC7FC1C267AA422>I<EB0380EB07C0130FA4131F1480A3133F1400A35B13
7E007FB5FCA2B6FC3800FC00A312015BA312035BA312075BA3120F5BA3121FEB801CA214
3C003F1338EB0078147014F014E0EB01C0EA3E03381F0780380F0F00EA07FCEA01F01835
79B31C>I<13F8D803FEEB01C0D8078FEB03E0390E0F8007121E121C0038140F131F0078
15C01270013F131F00F0130000E015805BD8007E133FA201FE14005B5D120149137EA215
FE120349EBFC0EA20201131E161C15F813E0163CD9F003133814070001ECF07091381EF8
F03A00F83C78E090393FF03FC090390FC00F00272679A42D>I<01F0130ED803FC133FD8
071EEB7F80EA0E1F121C123C0038143F49131F0070140FA25BD8F07E140000E08013FEC6
485B150E12015B151E0003141C5BA2153C000714385B5DA35DA24A5A140300035C6D48C7
FC0001130E3800F83CEB7FF8EB0FC0212679A426>I<01F01507D803FC903903801F80D8
071E903907C03FC0D80E1F130F121C123C0038021F131F49EC800F00701607A249133FD8
F07E168000E0ED000313FEC64849130718000001147E5B03FE5B0003160E495BA2171E00
070101141C01E05B173C1738A217781770020314F05F0003010713016D486C485A000190
391E7C07802800FC3C3E0FC7FC90393FF81FFE90390FE003F0322679A437>I<903907E0
07C090391FF81FF89039787C383C9038F03E703A01E01EE0FE3803C01F018013C0D80700
14FC481480000E1570023F1300001E91C7FC121CA2C75AA2147EA214FEA25CA21301A24A
1370A2010314F016E0001C5B007E1401010714C000FEEC0380010F1307010EEB0F003978
1CF81E9038387C3C393FF03FF03907C00FC027267CA427>I<13F0D803FCEB01C0D8071E
EB03E0D80E1F1307121C123C0038140F4914C01270A249131FD8F07E148012E013FEC648
133F160012015B5D0003147E5BA215FE00075C5BA214015DA314035D14070003130FEBF0
1F3901F87FE038007FF7EB1FC7EB000F5DA2141F003F5C48133F92C7FC147E147C007E13
FC387001F8EB03E06C485A383C1F80D80FFEC8FCEA03F0233679A428>I<903903C00380
90380FF007D91FF81300496C5A017F130E9038FFFE1E9038F83FFC3901F007F849C65A49
5B1401C7485A4A5A4AC7FC141E5C5C5C495A495A495A49C8FC131E5B49131C5B4848133C
48481338491378000714F8390FF801F0391FFF07E0383E1FFFD83C0F5B00785CD8700790
C7FC38F003FC38E000F021267BA422>I<B712FCA2260279962A>I
E /Fq 80 128 df<011FB512FEA39026001FFEC8FCEC07F8A8EC3FFE0103B512E0D91FF7
13FC90397F07F87F01FCEC1F80D803F8EC0FE0D807F06E7ED80FE06E7E001F82D83FC06E
7EA2007F8201808000FF1780A7007F170001C05C003F5EA2D81FE04A5A000F5ED807F04A
5AD803F84A5AD800FCEC1F80017F027FC7FC90391FF7FFFC0103B512E09026003FFEC8FC
EC07F8A8EC1FFE011FB512FEA331397BB83C>8 D<DA0FF813FC91397FFF07FF903B01F8
07DF83C0903A07E001FF0F903B1F8007FE1FE090393F000FFC137E16F85B9338F0078048
48010790C7FC1503ACB812F8A32801F80003F0C7FCB3AB486C497E267FFFE0B512F0A333
3B7FBA30>11 D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007
017E497EA25BA2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C49
7E267FFFE0B512C0A32A3B7FBA2E>I<EC0FFC91387FFF70903901F803F0903807E00790
381F800FEB3F00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E267FFFE0
B512C0A32A3B7FBA2E>I<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C07E001
CFC00380903C1F8000FF0001C090273F0007FE130F017E4948497EA2495CA248485C0307
6E5A03030203C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E
267FFFE0B500C1B51280A3413B7FBA45>I<121C127FEAFF80A213C0A3127F121C1200A4
12011380A2120313005A1206120E5A5A5A12600A1979B917>39 D<146014E0EB01C0EB03
80EB0700130E131E5B5BA25B485AA2485AA212075B120F90C7FCA25A121EA2123EA35AA6
5AB2127CA67EA3121EA2121F7EA27F12077F1203A26C7EA26C7E1378A27F7F130E7FEB03
80EB01C0EB00E01460135278BD20>I<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA2
1378A2137C133C133E131EA2131F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A314
00A25B131EA2133E133C137C1378A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A1352
7CBD20>I<15301578B3A6007FB812F8B912FCA26C17F8C80078C8FCB3A6153036367BAF
41>43 D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E
5A5A5A12600A19798817>I<B512FCA516057F941C>I<121C127FEAFF80A5EA7F00121C09
09798817>I<150C151E153EA2153C157CA2157815F8A215F01401A215E01403A215C014
07A21580140FA215005CA2141E143EA2143C147CA2147814F8A25C1301A25C1303A2495A
A25C130FA291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201A25B1203A25B1207
A25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A12601F537BBD2A>I<EB
03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007147C48487FA248C77EA2
481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A36C15006D5B000F14
3EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F8233A7DB72A>I<
EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C3879B72A>I<
EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E123000706D7E12
6012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D140F4A5A4A5A92
C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B49130348481400485A485A000E
C75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF4913C03901F80FF03903
C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401A25D4A5AA24A5A
5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F80A216C0A2153F
16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF006C495A121E390F
8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A>I<1538A2157815F8A2
140114031407A2140F141F141B14331473146314C313011483EB030313071306130C131C
131813301370136013C01201EA038013005A120E120C5A123812305A12E0B712F8A3C738
03F800AB4A7E0103B512F8A325397EB82A>I<0006140CD80780133C9038F003F890B5FC
5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE9038780F803907E007E0903880
03F0496C7E12066E7EC87EA28181A21680A4123E127F487EA490C71300485C12E000605C
12700030495A00385C6C1303001E495A6C6C485A3907E03F800001B5C7FC38007FFCEB1F
E0213A7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90383F800790387E001F49
EB3F804848137F485AA2485A000FEC3F0049131E001F91C7FCA2485AA3127F90C9FCEB01
FC903807FF8039FF1E07E090383801F0496C7E01607F01E0137E497FA249148016C0151F
A290C713E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B15FE6C6C5B6C6C485A39
00FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>I<12301238123E003FB612E0A316
C05A168016000070C712060060140E5D151800E01438485C5D5DC712014A5A92C7FC5C14
0E140C141C5CA25CA214F0495AA21303A25C1307A2130FA3495AA3133FA5137FA96DC8FC
131E233B7BB82A>I<EB03F8EB1FFF017F13C09038FC07F03901E001F848486C7E484813
7C90C77E48141E000E141F001E80A3121FA27F5D01E0131E6C6C133E01FC133C6D5B6C6C
6C5AECC1E06CEBF3C06C01FFC7FC6C5BEB3FFF6D13C081017F13F801F07F3903E07FFE39
07801FFF48486C1380481303003E6D13C0003CEB007F007C143F0078EC0FE000F814075A
1503A21501A36C15C012781503007C15806CEC07006C5C6C6C131ED807E0137C3903F803
F0C6B55A013F1380D907FCC7FC233A7DB72A>I<EB03F8EB1FFF017F13C09038FC07E039
03F803F048486C7E48486C7E49137E121F48487FA2007F158090C7FCA248EC1FC0A616E0
A56C143FA27F123F001F147FA26C6C13FF6C6C13DF000313013901F0039F3900FC0F1FD9
3FFC13C0EB07F090C7FC153F1680A316005D000F147E487E486C5BA24A5A4A5A49485A6C
48485A001C495A260F807FC7FC3807FFFC000113F038003FC0233A7DB72A>I<121C127F
EAFF80A5EA7F00121CC7FCB2121C127FEAFF80A5EA7F00121C092479A317>I<121C127F
EAFF80A5EA7F00121CC7FCB2121C127F5A1380A4127F121D1201A412031300A25A1206A2
120E5A121812385A1260093479A317>I<007FB812F8B912FCA26C17F8CCFCAE007FB812
F8B912FCA26C17F836167B9F41>61 D<1538A3157CA315FEA34A7EA34A6C7EA202077FEC
063FA2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A202707FEC6003A202C07F1501
A2D901807F81A249C77F167FA20106810107B6FCA24981010CC7121FA2496E7EA3496E7E
A3496E7EA213E0707E1201486C81D80FFC02071380B56C90B512FEA3373C7DBB3E>65
D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E707EA2707EA283A75F16
035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1FE0EE07F0707E707E83
707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF8486DEB7FF0B812C094C7
FC16F832397DB83B>I<913A01FF800180020FEBE003027F13F8903A01FF807E07903A03
FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE153F12014848151F48
48150FA248481507A2485A1703123F5B007F1601A35B00FF93C7FCAD127F6DED0180A312
3F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D00001618017F15386D6C5CD91FE0
5C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC020F13F002011380313D
7BBA3C>I<B712C016F816FE000190398001FF806C90C7EA3FE0EE0FF0EE03F8707E707E
177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F
18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC16F816C036397D
B83F>I<B812FCA30001903880000F6C90C71201EE007E173E171E170EA31706A3170783
16C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A21500A21860A318E093C7
12C0A41701A3EF0380A21707A2170F173F177F486D903807FF00B9FCA333397DB839>I<
B812F8A30001903880001F6C90C71201EE00FC177C173C171CA2170CA4170E1706A2ED01
80A21700A41503A21507151F91B5FCA3EC001F15071503A21501A692C8FCAD4813C0B612
C0A32F397DB836>I<DBFF8013C0020FEBF001023F13FC9139FF803F03903A03FC000787
D90FF0EB03CF4948EB00EF4948147F4948143F49C8121F485A4848150F48481507A24848
1503A2485A1701123F5B007F1600A448481600AB93B6FCA26C7E9338007FE0EF3FC0A212
3F7F121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C14EFD90FF8EB03C7D9
03FEEB0783903A00FFC03F0191393FFFFC00020F01F0130002001380383D7CBA41>I<B6
48B512FEA30001902680000313006C90C76C5AB3A491B6FCA391C71201B3A6486D497EB6
48B512FEA337397DB83E>I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E>
I<013FB512E0A39039001FFC00EC07F8B3B3A3123FEA7F80EAFFC0A44A5A1380D87F005B
0070131F6C5C6C495A6C49C7FC380781FC3801FFF038007F80233B7DB82B>I<B649B5FC
A3000101809038007FF06C90C8EA3F80053EC7FC173C17385F5F4C5A4C5A4CC8FC160E5E
5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C7E140E4A6C7E4A6C7E14704A
6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA2707EA2707E707EA2707E707F84
84486D497FB6011FEBFF80A339397DB841>I<B612E0A3000101C0C8FC6C90C9FCB3AD17
18A517381730A31770A317F0A216011603160FEE1FE0486D13FFB8FCA32D397DB834>I<
B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE01533A3D9C7F01563A3D9C3
F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C130CA36E6C1318A26E6C13
30A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2ED7F06A3ED3F8CA2ED1F
D8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512F8A2ED018045397DB84C
>I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F001706EBCFF8EBC7FCA2EB
C3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E168080ED7FC016E0153F
ED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE1FF6EE0FFEA216
071603A216011600A2177E486C153E487ED80FFC151EB500C0140EA2170637397DB83E>
I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049486D7ED93F80EB07F049
C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848ED1FC0A2001F17E04915
0F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150FA3003F17F0A26C6CED1F
E0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A5A017F4A5A6D6C495A6D
6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFFE0020390C8FC363D7BBA
41>I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0FE0EE07F0EE03F817FC17
FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC0923801FF0091B512FC16F0
91C9FCB3A5487FB6FCA330397DB839>I<B612FEEDFFE016F8000190388007FE6C90C76C
7EEE3FC0707E707E707EA2707EA283A65FA24C5AA24C5A4C5AEE3F8004FFC8FCED07FC91
B512E05E9138000FF0ED03F8ED00FE82707E707EA2161F83A583A6F00180A217F8160F18
03486D01071400B66D6C5A04011306933800FE0ECAEA3FFCEF07F0393B7DB83D>82
D<D90FF813C090383FFE0190B512813903F807E33907E000F74848137F4848133F48C712
1F003E140F007E1407A2007C140312FC1501A36C1400A37E6D14006C7E7F13F86CB47E6C
13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB007F020713E0EC007FED3F
F0151F150FED07F8A200C01403A21501A37EA216F07E15036C15E06C14076C15C06C140F
6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>
I<003FB812E0A3D9C003EB001F273E0001FE130348EE01F00078160000701770A3006017
30A400E01738481718A4C71600B3B0913807FF80011FB612E0A335397DB83C>I<B69038
07FFFEA3000101809038007FE06C90C8EA1F80EF0F001706B3B2170E6D150C80171C133F
17186D6C14385F6D6C14F06D6C5C6D6C495A6D6CEB07806D6C49C7FC91387F807E91381F
FFF8020713E09138007F80373B7DB83E>I<B500FC91387FFF80A30003018091380FFC00
6C90C8EA07E0715A6C705A6E1403017F93C7FCA280013F1506A26E140E011F150C80010F
5DA28001075DA26E147001031560A26D6C5CA2806D4A5AA2ED8003027F91C8FCA291383F
C006A215E0021F5BA2EDF01C020F1318A26E6C5AA215FC02035BA2EDFEE002015BA26E6C
5AA36FC9FCA3153EA2151CA3393B7EB83E>I<B5D8FC07B5D8F001B5FCA3000790278000
1FFEC7EA1FF86C48C7D80FF8EC07E000010307ED03C01B807F6C6F6C1500A26E5F017F6E
6C1406A280013F4A6C5CA280011F4A6D5BEE067FA26D6C010E6D5BEE0C3FA26D6C011C6D
5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D6C4CC7FC9338C003FCA203805D
913B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203E3151CDA1FE6EC7F98A215F6DA0F
FCEC3FF0A302075E4B141FA202035E4B140FA202015E4B1407A2020093C8FC4B80503B7E
B855>I<B500FE91383FFFE0A3000301E0913807FE00C649EC03F0017F6F5A606D6C5D6D
6C140395C7FC6D6C1406A26D6C5C6D6C141C17186D6C143817306D6D5B6E6C13E05F9138
3FE0015F91381FF003DA0FF890C8FC1606913807FC0E160C913803FE1C913801FF185E6E
13B016E0157F6F5AB3A24B7E023FB512C0A33B397FB83E>89 D<EAFFF8A4EAF000B3B3B3
B3A3EAFFF8A40D5378BD17>91 D<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>
93 D<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A
6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FE
A31401A26C13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F
8007C026277DA52A>97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3
801F809039F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA16
7E16FEA216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E
903800FFF8C7EA1FC0283B7EB92E>I<EB03FC90381FFF8090387E03E03901F800704848
13F83907E001FC380FC003A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E
127FA26C14067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090
381FFF00EB07F81F277DA525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E
078F9038F801EF3903F0007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FE
AA127E127FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C07
8F90381FFE0FD907F813C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903
F001F0D807E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8
FCA5127EA2127FA26C14037F001F14076C6C13060007140E6D131CD801F013386C6C1370
90387E03E090381FFF80903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F
8790383F0FF0137EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387F
FFF8A31C3B7FBA19>I<ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE0
3903E007C03A07C003E010000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D48
5A6D48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF80
4815C03A0F80007FE048C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC
03E0003F1407D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387E
A52A>I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0
EBF70013FE496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA
0FE0487EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717
>I<EB01C0EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A212
3C127E00FF13F01303A214E038FE07C0127C383C0F00EA0FFEEA03F8154984B719>I<EA
03F012FFA3120F1203B1913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC14
1E1438147814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E
157F811680ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203
B3B3AD487EB512C0A3123A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F
01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0F
C0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00F
F000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3
486C497EB500C1B51280A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F8
4848137C48487F48487F4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15
F8A9007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137E
C66C13F890387E03F090381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF8
9038F1E07E9039F3801F803A07F7000FC0D803FEEB07E049EB03F04914F849130116FC15
0016FEA3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F
009038F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903F813C0
90381FFE0190387E07819038FC01C33903F000E3000714774848133749133F001F141F48
5A150F48C7FCA312FEAA127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801
CF39007E078F90381FFE0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<3807E0
1F00FFEB7FC09038E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC008049
1300A45BB3A2487EB512F0A31C257EA421>I<EBFF03000313E7380F80FF381E003F487F
487F00707F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F0107
1380EB007F141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C
38E1FFF038C03F801A277DA521>I<1318A51338A31378A313F8120112031207001FB5FC
B6FCA2D801F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347F
B220>I<D803F0EB07E000FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D13
3F0000EC77F86D9038E7FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<
B538803FFEA33A0FF8000FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D
130E017E130CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901
FBC7FCA214FF6D5AA2147CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8009038
000FF86C48017EEB03E018C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2
017E9038EFC00C15C7A2D93F016D5A15830281EBF038D91F831430150102C3EBF8709026
0FC6001360A2D907E66D5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100
141E4A130E0260130C37257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092
C7FC017E131C6D13186D6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F
804A7E8114CF903801C7E090380383F090380703F8EB0601496C7E011C137E49137F0178
7F496D7E486C80000FEC3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA33A0FF8
000FF06C48EB07C00003EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2
ECC070010F1360A26D6C5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A214
30A214701460A25CA2EA7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC0
27357EA32C>I<003FB512FCA2EB8003D83E0013F8003CEB07F00038EB0FE012300070EB
1FC0EC3F800060137F150014FE495AA2C6485A495AA2495A495A495AA290387F000613FE
A2485A485A0007140E5B4848130C4848131CA24848133C48C7127C48EB03FC90B5FCA21F
247EA325>I<B81280A2290280962A>I<BD12C0A25202809653>I<001C131C007F137F39
FF80FF80A5397F007F00001C131C190978B72A>127 D E /Fr 37
122 df<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A3120113801203
13005A1206120E5A5A5A12600B1D78891B>44 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E
000A0A78891B>46 D<14FF010713E090381F81F890383E007C01FC133F4848EB1F804913
0F4848EB07C04848EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC4815FEA5
4815FFB3A46C15FEA56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E0000315
C06D130F6C6CEB1F806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC28447C
C131>48 D<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C7E000EC7EA7F
8048EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F1503A46C4813
076CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A4A5A4A5A5D4A
5A4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B485A4848143848
C81230000E1570001FB612F0A25A5AB712E0A326427BC131>50 D<DB0FFE146092B500C0
13E0020314F0913A0FFC01FC0191393FC0003E02FFC7EA0F83D903FCEC03C74948EC01E7
4948EC00FF4948157F4948153F4948151F49C9120F485A491607120348481603A2484816
01A248481600A2123FA2491760127FA31900485AAE6C7EA21960A2123F7FA2001F18E07F
000F18C0A26C6C160119806C6C160312016DEE07006C6C16066D6C150E6D6C5D6D6C5D6D
6C15786D6C5D6D6C4A5AD900FFEC0780DA3FC0011FC7FCDA0FFC13FC0203B512F0020014
C0DB0FFEC8FC3B487BC546>67 D<B8FC17F017FC00019039C00007FF6C499038007FC001
7FED1FE0EF07F0EF03FC717E717E84727E727E727EA2727E85180385A2180185A38584A3
1A80AD1A00A36061A361180361180761180F614E5A183F614EC7FC18FEEF03FC4D5AEF1F
E001FFED7FC0486DD907FFC8FCB812FC17F094C9FC41447CC34B>I<B912F8A3000101C0
C7127F6C6C48EC07FC17011700187C183C181CA284A31806A4180704067FA395C7FCA416
0EA2161E163E16FE91B5FCA3EC8000163E161E160EA21606A319C0A3F0018093C7FCA418
03A21900A260A260A2181EA2183E187EEF01FE170748486C147FB95AA33A447CC342>I<
B6D8C003B6FCA3000101E0C70007138026007F80913801FE00B3A991B7FCA30280C71201
B3AC2601FFE0913807FF80B6D8C003B6FCA340447CC349>72 D<B600C049B512C0A30001
01E0C8387FFC006C49ED3FE06D481680063EC7FC183C183860604D5A4D5A4DC8FC171E17
385F5F4C5A4C5A4CC9FC160E5E5E5E5E4B5A4B7E4B7E150F4B7E4B7E1577EDE3FE913881
C1FFEC8381DA87007F028E6D7E149C02B86D7E02F06D7E14C04A6D7E707EA2707E707EA2
707F717EA2717E717EA2717E717EA2717E717EA2717F8585496C82486D4A13FCB600C001
1FEBFFE0A343447CC34C>75 D<B612F8A3000101E0C9FC6C6C5A5CB3B31830A418701860
A518E0A3EF01C0A217031707A2170F173F177FEE01FF48486C011F1380B9FCA334447CC3
3D>I<ED1FFC4AB512C0913907F007F091391F8000FC027EC7123FD901F8EC0FC049486E
7E49486E7E49486E7E49486E7E49C9127E017E8201FE834848707E4848707EA24848707E
A2000F84491603001F84A24848707EA3007F84A24982A300FF1980AD6C6C4C1300A4003F
606D1603A2001F60A26C6C4C5AA26C6C4C5AA20003606D161F6C6C4C5A000060017F4CC7
FC6E5D013F5E6D6C4A5AD907E0EC03F06D6C4A5AD901FCEC1FC0D9007E4AC8FCDA1F8013
FC913907F007F00201B512C09126001FFCC9FC41487BC54C>79 D<B712E016FF17C00001
9039C0003FF86C6C48EB03FCEE00FF717E717E717E717E717EA284170384A760A2170760
4D5AA24D5A4D5A4DC8FCEE01FEEE07F8EE3FE091B6C9FC16FC913980007F80EE0FE0707E
EE03FC707E160083717EA2717EA784A71A6084171FA21AE0716C13C02601FFE002071301
B600C01680943801FC03943900FE0700CBEA3FFEF007F843467CC348>82
D<49B41303010FEBE007013F13F89039FE00FE0FD801F8131FD807E0EB079F49EB03DF48
486DB4FC48C8FC4881003E81127E82127C00FC81A282A37E82A27EA26C6C91C7FC7F7FEA
3FF813FE381FFFE06C13FE6CEBFFE06C14FC6C14FF6C15C0013F14F0010F80010180D900
1F7F14019138001FFF03031380816F13C0167F163F161F17E000C0150FA31607A37EA36C
16C0160F7E17806C151F6C16006C5D6D147ED8FBC05CD8F9F0495AD8F07C495A90393FC0
0FE0D8E00FB51280010149C7FC39C0003FF02B487BC536>I<003FB912F8A3903BF0001F
F8001F01806D481303003EC7150048187C0078183CA20070181CA30060180CA5481806A5
C81600B3B3A54B7EED7FFE49B77EA33F447DC346>I<B600C0010FB5FCA3000101E0C813
F026007F80ED1F80F00F00A21806B3B3A7180E6D6C150CA2181C131F6E1518010F163818
306D6C1570606D6C14016D6C5D6D6CEC0780027F4AC7FC6E6C131EDA1FE0137C913907FC
03F00201B55A6E6C1380DB07FCC8FC40467CC349>I<B60107B500F890380FFFFEA30003
01E0D9001F90C813F06C0180DA0FFCED3FC091C86C48ED1F006C871C0E6D6C6E7E1C0CA2
6D6C6F5DA36EDA06FF1538011F1A30A26E020E6D1470010FDB0C7F1560A26E021C7F0107
DB183F5DA2856D6CDA301F4A5AA36D6C4A6C6C49C7FCA36D6C4A6C6C1306A3DB80016E13
0E027FDA8003140CA2DBC00380023FDA00015CA203E081021F01066D5CA36E6C486E6C5A
A36E6C486E6C5AA36F48EC1FE1020360A2DBFE7015F302010160020F90C8FCA2DBFFE015
FB6E49EC07FEA36F486E5AA36FC86C5AA3031E6F5AA4030C16605F467EC364>87
D<003FB500E0011FB5FCA3C691C7000713E0D93FFC020190C7FC6D4815FC010F6F5A6D6C
15E0A26D6C4A5A6D6C5D4DC8FC6D6D5B6E6C13065F6E6C131C6E6C13185F6E6C13706E6C
13605F913803FE01DA01FF5B4CC9FC6E1387ED7FC616CCED3FFC6F5A5E6F7E6F7EA26F7E
82A203067F150E92380C7FC04B6C7E15389238301FF04B6C7E15E04B6C7E4A486C7E1403
4B6C7E02066D7F140E020C6E7E4A6E7E143802306E7E4A6E7E14E04A6E7E49486E7E1303
49C86C7E496F7F5B496C8201FF83000701E0020313F8B500F8021FEBFFF0A344447EC349
>I<EB07FC90383FFF809038F80FE03903C003F048C66C7E000E6D7ED80FC0137E486C13
7F6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC
485A485A485A485A127F5B176048C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F13
013A1FE00783F13B07F81E03FF802701FFFC0113003A001FE0007C2B2E7CAC31>97
D<EC7F80903803FFF090380FC07C90383F000F01FCEB03804848EB01C00003140F4848EB
1FE049133F120F485AA2485AED1FC0007FEC070092C7FCA290C9FC5AAB7E7FA2123F1630
7F001F15706C6C146016E06C6C14C06C6C13010001EC03806C6CEB0700013F131E90381F
C078903807FFF001001380242E7DAC2B>99 D<167FED3FFFA315018182B3EC7F80903803
FFF090380FC07C90383F000E017E1307496D5AD803F87F48487F5B000F81485AA2485AA2
127FA290C8FC5AAB7E7FA2123FA26C7EA2000F5D7F6C6C5B00035C6C6C9038077F806C6C
010E13C0013F011C13FE90380FC0F8903803FFE09026007F0013002F467DC436>I<EB01
FE903807FFC090381F03F090387E00FC49137E48487F485A4848EB1F80000F15C049130F
121F484814E01507A2007F15F090C7FCA25AA390B6FCA290C9FCA67EA27FA2123F16306C
7E1670000F15606D14E06C6C14C0000314016C6CEB03806C6CEB0700013E131E90381F80
F8903803FFE0010090C7FC242E7DAC2B>I<EC0FE0EC7FF8903801F81E903803F03F9039
0FE07F8090381FC0FF5C133F495AA2ED7F0001FE131C92C7FCAFB67EA3C648C8FCB3B248
6C7E007F13FFA321467EC51E>I<EE0F80D901FCEB7FE0903A0FFF81F0F090393F07E381
9039FC01FF033A01F800FE014848017E13E00007027FC7FC497F000F8149131F001F81A9
000F5D6D133F000792C7FC6D5B0003147E6C6C5B6D485A3903BF07E090380FFF80260701
FCC8FC90CAFCA25AA37F6C7E7F90B512F86C14FF16E06C15F86C6C8048B67E3A07C0000F
FF48481300003FC8EA3F80003E151F48ED0FC0A2481507A56C150F007C1680007E151F00
3E16006C153E6C6C5CD807E0495AD801F8EB07E0D8007FEB3F8090261FFFFEC7FC010113
E02C427DAC31>I<EA01FC12FFA3120712031201B3EC01FE913807FFC091381E07F09138
3801F802707FECE000D9FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F
13FEA32F457DC436>I<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCADEA01FC12FFA312
0712031201B3B0487EB512F8A315437DC21C>I<EA01FC12FFA3120712031201B3B3B3A5
487EB512F8A315457DC41C>108 D<D801FC01FFEC1FE000FF010701E0EBFFFC913B0F03
F801E07F913C3C01FC07803F800007903C7000FE0E001FC0000349D97E1C130F2601FDC0
D97F38804A143001FFDA3FF06D7E91C75BA2495DA3495DB3A8486C4A6C497EB5D8F81FB5
0003B512E0A34B2C7DAB52>I<3901FC01FE00FF903807FFC091381E07F091383801F800
0701707F0003EBE0002601FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F8
3F13FEA32F2C7DAB36>I<EC7F80903803FFF090380FC0FC90383E001F496D7E496D7E48
486D7E48486D7E48486D7E000F81A24848147E003F157FA290C87E481680A44816C0AA6C
1680A26D147F003F1600A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C
6C495A013E49C7FC90381FC0FE903807FFF89038007F802A2E7DAC31>I<3901FC03FC00
FF90380FFF8091383C07E091387001F83A07FDE000FE00010180137F01FFEC3F8091C7EA
1FC04915E049140F17F0160717F8160317FCA3EE01FEABEE03FCA3EE07F8A217F0160F6D
15E0EE1FC06D143F17806EEB7E00D9FDC05B9039FCF003F891383C0FE091381FFF80DA03
FCC7FC91C9FCAE487EB512F8A32F3F7DAB36>I<3903F803F000FFEB1FFCEC3C3EEC707F
0007EBE0FF3803F9C000015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FEA320
2C7DAB26>114 D<90383FE0183901FFFC383907E01F78390F0003F8001E130148130000
7C1478127800F81438A21518A27EA27E6C6C13006C7E13FC383FFFE06C13FC6C13FF6C14
C06C14E0C614F0011F13F81300EC0FFC140300C0EB01FE1400157E7E153EA27EA36C143C
6C147C15786C14F86CEB01F039F38003E039F1F00F8039E07FFE0038C00FF01F2E7DAC26
>I<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2C648C7FCB3A4
150CAA017E131C017F1318A26D133890381F8030ECC070903807E0E0903801FFC0903800
7F001E3E7EBC26>I<D801FC147F00FFEC3FFFA300071401000380000181B3A85EA35DA2
12006D5B017E9038077F80017F010E13C06D011C13FE90380FC078903803FFF09026007F
8013002F2D7DAB36>I<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E12
00160C017F5CA280013F5CA26E1370011F146080010F5CA2ECF00101075CA26D6C48C7FC
A26E5A01011306A26D6C5AA214FF6E5AA215B8EC3FB015F06E5AA36E5AA26E5AA36EC8FC
2E2C7EAA33>I<B500E0B539E03FFF80A30007903C000FFE000FFC00D803FCD903F8EB03
F8F001E0120103015D6D80000060A26D6E13036DD9037E91C7FCA20280017F5B013FD906
3F1306A2D91FC06E5AED0C1FA2D90FE06E5AED180FA2D907F06E5AED3007A2D903F86E5A
ED6003A2902601FCE06D5AEDC00117FCD900FFECFD80ED800017FF027F92C8FC92C77EA2
6E147E023E143EA2021E143C021C141CA2412C7EAA46>I<B539F001FFFCA3000790C7EA
7FE06C48EC1F8000011600160E0000150C6D141C6D1418A26E1338013F1430A26D6C5BA2
6E13E0010F5CA26D6C485AA2ECF803010391C7FCA2903801FC06A2ECFE0E0100130CA2EC
7F18A215B8EC3FB0A2EC1FE0A36E5AA26E5AA36EC8FCA21406A35CA25CA2123C007E5BB4
FC5CA25CEAFE01387C0380D87007C9FCEA3C1EEA0FFCEA03F02E3F7EAA33>121
D E /Fs 38 124 df<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3ADB712
FCA5264177C038>49 D<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE3A
0FE0007FFFD81F806D138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881A4
6C5A6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A90
C7FC4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A49
C8FC017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<ECFFF001
0713FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D138013FE00
1F16C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B020F1380902607FFFE
C7FC15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A217F8A3EA
0FC0EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F80491380D81FF0491300
D80FFEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E02D427BC038>I<163FA2
5E5E5D5DA25D5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F87EC1F07143E147E147C
14F8EB01F0EB03E0130714C0EB0F80EB1F00133E5BA25B485A485A485A120F5B48C7FC12
3E5A12FCB91280A5C8000F90C7FCAC027FB61280A531417DC038>I<0007150301E0143F
01FFEB07FF91B6FC5E5E5E5E5E16804BC7FC5D15E092C8FC01C0C9FCAAEC3FF001C1B5FC
01C714C001DF14F09039FFE03FFC9138000FFE01FC6D7E01F06D13804915C0497F6C4815
E0C8FC6F13F0A317F8A4EA0F80EA3FE0487E12FF7FA317F05B5D6C4815E05B007EC74813
C0123E003F4A1380D81FC0491300D80FF0495AD807FEEBFFFC6CB612F0C65D013F148001
0F01FCC7FC010113C02D427BC038>I<4AB47E021F13F0027F13FC49B6FC01079038807F
8090390FFC001FD93FF014C04948137F4948EBFFE048495A5A1400485A120FA248486D13
C0EE7F80EE1E00003F92C7FCA25B127FA2EC07FC91381FFF8000FF017F13E091B512F890
39F9F01FFC9039FBC007FE9039FF8003FF17804A6C13C05B6F13E0A24915F0A317F85BA4
127FA5123FA217F07F121FA2000F4A13E0A26C6C15C06D4913806C018014006C6D485A6C
9038E01FFC6DB55A011F5C010714C0010191C7FC9038003FF02D427BC038>I<EE1F80A2
4C7EA24C7EA34C7EA24B7FA34B7FA24B7FA34B7F169F031F80161F82033F80ED3E07037E
80157C8203FC804B7E02018115F0820203814B137F0207815D173F020F814B7F021F8292
C77EA24A82023E80027E82027FB7FCA291B87EA2498302F0C8FCA20103834A157F010783
4A153FA249488284011F8491C97E4984133E017E82B6020FB612F0A54C457CC455>65
D<B9FC18F018FE727E19E026003FFEC7001F13F805017F9438003FFF060F7F727F727F72
7F84737E737EA2737EA2737EA21B80A2851BC0A51BE0AD1BC0A51B8061A21B006162193F
624F5A19FF624E5B06075B4E5B063F90C7FC4DB45A050F13F8BA5A19C04EC8FC18F095C9
FC4B447CC356>68 D<BA12F8A485D8001F90C71201EF003F180F180318011800A2197E19
3EA3191EA21778A285A405F890C7FCA316011603161F92B5FCA5ED001F160316011600A2
F101E01778A2F103C0A494C7FC1907A21A80A2190FA2191FA2193FF17F0061601807181F
4DB5FCBBFC61A443447DC34A>I<B712E0A5D8001F90C7FCB3B3B3A4B712E0A523447DC3
2A>73 D<0107B7FCA590C7001F1300B3B3A9EA1FE0487E487EA2487EA44B5AA26C48495A
495C6C4813FF6C48485B260FFC0713C06CB65A6C4AC7FCC66C13F8010F138030457DC33A
>I<B712F0A526003FFECAFCB3B1F00780A4180F1900A460A360A2187EA218FE17011703
1707171F177FEE03FFB95AA539447CC343>76 D<B500FE067FB512806E95B6FCA26F5EA2
D8003F50C7FC013D6DEE03DFA2013C6DEE079FA26E6CEE0F1FA26E6C161EA26E6C163CA3
6E6C1678A26E6C16F0A26E6DEC01E0A26E6DEC03C0A36E6DEC0780A26F6CEC0F00A26F6C
141EA26F6C5CA36F6C5CA26F6C5CA26F6D485AA26F6D485AA26F6D485AA3706C48C7FCA2
93383FF81EA2706C5AA2706C5AA3706C5AA2705BA2705BA2705BA2B6057FB6128071C7FC
A2173E171C61447CC36A>I<923807FFC092B512FE0207ECFFC0021F15F091267FFE0013
FC902601FFF0EB1FFF01070180010313C04990C76C7FD91FFC6E6C7E49486F7E49486F7E
01FF8348496F7E48496F1380A248496F13C0A24890C96C13E0A24819F04982003F19F8A3
007F19FC49177FA400FF19FEAD007F19FC6D17FFA3003F19F8A26D5E6C19F0A26E5D6C19
E0A26C6D4B13C06C19806E5D6C6D4B13006C6D4B5A6D6C4B5A6D6C4B5A6D6C4A5B6D01C0
01075B6D01F0011F5B010101FE90B5C7FC6D90B65A023F15F8020715C002004AC8FC0307
13C047467AC454>79 D<B812F8EFFFC018F818FE727ED8001F90C7003F13E005037F0500
7F727E727E727EA28684A286A762A24E90C7FCA24E5A61187F943801FFF005075B053F13
8092B7C8FC18F818E018F892C77FEF3FFF050F7F717F717FA2717FA2717FA785A61B0F85
A2187F73131F72141EB700E06DEB803E72EBE0FC72EBFFF8060114F0726C13E0CC000713
8050457DC354>82 D<DAFFE0131C010701FE133C013F9038FF807C90B6EAE0FC4815F948
9038801FFF3907FC00014848EB007F4848143F4848140F491407007F15035B1601160012
FF177CA27FA26D153C7F7F6D92C7FC6C7EEBFFE014FE6CEBFFF015FF6C15E016FC6C816C
6F7E6C826C826C6C81011F810107811300020F80140003077FED007F82040F1380828212
F082A282A27EA218007EA26C5D6C5E6D14036D5D6D140701F84A5A01FFEC3FF002F8EBFF
E0486CB65AD8FC1F92C7FCD8F80714FC48C614F0480107138031467AC43E>I<B792B6FC
A526003FFECAEAFC00806D606F15016D608119036D606F15076D606F150F6D6081191F6D
6D93C7FC61027F163E6F157E023F167C8119FC6E6D5C18016E5E7013036E5E8218076E6D
5C180F6E5E70131F6E93C8FC705B037F143E82187E033F147C7013FC6F5C17816F5C17C1
17C36F5C17E76F5C17FF6F5CA36F91C9FCA2705AA2705AA3705AA2705AA2705AA250457E
C355>86 D<B600FE017FB691B512FEA526007FFCC8D83FFEC9EA7C006E82013F70177880
7415F86D705F6F7014016D705FA26F7014036D64814E6D14076D646F70140F6D041E94C7
FCA26F023E6D5C6DDC3C7F151E81027F037C6D5CF0783F6F70147C023F4B6C1578A26F01
016F13F86E4B6C5D16806E02036F485A4E7E04C0EEE0036E4A486C5DA2DCE00FEDF0076E
4B6C5D16F06E4A6F48C8FC051E7F04F8705A6E4A027F131EA2DCFC7CEDFE3E037F017802
3F133C04FE16FF033F01F85E4D8004FF17F86F496E5BA36F496E5BA26F604D80A26F90C8
6C5BA36F486F90C9FCA26F48167EA30478163C6F457EC374>I<903801FFE0011F13FE01
7F6D7E48B612E03A03FE007FF84848EB1FFC6D6D7E486C6D7EA26F7FA36F7F6C5A6C5AEA
00F090C7FCA40203B5FC91B6FC1307013F13F19038FFFC01000313E0000F1380381FFE00
485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0D83FFE013EEBFFC03A1FFF80FC7F0007
EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7DAD36>97 D<EB7FC0B5FCA512037EB1ED
0FF892B57E02C314E002CF14F89139DFC03FFC9139FF000FFE02FCEB03FF4A6D13804A15
C04A6D13E05CEF7FF0A218F8173FA318FCAC18F8A2177F18F0A3EFFFE06E15C06E5B6E49
1380027C491300496C495A903AFC1FC07FFC496CB512F0D9F00314C049C691C7FCC8EA1F
F036467DC43E>I<EC3FFC49B512C0010F14F0013F14FC90397FF003FE9039FFC001FF00
03495A48494813805B120F485AA2485A6F1300007F6E5AED00784991C7FCA212FFAC6C7E
A3123F6DEC03C0A26C6C1407000F16806D140F6C6DEB1F006C6D133E6C01F05B3A007FFC
03F86DB55A010F14C0010391C7FC9038003FF82A2F7CAD32>I<EE03FEED07FFA5ED001F
160FB1EC3FE0903803FFFC010FEBFF8F013F14CF9039FFF807FF48EBC00148903880007F
4890C7123F4848141F49140F121F485AA3127F5BA212FFAC127FA37F123FA26C6C141FA2
6C6C143F0007157F6C6C91B5FC6CD9C00314FC6C9038F01FEF6DB5128F011FEBFE0F0107
13F89026007FC0EBF80036467CC43E>I<EC3FF80103B57E010F14E0013F8090397FF83F
F89039FFC007FC48496C7E48496C7E48486D1380485A001FED7FC05B003FED3FE0A2127F
5B17F0161F12FFA290B7FCA401F0C9FCA5127FA27FA2123F17F06C7E16016C6C15E06C6C
14036C6DEB07C06C6DEB0F806C01F0EB3F0090397FFE01FE011FB55A010714F0010114C0
9026001FFEC7FC2C2F7DAD33>I<EDFF80020F13E0027F13F049B512F849EB8FFC90390F
FE0FFE90381FFC1F14F8133FEB7FF0A2ED0FFCEBFFE0ED03F0ED00C01600ABB612F8A5C6
01E0C7FCB3B0007FEBFFE0A527467DC522>I<EB7FC0B5FCA512037EB1ED07FE92383FFF
8092B512E002C114F89139C7F03FFC9138CF801F9139DF000FFE14DE14FC4A6D7E5CA25C
A35CB3A7B60083B512FEA537457CC43E>104 D<137C48B4FC4813804813C0A24813E0A5
6C13C0A26C13806C1300EA007C90C7FCAAEB7FC0EA7FFFA512037EB3AFB6FCA518467CC5
20>I<EB7FC0B5FCA512037EB3B3B3A3B61280A519457CC420>108
D<90277F8007FEEC0FFCB590263FFFC090387FFF8092B5D8F001B512E002816E4880913D
87F01FFC0FE03FF8913D8FC00FFE1F801FFC0003D99F009026FF3E007F6C019E6D013C13
0F02BC5D02F86D496D7EA24A5D4A5DA34A5DB3A7B60081B60003B512FEA5572D7CAC5E>
I<90397F8007FEB590383FFF8092B512E0028114F8913987F03FFC91388F801F00039039
9F000FFE6C139E14BC02F86D7E5CA25CA35CB3A7B60083B512FEA5372D7CAC3E>I<EC1F
FC49B512C0010714F0011F14FC90397FF80FFF9026FFC0017F48496C7F4848C7EA3FE000
078248486E7E49140F001F82A2003F82491407007F82A400FF1780AA007F1700A46C6C4A
5AA2001F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F90C7FC6DB5
5A010F14F8010114C09026001FFCC8FC312F7DAD38>I<90397FC00FF8B590B57E02C314
E002CF14F89139DFC03FFC9139FF001FFE000301FCEB07FF6C496D13804A15C04A6D13E0
5C7013F0A2EF7FF8A4EF3FFCACEF7FF8A318F017FFA24C13E06E15C06E5B6E4913806E49
13006E495A9139DFC07FFC02CFB512F002C314C002C091C7FCED1FF092C9FCADB67EA536
407DAC3E>I<90387F807FB53881FFE0028313F0028F13F8ED8FFC91389F1FFE000313BE
6C13BC14F8A214F0ED0FFC9138E007F8ED01E092C7FCA35CB3A5B612E0A5272D7DAC2E>
114 D<90391FFC038090B51287000314FF120F381FF003383FC00049133F48C7121F127E
00FE140FA215077EA27F01E090C7FC13FE387FFFF014FF6C14C015F06C14FC6C80000380
6C15806C7E010F14C0EB003F020313E0140000F0143FA26C141F150FA27EA26C15C06C14
1FA26DEB3F8001E0EB7F009038F803FE90B55A00FC5CD8F03F13E026E007FEC7FC232F7C
AD2C>I<EB01E0A51303A41307A2130FA2131FA2133F137F13FF1203000F90B51280B7FC
A4C601E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F8090391FFC1F006DB5
FC6D13FC01015B9038003FE023407EBE2C>I<D97FC049B4FCB50103B5FCA50003EC000F
6C81B3A85EA25EA25E7E6E491380017FD901F713FE9138F807E76DB512C7010F14070103
13FE9026007FF0EBFC00372E7CAC3E>I<B6903803FFFCA5000101E09038003E006C163C
80017F5D8017F8013F5D6E1301011F5D6E1303010F5D6E13076D5DED800F6D92C7FC15C0
5E6DEBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA36E5BA2
6E90C8FCA26E5AA26E5AA21578362C7EAB3B>I<B500FE90383FFFF0A5C601F0903803E0
006D6C495A013F4A5A6D6C49C7FC6E5B6D6C137E6DEB807C6D6D5A6DEBC1F0EDE3E06DEB
F7C06EB45A806E90C8FC5D6E7E6E7F6E7FA24A7F4A7F8291381F3FFCEC3E1F027C7F4A6C
7E49486C7F01036D7F49487E02C08049486C7F49C76C7E013E6E7E017E141FB500E090B5
12FCA5362C7EAB3B>120 D<B912FEA43704809C38>123 D E /Ft
19 119 df<B712F0AB240B7F9F2D>45 D<B812F8A5D8000701F8CAFCB3B3A91A7CA41AFC
1AF8A51901A31903A219071AF0190FA2191F193F197F19FF180360183F4DB5FCBB12E0A5
46527CD151>76 D<B600FC073FB512FE6F61A26F96B6FCA2D80007F5C00070EF01EFA202
EF6DEF03CFA202E76DEF078FA202E36DEF0F0FA202E16D171EA302E06D173CA26F6C1778
A26F6C17F0A26F6DED01E0A26F6DED03C0A36F6DED0780A26F6DED0F00A26F6D151EA26F
6D5DA3706C5DA2706C5DA2706D495AA2706D495AA2706D495AA3706D49C7FCA2706D131E
A2706D5BA2716C5BA3716C5BA271EB81E0A271EBC3C0A271EBE780A27101FFC8FCA3715B
A2715BA2725AA2725AA2D93FFC6F5AB74DB712FEA2725AA2725A77527CD180>I<93380F
FFC00303B6FC031F15E092B712FC0203D9FC0013FF020F01C0010F13C0023F90C7000313
F0DA7FFC02007F494848ED7FFE4901E0ED1FFF49496F7F49496F7F4990C96C7F49854948
707F4948707FA24849717E48864A83481B804A83481BC0A2481BE04A83A2481BF0A34849
7113F8A5B51AFCAF6C1BF86E5FA46C1BF0A26E5F6C1BE0A36C6D4D13C0A26C6D4D1380A2
6C1B006C6D4D5A6E5E6C626D6C4C5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D4B90C7
FC6D6D4B5A6D01FF02035B023F01E0011F13F0020F01FC90B512C0020390B7C8FC020016
FC031F15E0030392C9FCDB001F13E0565479D265>79 D<91260FFF80130791B500F85B01
0702FF5B011FEDC03F49EDF07F9026FFFC006D5A4801E0EB0FFD4801800101B5FC4848C8
7E48488149150F001F824981123F4981007F82A28412FF84A27FA26D82A27F7F6D93C7FC
14C06C13F014FF15F86CECFF8016FC6CEDFFC017F06C16FC6C16FF6C17C06C836C836D82
6D82010F821303010082021F16801400030F15C0ED007F040714E01600173F050F13F083
83A200788200F882A3187FA27EA219E07EA26CEFFFC0A27F6D4B13806D17006D5D01FC4B
5A01FF4B5A02C04A5A02F8EC7FF0903B1FFFC003FFE0486C90B65AD8FC0393C7FC48C66C
14FC48010F14F048D9007F90C8FC3C5479D24B>83 D<B700FE031FB512FEA5D8001F01F0
CA383FFE00F307F06D626F170F6D62811B1F6D6D601B3F6D97C7FC6F5F6D197E821BFE6E
6D5E1A016E6D5E1A036E60701507A26E6D5E1A0F6E6D5E1A1F6E6070153FA26E6D93C8FC
626E6E147E1AFE6F5E711301A26F6D5C19036F6D5C19076F5E71130FA26F6D5C191F6F6D
5C193F6F93C9FC715BA26FEC807E19FE706D5A18C1705C18E3705C18F318F770EBFFE0A2
705CA2705CA37091CAFCA2705BA2715AA3715AA2715AA2715A715A5F537DD166>86
D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC
48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC0107
1487013FEBF0074913803901FFFC004813F0485B485B485B4890C7FC5A5BA2485AA45EA2
6D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1EBFFE06C9026F81FC014F0
6C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C387CB641>97
D<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1FFE0001FFD97FFC
491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F1300705A4892C8FC5B
A312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F806C6DEC3F006C6D
147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F49C7FC020113E0
33387CB63C>99 D<913803FFC0023F13FC49B6FC010715C04901817F903A3FFC007FF849
486D7E49486D7E4849130F48496D7E48178048497F18C0488191C7FC4817E0A248815B18
F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01F06E14037E6C6DEC07E0
A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE903A0FFFC03FF8010390
B55A010015C0021F49C7FC020113F034387CB63D>101 D<EB3FF0B5FCA51203C6FCB3A4
EE1FFC93B512C0030314F0030F8092391FE07FFC92393F001FFE037C8003F07FDAF1E081
ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542537BD24B>104
D<137F497E000313E0487FA2487FA76C5BA26C5BC613806DC7FC90C8FCADEB3FF0B5FCA5
12017EB3B3A6B612E0A51B547BD325>I<D93FF0EB1FFCB591B512C0030314F0030F8092
391FE07FFC92393F001FFE0003027C80C602F07FDAF1E081ECF3C0DAF7807F8502FFC7FC
5CA25CA45CB3ACB6D8F807B612C0A542367BB54B>110 D<913801FFE0021F13FE91B612
C0010315F0010F9038807FFC903A1FFC000FFED97FF86D6C7E49486D7F48496D7F48496D
7F4A147F48834890C86C7EA24883A248486F7EA3007F1880A400FF18C0AC007F1880A300
3F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D495B6C6D495B6D6C495BD93FFE01
1F90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8FC020113E03A387CB643>I<90
3A3FF001FFE0B5010F13FE033FEBFFC092B612F002F301017F913AF7F8007FFE0003D9FF
E0EB1FFFC602806D7F92C76C7F4A824A6E7F4A6E7FA2717FA285187F85A4721380AC1A00
60A36118FFA2615F616E4A5BA26E4A5B6E4A5B6F495B6F4990C7FC03F0EBFFFC9126FBFE
075B02F8B612E06F1480031F01FCC8FC030313C092CBFCB1B612F8A5414D7BB54B>I<90
397FE003FEB590380FFF80033F13E04B13F09238FE1FF89139E1F83FFC0003D9E3E013FE
C6ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612FC
A52F367CB537>114 D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307D8
1FE0130148487F4980127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15F8
6C14FF16C06C15F06C816C816C81C681013F1580010F15C01300020714E0EC003F030713
F015010078EC007F00F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC7F
0001FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB635
>I<143EA6147EA414FEA21301A313031307A2130F131F133F13FF5A000F90B6FCB8FCA4
26003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEBFF
F86D6C5B021F5B020313802A4D7ECB34>I<D93FF8913801FFC0B50207B5FCA50003ED00
1FC61607B3AE5FA35FA2017F5D173B177B6D6C14F3DC01E313F06D6CD907C3EBFFC0903A
0FFFC03F836D90B51203010114FE6D6C13F8020701E091C7FC42377BB54B>I<B600F001
07B5FCA5000101F8C8EA7FE06C6DED3F00A2017F163E6E157E013F167C6E15FC6D5E6F13
016D5E8117036D5E6F13076D5E6F130F6D5E6F131F6D93C7FC815F6E6C133E177E023F14
7C6F13FC6E5C16816E5C16C3A26EEBE3E016E76E5C16FF6E5CA26E91C8FCA26F5AA36F5A
A26F5AA26F5AA26F5A6F5A40367DB447>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: Letter
%%BeginPaperSize: Letter
/setpagedevice where {
pop 2 dict dup dup /PageSize [ 612 792 ] put 
/Duplex true put setpagedevice
} {
statusdict /lettertray known {
statusdict begin lettertray end
/letter where { pop letter } if
} {
/letter where {
pop letter
} {
statusdict /setpage known {
statusdict begin
612 792 0 setpage
end
} if
} ifelse
} ifelse
} ifelse
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 732 300 a Ft(Lea)l(v)l(e-One-Out)47 b(Supp)t(ort)c(V)-11
b(ector)45 b(Mac)l(hines)1612 527 y Fs(Jason)38 b(W)-9
b(eston)1238 643 y Fr(Departmen)m(t)32 b(of)g(Computer)h(Science)1129
759 y(Ro)m(y)m(al)f(Hollo)m(w)m(a)m(y)-8 b(,)32 b(Univ)m(ersit)m(y)h
(of)f(London,)1514 875 y(Egham)g(Hill,)e(Egham,)1409
992 y(Surrey)-8 b(,)33 b(TW20)g(OEX,)g(UK.)648 1283 y
Fs(Abstract)16 1428 y Fq(W)-7 b(e)35 b(presen)n(t)f(a)g(new)h(learning)
f(algorithm)f(for)h(pat-)16 1519 y(tern)50 b(recognition)e(inspired)h
(b)n(y)h(a)f(recen)n(t)g(upp)r(er)16 1611 y(b)r(ound)c(on)f(lea)n(v)n
(e{one{out)d(error)1191 1604 y([)1214 1611 y(Jaakk)n(ola)g(and)16
1702 y(Haussler,)25 b(1999)541 1695 y(])589 1702 y(pro)n(v)n(ed)f(for)i
(Supp)r(ort)g(V)-7 b(ector)26 b(Ma-)16 1793 y(c)n(hines)55
b(\(SVMs\))627 1786 y([)650 1793 y(V)-7 b(apnik,)62 b(1995;)53
b(1998)1403 1786 y(])1424 1793 y(.)119 b(The)16 1885
y(new)19 b(approac)n(h)f(directly)h(minimizes)h(the)g(expression)16
1976 y(giv)n(en)27 b(b)n(y)h(the)g(b)r(ound)g(in)h(an)e(attempt)i(to)e
(minimize)16 2067 y(lea)n(v)n(e{one{out)34 b(error.)63
b(This)37 b(giv)n(es)f(a)g(con)n(v)n(ex)g(op-)16 2159
y(timization)h(problem)f(whic)n(h)h(constructs)f(a)g(sparse)16
2250 y(linear)e(classi\014er)e(in)j Fp(fe)l(atur)l(e)h(sp)l(ac)l(e)f
Fq(using)f(the)g(k)n(er-)16 2341 y(nel)27 b(tec)n(hnique.)36
b(As)27 b(suc)n(h)f(the)h(algorithm)e(p)r(ossesses)16
2433 y(man)n(y)39 b(of)h(the)g(same)f(prop)r(erties)g(as)g(SVMs.)73
b(The)16 2524 y(main)19 b(no)n(v)n(elt)n(y)e(of)h(the)h(algorithm)f(is)
g(that)h(apart)e(from)16 2615 y(the)36 b(c)n(hoice)f(of)h(k)n(ernel,)h
(it)f(is)g(parameterless)d({)j(the)16 2707 y(selection)26
b(of)g(the)h(n)n(um)n(b)r(er)f(of)h(training)f(errors)e(is)i(in-)16
2798 y(heren)n(t)32 b(in)h(the)g(algorithm)f(and)g(not)h(c)n(hosen)f(b)
n(y)g(an)16 2889 y(extra)26 b(free)g(parameter)f(as)h(in)h(SVMs.)37
b(First)27 b(exp)r(eri-)16 2981 y(men)n(ts)19 b(using)g(the)h(metho)r
(d)f(on)g(b)r(enc)n(hmark)g(datasets)16 3072 y(from)j(the)h(UCI)g(rep)r
(ository)e(sho)n(w)g(results)h(similar)g(to)16 3163 y(SVMs)28
b(whic)n(h)g(ha)n(v)n(e)e(b)r(een)j(tuned)f(to)g(ha)n(v)n(e)e(the)j(b)r
(est)16 3255 y(c)n(hoice)e(of)g(parameter.)-150 3485
y Fs(1)112 b(In)m(tro)s(duction)-150 3608 y Fq(Supp)r(ort)36
b(V)-7 b(ector)35 b(Mac)n(hines)g(\(SVMs\),)j(motiv)-5
b(ated)36 b(b)n(y)f(mini-)-150 3699 y(mizing)26 b(V)n(C)g(dimension,)g
(ha)n(v)n(e)e(pro)n(v)n(en)h(to)g(b)r(e)i(v)n(ery)d(successful)-150
3790 y(in)i(classi\014cation)f(learning)746 3783 y([)769
3790 y(V)-7 b(apnik,)27 b(1995;)d(Sc)n(h\177)-42 b(olk)n(opf,)26
b(1997;)-150 3882 y(V)-7 b(apnik,)43 b(1998)340 3875
y(])361 3882 y(.)75 b(In)40 b(this)g(algorithm)f(it)i(turned)f(out)g
(to)g(b)r(e)-150 3973 y(fa)n(v)n(ourable)30 b(to)i(form)n(ulate)g(the)g
(decision)g(functions)h(in)f(terms)-150 4064 y(of)f(a)g(symmetric,)h(p)
r(ositiv)n(e)f(de\014nite,)i(and)e(square)f(in)n(tegrable)-150
4156 y(function)45 b Fo(k)s Fq(\()p Fn(\001)p Fo(;)14
b Fn(\001)p Fq(\))46 b(referred)d(to)i(as)f(a)g Fp(kernel)p
Fq(.)89 b(The)45 b(class)f(of)-150 4247 y(decision)g(functions)g(|)g
(also)g(kno)n(wn)f(as)h Fp(kernel)h(classi\014ers)-150
4331 y Fq([)-127 4338 y(Jaakk)n(ola)25 b(and)i(Haussler,)g(1999)906
4331 y(])955 4338 y(|)g(is)h(then)g(giv)n(en)f(b)n(y)119
4562 y Fo(f)9 b Fq(\()p Fm(x)p Fq(\))24 b(=)e(sign)551
4420 y Fl( )663 4458 y Fk(`)617 4483 y Fl(X)623 4660
y Fk(i)p Fj(=1)751 4562 y Fo(\013)804 4574 y Fk(i)832
4562 y Fo(y)873 4574 y Fk(i)900 4562 y Fo(k)s Fq(\()p
Fm(x)1028 4574 y Fk(i)1056 4562 y Fo(;)14 b Fm(x)p Fq(\))1175
4420 y Fl(!)1255 4562 y Fo(;)70 b Fi(\013)23 b Fn(\025)f
Fm(0)p Fo(;)177 b Fq(\(1\))-150 4793 y(where)41 b(training)g(data)g
Fm(x)685 4805 y Fk(i)759 4793 y Fn(2)46 b Fh(R)914 4763
y Fk(N)1024 4793 y Fq(and)c(lab)r(els)f Fo(y)1488 4805
y Fk(i)1561 4793 y Fn(2)47 b(f\006)p Fq(1)p Fn(g)p Fo(:)-150
4885 y Fq(F)-7 b(or)37 b(simplicit)n(y)g(w)n(e)g(ignore)e
(classi\014ers)h(whic)n(h)h(use)g(an)g(extra)-150 4976
y(threshold)27 b(term.)-67 5067 y(Recen)n(tly)-7 b(,)25
b(utilizing)h(this)f(particular)e(t)n(yp)r(e)i(of)g(decision)f(rule)
-150 5159 y(\(that)k(eac)n(h)f(training)g(p)r(oin)n(t)h(corresp)r(onds)
d(to)j(one)f(basis)g(func-)-150 5250 y(tion\))j(an)g(upp)r(er)f(b)r
(ound)i(on)e(lea)n(v)n(e{one{out)e(error)h(for)h(SVMs)2025
1283 y(w)n(as)i(pro)n(v)n(en)2463 1276 y([)2486 1283
y(Jaakk)n(ola)f(and)h(Haussler,)i(1999)3534 1276 y(])3555
1283 y(.)50 b(This)32 b(b)r(ound)2025 1374 y(motiv)-5
b(ates)34 b(the)g(follo)n(wing)f(new)i(algorithm:)48
b(\014nd)35 b(a)f(decision)2025 1466 y(rule)44 b(of)h(the)g(form)f(in)h
(Equation)e(\(1\))i(that)g(minimizes)g(the)2025 1557
y(b)r(ound.)38 b(The)28 b(pap)r(er)g(is)g(structured)f(as)h(follo)n
(ws:)36 b(In)29 b(Section)e(2)2025 1648 y(w)n(e)h(\014rst)g(review)f
(the)i(SVM)g(algorithm.)38 b(In)28 b(Section)h(3)e(w)n(e)h(de-)2025
1740 y(scrib)r(e)22 b(the)h(lea)n(v)n(e{one{out)d(b)r(ound)j(and)g(the)
g(Lea)n(v)n(e{One{Out)2025 1831 y(Supp)r(ort)32 b(V)-7
b(ector)31 b(Mac)n(hine)f(\(LOOM\))i(algorithm)e(motiv)-5
b(ated)2025 1922 y(b)n(y)35 b(the)h(b)r(ound.)60 b(In)35
b(Section)h(4)f(w)n(e)g(rev)n(eal)e(the)j(relationship)2025
2014 y(b)r(et)n(w)n(een)31 b(SVMs)g(and)g(LOOMs)f(and)h(in)h(Section)f
(5)g(results)f(of)2025 2105 y(a)39 b(comparison)f(of)h(LOOMs)f(with)i
(SVMs)g(on)f(arti\014cial)f(and)2025 2196 y(b)r(enc)n(hmark)g(datasets)
h(from)f(the)i(UCI)f(rep)r(ository)f(are)g(pre-)2025
2288 y(sen)n(ted.)46 b(Finally)-7 b(,)31 b(in)g(Section)g(6)f(w)n(e)g
(summarize)g(and)h(discuss)2025 2379 y(further)d(directions.)2025
2572 y Fs(2)112 b(Supp)s(ort)38 b(V)-9 b(ector)36 b(Mac)m(hines)2025
2693 y Fq(Supp)r(ort)41 b(v)n(ector)f(mac)n(hines)2994
2686 y([)3017 2693 y(V)-7 b(apnik,)44 b(1995)3508 2686
y(])3571 2693 y(aim)d(to)g(mini-)2025 2785 y(mize)31
b(V)n(C)g(dimension)f(b)n(y)h(\014nding)f(a)h(h)n(yp)r(erplane)f(with)h
(mini-)2025 2876 y(mal)d(norm)f(that)i(separates)d(the)i(training)f
(data)h(mapp)r(ed)g(in)n(to)2025 2967 y(a)f(feature)h(space)f
Fn(F)35 b Fq(via)27 b(a)h(nonlinear)e(map)i(\010)23 b(:)g
Fh(R)3629 2937 y Fk(N)3721 2967 y Fn(!)g(F)8 b Fq(.)37
b(T)-7 b(o)2025 3059 y(construct)35 b(suc)n(h)g(a)g(h)n(yp)r(erplane)g
(in)g(the)h(general)e(case)h(where)2025 3150 y(one)27
b(allo)n(ws)f(some)h(training)g(error)f(one)h(minimizes:)2724
3369 y(\()p Fo(w)22 b Fn(\001)c Fo(w)r Fq(\))i(+)e Fo(C)3199
3266 y Fk(`)3153 3291 y Fl(X)3159 3467 y Fk(i)p Fj(=1)3287
3369 y Fo(\030)3323 3381 y Fk(i)3944 3369 y Fq(\(2\))2025
3584 y(sub)5 b(ject)28 b(to)2386 3718 y Fo(y)2427 3730
y Fk(i)2454 3718 y Fq(\()p Fo(w)21 b Fn(\001)e Fq(\010\()p
Fm(x)2750 3730 y Fk(i)2778 3718 y Fq(\)\))24 b Fn(\025)e
Fq(1)c Fn(\000)g Fo(\030)3132 3730 y Fk(i)3160 3718 y
Fo(;)70 b(i)22 b Fq(=)h(1)p Fo(;)14 b(:)g(:)g(:)f(;)h(`;)268
b Fq(\(3\))2917 3895 y Fi(\030)26 b Fn(\025)d Fm(0)p
Fo(;)800 b Fq(\(4\))2025 4028 y(and)27 b(then)i(uses)e(the)h(decision)f
(rule:)2636 4162 y Fo(f)9 b Fq(\()p Fm(x)p Fq(\))24 b(=)e(sign\()p
Fo(w)f Fn(\001)e Fq(\010\()p Fm(x)p Fq(\)\))p Fo(:)506
b Fq(\(5\))2108 4296 y(The)31 b(tractabilit)n(y)f(of)h(this)g
(algorithm)f(dep)r(ends)h(on)g(the)g(di-)2025 4387 y(mensionalit)n(y)22
b(of)h Fn(F)8 b Fq(.)36 b(Ho)n(w)n(ev)n(er,)22 b(one)g(can)h(remo)n(v)n
(e)e(this)j(dep)r(en-)2025 4479 y(dency)k(b)n(y)f(instead)g(maximizing)
g(the)h(dual)g(form:)2195 4594 y Fk(`)2149 4619 y Fl(X)2155
4796 y Fk(i)p Fj(=1)2283 4698 y Fo(\013)2336 4710 y Fk(i)2382
4698 y Fn(\000)2475 4642 y Fq(1)p 2475 4679 42 4 v 2475
4755 a(2)2606 4594 y Fk(`)2560 4619 y Fl(X)2541 4796
y Fk(i;j)s Fj(=1)2712 4698 y Fo(\013)2765 4710 y Fk(i)2793
4698 y Fo(\013)2846 4710 y Fk(j)2881 4698 y Fo(y)2922
4710 y Fk(i)2950 4698 y Fo(y)2991 4710 y Fk(j)3025 4698
y Fo(k)s Fq(\()p Fm(x)3153 4710 y Fk(i)3181 4698 y Fo(;)14
b Fm(x)3268 4710 y Fk(j)3304 4698 y Fq(\))p Fo(;)69 b
Fq(0)23 b Fn(\024)g Fi(\013)g Fn(\024)f Fo(C)131 b Fq(\(6\))2025
4924 y(where,)27 b(utilizing)h(that)2709 5144 y Fo(w)d
Fq(=)2927 5040 y Fk(`)2881 5065 y Fl(X)2887 5242 y Fk(i)p
Fj(=1)3015 5144 y Fo(\013)3068 5156 y Fk(i)3095 5144
y Fo(y)3136 5156 y Fk(i)3164 5144 y Fq(\010\()p Fm(x)3306
5156 y Fk(i)3334 5144 y Fq(\))578 b(\(7\))p eop
%%Page: 2 2
2 1 bop -150 -67 a Fq(and)34 b(that)h Fo(k)s Fq(\()p
Fm(x)p Fo(;)14 b Fm(x)420 -97 y Fg(0)444 -67 y Fq(\))35
b(=)f(\(\010\()p Fm(x)p Fq(\))24 b Fn(\001)f Fq(\010\()p
Fm(x)1028 -97 y Fg(0)1052 -67 y Fq(\)\),)36 b(the)f(decision)f(rule)g
(is)-150 24 y(no)n(w)27 b(in)h(the)g(form)f(of)h(Equation)e(\(1\).)-67
116 y(Alternativ)n(ely)-7 b(,)25 b(one)f(can)h(also)e(use)i(the)g
(primal)f(dual)h(form)n(u-)-150 207 y(lation)33 b(of)h(the)g(SVM)g
(algorithm)f(\(from)1178 200 y([)1202 207 y(Osuna)f(and)i(Girosi,)-150
298 y(1998)18 291 y(])39 298 y(\))c(rather)e(than)h(the)h(usual)e(form)
n(ulation,)h(whic)n(h)g(w)n(e)g(will)-150 390 y(describ)r(e)e(b)r
(ecause)f(of)i(its)f(direct)g(correlation)e(to)i(Lea)n(v)n(e{One{)-150
481 y(Out)35 b(SVMs.)58 b(The)35 b(SVM)g(primal)f(reform)n(ulation)f
(is)h(the)h(fol-)-150 572 y(lo)n(wing:)h(minimize)341
704 y Fk(`)295 728 y Fl(X)276 905 y Fk(i;j)s Fj(=1)448
807 y Fo(\013)501 819 y Fk(i)528 807 y Fo(\013)581 819
y Fk(j)616 807 y Fo(y)657 819 y Fk(i)685 807 y Fo(y)726
819 y Fk(j)760 807 y Fo(k)s Fq(\()p Fm(x)888 819 y Fk(i)917
807 y Fo(;)14 b Fm(x)1004 819 y Fk(j)1039 807 y Fq(\))19
b(+)f Fo(C)1298 704 y Fk(`)1252 728 y Fl(X)1258 905 y
Fk(i)p Fj(=1)1385 807 y Fo(\030)1421 819 y Fk(i)1769
807 y Fq(\(8\))-150 1049 y(sub)5 b(ject)28 b(to)101 1284
y Fo(y)142 1296 y Fk(i)229 1180 y(`)183 1205 y Fl(X)186
1382 y Fk(j)s Fj(=1)317 1284 y Fo(y)358 1296 y Fk(j)392
1284 y Fo(\013)445 1296 y Fk(j)481 1284 y Fo(k)s Fq(\()p
Fm(x)609 1296 y Fk(i)637 1284 y Fo(;)14 b Fm(x)724 1296
y Fk(j)759 1284 y Fq(\))23 b Fn(\025)g Fq(1)18 b Fn(\000)g
Fo(\030)1081 1296 y Fk(i)1109 1284 y Fo(;)42 b(i)22 b
Fq(=)h(1)p Fo(;)14 b(:)g(:)g(:)27 b(;)14 b(`;)158 b Fq(\(9\))606
1590 y Fi(\013)24 b Fn(\025)e Fm(0)p Fo(;)41 b Fi(\030)26
b Fn(\025)d Fm(0)p Fo(:)608 b Fq(\(10\))-150 1740 y(where)22
b(one)f(again)g(uses)h(a)f(decision)h(rule)g(of)g(the)g(form)g(in)g
(Equa-)-150 1831 y(tion)28 b(\(1\).)-150 2030 y Fs(3)112
b(Lea)m(v)m(e{One{Out)39 b(Supp)s(ort)f(V)-9 b(ector)18
2146 y(Mac)m(hines)-150 2271 y Fq(Supp)r(ort)39 b(V)-7
b(ector)39 b(Mac)n(hines)f(obtain)h(sparse)e(solutions)i(that)-150
2362 y(yield)21 b(a)g(direct)h(assessmen)n(t)e(of)h(generalization:)32
b(lea)n(v)n(e-one-out)-150 2454 y(error)25 b(is)h(b)r(ounded)h(b)n(y)f
(the)h(exp)r(ected)g(ratio)e(of)i(the)g(n)n(um)n(b)r(er)f(of)-150
2545 y(non{zero)37 b(co)r(e\016cien)n(ts)i(to)g(the)g(n)n(um)n(b)r(er)g
(of)g(training)f(exam-)-150 2636 y(ples)19 2629 y([)42
2636 y(V)-7 b(apnik,)32 b(1995)521 2629 y(])542 2636
y(.)45 b(In)717 2629 y([)740 2636 y(Jaakk)n(ola)27 b(and)k(Haussler,)f
(1999)1782 2629 y(])1833 2636 y(a)-150 2728 y(measure)h(of)h
(generalization)e(error)g(is)i(deriv)n(ed)g(for)f(a)h(class)f(of)-150
2819 y(classi\014ers)k(whic)n(h)j(includes)f(SVMs)g(but)h(can)f(b)r(e)g
(applied)g(to)-150 2910 y(non{sparse)25 b(solutions.)37
b(The)27 b(b)r(ound)h(is)g(as)f(follo)n(ws:)-150 3043
y Fm(Theorem)j(1)42 b Fp(F)-6 b(or)32 b(any)g(tr)l(aining)g(set)g(of)h
(examples)g Fm(x)1615 3055 y Fk(i)1670 3043 y Fn(2)27
b Fh(R)1806 3013 y Fk(N)-150 3135 y Fp(and)38 b(lab)l(els)h
Fo(y)289 3147 y Fk(i)353 3135 y Fn(2)f(f\006)p Fq(1)p
Fn(g)p Fp(,)g(for)g(a)g(SVM)g(tr)l(aine)l(d)g(by)g(maximiz-)-150
3226 y(ing)27 b(Equation)g(\(6\))g(the)g(le)l(ave{one{out)h(err)l(or)f
(estimate)g(of)h(the)-150 3317 y(classi\014er)j(is)f(b)l(ounde)l(d)g
(by)283 3514 y Fq(1)p 283 3551 42 4 v 286 3627 a Fo(`)395
3466 y Fk(`)349 3491 y Fl(X)355 3668 y Fk(i)p Fj(=1)482
3570 y Fo(\022)538 3403 y Fl(0)538 3553 y(@)610 3570
y Fn(\000)p Fo(y)716 3582 y Fk(i)757 3491 y Fl(X)764
3670 y Fk(j)s Fg(6)p Fj(=)p Fk(i)891 3570 y Fo(y)932
3582 y Fk(j)966 3570 y Fo(\013)1019 3582 y Fk(j)1054
3570 y Fo(k)s Fq(\()p Fm(x)1182 3582 y Fk(i)1211 3570
y Fo(;)14 b Fm(x)1298 3582 y Fk(j)1333 3570 y Fq(\))1365
3403 y Fl(1)1365 3553 y(A)1727 3570 y Fq(\(11\))-150
3827 y(where)27 b Fo(\022)r Fq(\()p Fn(\001)p Fq(\))i(is)e(the)h(step)g
(function.)-67 3919 y(This)h(b)r(ound)g(is)g(sligh)n(tly)g(tigh)n(ter)f
(than)h(the)h(classical)e(SVM)-150 4010 y(lea)n(v)n(e{one{out)c(b)r
(ound.)37 b(This)26 b(is)h(easy)e(to)i(see)f(when)h(one)f(con-)-150
4101 y(siders)40 b(that)h(all)g(training)f(p)r(oin)n(ts)h(that)g(ha)n
(v)n(e)f Fo(\013)1458 4113 y Fk(i)1531 4101 y Fq(=)k(0)d(can-)-150
4193 y(not)35 b(b)r(e)g(lea)n(v)n(e{one{out)c(errors)i(in)i(either)f(b)
r(ound.)58 b(V)-7 b(apnik's)-150 4284 y(b)r(ound)37 b(assumes)e(all)h
(supp)r(ort)g(v)n(ectors)f(\(all)i(training)e(p)r(oin)n(ts)-150
4375 y(with)27 b Fo(\013)91 4387 y Fk(i)141 4375 y Fo(>)c
Fq(0\))j(are)f(errors,)f(whereas)h(they)h(only)g(con)n(tribute)g(as)
-150 4467 y(errors)f(in)j(Equation)f(\(11\))g(if)430
4641 y Fo(y)471 4653 y Fk(i)512 4562 y Fl(X)519 4741
y Fk(j)s Fg(6)p Fj(=)p Fk(i)646 4641 y Fo(\013)699 4653
y Fk(j)734 4641 y Fo(y)775 4653 y Fk(j)809 4641 y Fo(k)s
Fq(\()p Fm(x)937 4653 y Fk(i)966 4641 y Fo(;)14 b Fm(x)1053
4653 y Fk(j)1088 4641 y Fq(\))23 b Fn(\024)g Fq(0)p Fo(:)-150
4885 y Fq(In)e(practice)g(this)g(means)g(the)h(b)r(ound)f(is)g(tigh)n
(ter)g(for)g(less)f(sparse)-150 4976 y(solutions.)-67
5067 y(Although)f(the)g(lea)n(v)n(e{one{out)d(b)r(ound)j(in)f(Theorem)g
(1)g(holds)-150 5159 y(for)51 b(Supp)r(ort)g(V)-7 b(ector)51
b(Mac)n(hines)g(the)g(motiv)-5 b(ation)51 b(b)r(ehind)-150
5250 y(SVMs)42 b(is)f(to)g(minimize)h(V)n(C)f(b)r(ounds)h(via)e
(Structural)h(Risk)2025 -67 y(Minimization)2551 -74 y([)2574
-67 y(V)-7 b(apnik,)49 b(1995)3070 -74 y(])3091 -67 y(.)87
b(T)-7 b(o)44 b(this)h(end,)j(the)d(term)2025 -38 y Fl(P)2126
24 y Fo(\013)2179 36 y Fk(i)2207 24 y Fo(\013)2260 36
y Fk(j)2295 24 y Fo(y)2336 36 y Fk(i)2364 24 y Fo(y)2405
36 y Fk(j)2439 24 y Fo(k)s Fq(\()p Fm(x)2567 36 y Fk(i)2595
24 y Fo(;)14 b Fm(x)2682 36 y Fk(j)2718 24 y Fq(\))38
b(in)h(Equation)e(\(8\))i(attempts)g(to)f(min-)2025 116
y(imize)43 b(V)n(C)h(dimension.)84 b(If)43 b(w)n(e)g(wish)g(to)h
(construct)e(classi-)2025 207 y(\014ers)29 b(motiv)-5
b(ated)30 b(b)n(y)g(Theorem)f(1)g(\(that)h(directly)g(attempt)g(to)2025
298 y(ac)n(hiev)n(e)h(a)g(lo)n(w)h(v)-5 b(alue)32 b(of)g(this)g
(expression\))f(w)n(e)h(need)g(to)g(con-)2025 390 y(sider)27
b(a)g(di\013eren)n(t)h(learning)e(tec)n(hnique.)2108
481 y(Theorem)21 b(1)g(motiv)-5 b(ates)21 b(the)h(follo)n(wing)f
(algorithm:)32 b(directly)2025 573 y(minimize)20 b(the)g(expression)e
(in)i(the)g(b)r(ound.)35 b(T)-7 b(o)19 b(do)g(this,)j(one)d(in-)2025
664 y(tro)r(duces)j(slac)n(k)g(v)-5 b(ariables)22 b(follo)n(wing)g(the)
h(standard)f(approac)n(h)2025 755 y(in)2127 748 y([)2150
755 y(Cortes)31 b(and)h(V)-7 b(apnik,)34 b(1995;)d(V)-7
b(apnik,)33 b(1995)3599 748 y(])3653 755 y(to)f(giv)n(e)g(the)2025
847 y(follo)n(wing)27 b(optimization)g(problem:)36 b(minimize)2978
978 y Fk(`)2932 1003 y Fl(X)2939 1180 y Fk(i)p Fj(=1)3066
1082 y Fo(\030)3106 1048 y Fk(\016)3102 1103 y(i)3902
1082 y Fq(\(12\))2025 1313 y(sub)5 b(ject)28 b(to)2214
1484 y Fo(y)2255 1496 y Fk(i)2296 1405 y Fl(X)2303 1583
y Fk(j)s Fg(6)p Fj(=)p Fk(i)2430 1484 y Fo(\013)2483
1496 y Fk(j)2518 1484 y Fo(y)2559 1496 y Fk(j)2593 1484
y Fo(k)s Fq(\()p Fm(x)2721 1496 y Fk(i)2749 1484 y Fo(;)14
b Fm(x)2836 1496 y Fk(j)2872 1484 y Fq(\))23 b Fn(\025)g
Fq(1)18 b Fn(\000)g Fo(\030)3194 1496 y Fk(i)3222 1484
y Fo(;)69 b(i)23 b Fq(=)f(1)p Fo(;)14 b(:)g(:)g(:)f(;)h(`)188
b Fq(\(13\))2781 1793 y Fi(\013)24 b Fn(\025)e Fm(0)p
Fo(;)41 b Fi(\030)26 b Fn(\025)d Fm(0)p Fo(:)608 b Fq(\(14\))2025
1943 y(where)39 b(one)g(c)n(ho)r(oses)f(a)h(\014xed)g(constan)n(t)g
(for)g(the)h(margin)e(to)2025 2034 y(ensure)27 b(non{zero)f(solutions.)
2108 2126 y(T)-7 b(o)53 b(mak)n(e)g(the)h(optimization)g(problem)f
(tractable,)60 b(the)2025 2217 y(smallest)37 b(v)-5 b(alue)37
b(for)f Fo(\016)k Fq(for)d(whic)n(h)g(w)n(e)g(obtain)f(a)h(con)n(v)n
(ex)f(ob-)2025 2308 y(jectiv)n(e)24 b(function)h(is)f
Fo(\016)i Fq(=)d(1.)35 b(This)24 b(giv)n(es)f(us)h(a)g(linear)f
(program-)2025 2400 y(ming)d(problem,)h(and,)h(as)d(in)h(other)g(k)n
(ernel)f(classi\014ers,)h(one)f(uses)2025 2491 y(the)28
b(decision)f(rule)g(giv)n(en)g(in)h(Equation)f(\(1\).)2108
2583 y(Note)g(that)h(Theorem)e(1)h(is)g(no)g(longer)f(v)-5
b(alid)27 b(for)g(this)g(learn-)2025 2674 y(ing)34 b(algorithm.)56
b(Nev)n(ertheless,)35 b(let)f(us)h(study)f(the)h(resulting)2025
2765 y(metho)r(d)25 b(whic)n(h)f(w)n(e)g(call)g(a)g(Lea)n(v)n
(e{One{Out)e(Supp)r(ort)j(V)-7 b(ector)2025 2857 y(Mac)n(hine)27
b(\(LOOM\).)2025 3057 y Fs(4)112 b(Relationship)36 b(to)h(SVMs)2025
3183 y Fq(In)24 b(this)g(section,)g(w)n(e)g(will)g(describ)r(e)f(the)h
(relationship)f(b)r(et)n(w)n(een)2025 3274 y(LOOMs)30
b(and)g(SVMs)h(in)g(three)f(areas:)41 b(the)31 b(metho)r(d)g(of)g
Fp(r)l(e)l(gu-)2025 3365 y(larization)p Fq(,)i(the)f
Fp(sp)l(arsity)g Fq(induced)f(in)g(the)g(decision)g(function)2025
3457 y(and)c(the)h Fp(mar)l(gin)j(loss)d Fq(emplo)n(y)n(ed)e(in)i
(training.)2025 3624 y Ff(4.1)105 b(Regularization)2025
3741 y Fq(The)20 b(new)f(tec)n(hnique)h(app)r(ears)f(to)g(ha)n(v)n(e)g
(no)g(free)g(regularization)2025 3832 y(parameter.)38
b(This)28 b(should)g(b)r(e)h(compared)e(with)i(SVMs)g(whic)n(h)2025
3923 y(con)n(trol)35 b(the)j(amoun)n(t)e(of)g(regularization)f(with)i
(the)g(free)g(pa-)2025 4015 y(rameter)22 b Fo(C)6 b Fq(.)36
b(F)-7 b(or)23 b(SVMs,)h(in)g(the)g(case)e(of)h Fo(C)30
b Fq(=)22 b Fn(1)i Fq(one)f(obtains)2025 4106 y(a)32
b Fp(har)l(d)j(mar)l(gin)d Fq(classi\014er)f(with)i(no)f(training)f
(errors.)48 b(In)33 b(the)2025 4197 y(case)e(of)g(noisy)g(or)f
(linearly)h(inseparable)f(datasets)3664 4167 y Fj(1)3732
4197 y Fq(\(through)2025 4289 y(noise,)36 b(outliers,)g(or)e(class)g(o)
n(v)n(erlap\))f(one)h(m)n(ust)h(accept)g(some)2025 4380
y(training)28 b(error)g(\(b)n(y)h(constructing)f(a)h(so)f(called)h
Fp(soft)i(mar)l(gin)p Fq(\).)2025 4471 y(T)-7 b(o)25
b(\014nd)h(the)g(b)r(est)f(c)n(hoice)g(of)g(training)g(error/margin)d
(tradeo\013)2025 4563 y(one)j(m)n(ust)h(c)n(ho)r(ose)f(the)h
(appropriate)e(v)-5 b(alue)26 b(of)g Fo(C)6 b Fq(.)36
b(In)26 b(LOOMs)2025 4654 y(a)i(soft)h(margin)e(is)i(automatically)e
(constructed.)39 b(This)29 b(o)r(ccurs)2025 4745 y(b)r(ecause)24
b(the)g(algorithm)f(do)r(es)h(not)g(attempt)g(to)g(minimize)h(the)2025
4837 y(n)n(um)n(b)r(er)30 b(of)h(training)e(errors)g({)h(it)g
(minimizes)h(the)g(n)n(um)n(b)r(er)f(of)2025 4928 y(training)e(p)r(oin)
n(ts)g(that)g(are)g(classi\014ed)f(incorrectly)g(ev)n(en)h(when)p
2025 4999 499 4 v 2129 5052 a Fe(1)2163 5084 y Fd(Here)38
b(w)n(e)f(refer)i(to)e(linear)i(inseparabilit)n(y)f(in)f
Fc(fe)l(atur)l(e)j(sp)l(ac)l(e)p Fd(.)2025 5167 y(Both)51
b(SVMs)f(and)g(LOOM)g(Mac)n(hines)i(are)e(essen)n(tially)i(linear)2025
5250 y(classi\014ers.)p eop
%%Page: 3 3
3 2 bop -150 -67 a Fq(they)21 b(are)f(remo)n(v)n(ed)f(from)h(the)i
(linear)e(com)n(bination)g(that)h(forms)-150 24 y(the)34
b(decision)g(rule.)56 b(Ho)n(w)n(ev)n(er,)33 b(if)i(one)e(can)h
(classify)f(a)h(train-)-150 116 y(ing)h(p)r(oin)n(t)h(correctly)e(when)
h(it)h(is)f(remo)n(v)n(ed)f(from)h(the)h(linear)-150
207 y(com)n(bination)i(then)i(it)g(will)f(alw)n(a)n(ys)e(b)r(e)j
(classi\014ed)f(correctly)-150 298 y(when)33 b(it)h(is)f(placed)g(bac)n
(k)f(in)n(to)h(the)h(rule.)53 b(This)33 b(can)g(b)r(e)g(seen)-150
390 y(as)d Fo(\013)8 402 y Fk(i)36 390 y Fo(y)77 402
y Fk(i)104 390 y Fo(k)s Fq(\()p Fm(x)232 402 y Fk(i)260
390 y Fo(;)14 b Fm(x)347 402 y Fk(i)375 390 y Fq(\))31
b(is)g(alw)n(a)n(ys)e(the)i(same)f(sign)g(as)g Fo(y)1471
402 y Fk(i)1499 390 y Fq(,)h(all)g(train-)-150 481 y(ing)40
b(p)r(oin)n(ts)f(are)g(pushed)h(to)n(w)n(ards)e(the)j(correct)d(side)i
(of)g(the)-150 572 y(decision)25 b(b)r(oundary)g(b)n(y)h(their)f(o)n
(wn)h(comp)r(onen)n(t)f(of)h(the)g(linear)-150 664 y(com)n(bination.)
-150 829 y Ff(4.2)105 b(Sparsit)m(y)-150 945 y Fq(Lik)n(e)27
b(Supp)r(ort)h(V)-7 b(ector)28 b(Mac)n(hines,)f(the)h(solutions)f(of)h
(the)g(new)-150 1036 y(algorithm)35 b(can)g(b)r(e)h(sparse;)j(that)d
(is,)i(only)d(some)g(of)h(the)g(co-)-150 1127 y(e\016cien)n(ts)d
Fo(\013)248 1139 y Fk(i)276 1127 y Fo(;)47 b(i)33 b Fq(=)f(1)p
Fo(;)14 b(:)g(:)g(:)f(;)h(`)33 b Fq(are)g(non{zero)e(\(see)j(Section)f
(5.2)-150 1219 y(for)23 b(computer)g(sim)n(ulations)g(con\014rming)g
(this\).)36 b(As)24 b(the)g(co)r(e\016-)-150 1310 y(cien)n(t)g(of)f(a)g
(training)g(p)r(oin)n(t)h(do)r(es)f(not)h(con)n(tribute)f(to)g(its)h
(lea)n(v)n(e{)-150 1401 y(one{out)29 b(error)e(in)j(constrain)n(t)f
(\(13\))g(the)h(algorithm)f(do)r(es)g(not)-150 1493 y(assign)k(a)i
(non{zero)d(v)-5 b(alue)35 b(to)f(the)i(co)r(e\016cien)n(t)e(of)h(a)f
(training)-150 1584 y(p)r(oin)n(t)f(in)f(order)f(to)i(correctly)e
(classify)g(it.)52 b(A)33 b(training)f(p)r(oin)n(t)-150
1675 y(has)k(to)h(b)r(e)g(classi\014ed)f(correctly)g(b)n(y)g(the)h
(training)f(p)r(oin)n(ts)h(of)-150 1767 y(the)26 b(same)e(lab)r(el)i
(that)f(are)g(close)f(to)h(it)h(\(in)g Fp(fe)l(atur)l(e)i(sp)l(ac)l(e)p
Fq(\),)e(but)-150 1858 y(the)c(training)g(p)r(oin)n(t)g(itself)g(mak)n
(es)f(no)h(con)n(tribution)g(to)g(its)g(o)n(wn)-150 1949
y(classi\014cation.)-150 2115 y Ff(4.3)105 b(Margin)35
b(loss)-150 2231 y Fq(Noting)27 b(that)15 2399 y Fo(y)56
2411 y Fk(i)97 2320 y Fl(X)105 2498 y Fk(j)s Fg(6)p Fj(=)p
Fk(i)231 2399 y Fo(\013)284 2411 y Fk(j)319 2399 y Fo(y)360
2411 y Fk(j)395 2399 y Fo(k)s Fq(\()p Fm(x)523 2411 y
Fk(i)551 2399 y Fo(;)14 b Fm(x)638 2411 y Fk(j)673 2399
y Fq(\))24 b(=)e Fo(y)857 2411 y Fk(i)885 2399 y Fo(f)9
b Fq(\()p Fm(x)1017 2411 y Fk(i)1044 2399 y Fq(\))19
b Fn(\000)f Fo(\013)1231 2411 y Fk(i)1259 2399 y Fo(k)s
Fq(\()p Fm(x)1387 2411 y Fk(i)1415 2399 y Fo(;)c Fm(x)1502
2411 y Fk(i)1530 2399 y Fq(\))165 b(\(15\))-150 2645
y(where)22 b Fo(f)9 b Fq(\()p Fm(x)p Fq(\))23 b(is)g(giv)n(en)f(in)h
(Equation)e(\(1\),)j(one)e(can)h(see)f(that)h(the)-150
2736 y(new)f(algorithm)g(can)f(b)r(e)i(written)g(as)e(the)i(follo)n
(wing)e(equiv)-5 b(alen)n(t)-150 2828 y(linear)27 b(program:)35
b(minimize)810 2957 y Fk(`)764 2982 y Fl(X)770 3159 y
Fk(i)p Fj(=1)897 3061 y Fo(\030)933 3073 y Fk(i)1727
3061 y Fq(\(16\))-150 3289 y(sub)5 b(ject)28 b(to)-8
3437 y Fo(y)33 3449 y Fk(i)61 3437 y Fo(f)9 b Fq(\()p
Fm(x)193 3449 y Fk(i)221 3437 y Fq(\))23 b Fn(\025)g
Fq(1)17 b Fn(\000)i Fo(\030)543 3449 y Fk(i)589 3437
y Fq(+)f Fo(\013)725 3449 y Fk(i)753 3437 y Fo(k)s Fq(\()p
Fm(x)881 3449 y Fk(i)909 3437 y Fo(;)c Fm(x)996 3449
y Fk(i)1024 3437 y Fq(\))p Fo(;)69 b(i)23 b Fq(=)g(1)p
Fo(;)14 b(:)g(:)g(:)f(;)h(`;)155 b Fq(\(17\))592 3641
y Fi(\013)24 b Fn(\025)e Fm(0)p Fo(;)69 b Fi(\030)26
b Fn(\025)d Fm(0)p Fo(:)594 b Fq(\(18\))-67 3789 y(In)32
b(this)g(setting)g(of)f(the)i(optimization)e(problem)g(it)h(is)g(easy)
-150 3880 y(to)h(see)g(that)h(a)e(training)h(p)r(oin)n(t)g
Fm(x)949 3892 y Fk(i)1011 3880 y Fq(is)g(linearly)f(p)r(enalized)i(for)
-150 3971 y(failing)25 b(to)g(obtain)f(a)h(margin)f(of)h
Fo(\032)934 3983 y Fk(f)977 3971 y Fq(\()p Fm(x)1059
3983 y Fk(i)1087 3971 y Fo(;)14 b(y)1165 3983 y Fk(i)1192
3971 y Fq(\))24 b Fn(\025)e Fq(1)13 b(+)g Fo(\013)1521
3983 y Fk(i)1549 3971 y Fo(k)s Fq(\()p Fm(x)1677 3983
y Fk(i)1705 3971 y Fo(;)h Fm(x)1792 3983 y Fk(i)1820
3971 y Fq(\).)-150 4063 y(In)39 b(SVMs,)i(a)d(training)g(p)r(oin)n(t)h
Fm(x)929 4075 y Fk(i)995 4063 y Fq(is)f(linearly)g(p)r(enalized)h(for)
-150 4154 y(failing)22 b(to)g(obtain)g(a)g(margin)f(of)i
Fo(\032)918 4166 y Fk(f)960 4154 y Fq(\()p Fm(x)1042
4166 y Fk(i)1071 4154 y Fo(;)14 b(y)1149 4166 y Fk(i)1176
4154 y Fq(\))23 b Fn(\025)g Fq(1)f(\(see)g(Equation)-150
4245 y(\(9\)\).)56 b(Th)n(us)34 b(the)g(margin)f(in)h(SVMs)g(is)g
(treated)f Fp(e)l(quivalently)-150 4337 y Fq(for)40 b(eac)n(h)f
(training)h(pattern.)75 b(In)41 b(LOOMs,)h(the)f(larger)e(the)-150
4428 y(con)n(tribution)31 b(the)h(training)f(p)r(oin)n(t)h(has)f(to)h
(the)g(decision)f(rule)-150 4519 y(\(the)i(larger)d(the)i(v)-5
b(alue)32 b(of)g Fo(\013)788 4531 y Fk(i)815 4519 y Fq(\),)i(the)e
(larger)e(its)i(margin)f(m)n(ust)-150 4611 y(b)r(e.)60
b(Th)n(us,)37 b(the)f(LOOM)e(algorithm,)i(in)g(con)n(trast)e(to)h(SVMs)
-150 4702 y(con)n(trols)26 b(the)i(margin)f(for)g(eac)n(h)f(training)h
(p)r(oin)n(t)h Fp(adaptively)p Fq(.)-67 4793 y(This)34
b(metho)r(d)h(can)f(b)r(e)h(view)n(ed)e(in)i(the)f(follo)n(wing)g(w)n
(a)n(y:)49 b(If)-150 4885 y(a)37 b(p)r(oin)n(t)h(\010\()p
Fm(x)298 4897 y Fk(k)339 4885 y Fq(\))g(is)f(an)g(outlier)g(\(the)i(v)
-5 b(alues)37 b(of)g Fo(k)s Fq(\()p Fm(x)1575 4897 y
Fk(i)1603 4885 y Fo(;)14 b Fm(x)1690 4897 y Fk(k)1731
4885 y Fq(\))38 b(to)-150 4976 y(p)r(oin)n(ts)33 b(\010\()p
Fm(x)247 4988 y Fk(i)275 4976 y Fq(\))g(in)g(its)g(class)f(are)g(small)
g(and)h(to)g(p)r(oin)n(ts)g(in)g(the)-150 5067 y(other)h(class)g(are)f
(large\))h(then)h(some)f Fo(\013)1128 5079 y Fk(i)1156
5067 y Fq(,)i(where)e Fo(y)1503 5079 y Fk(i)1565 5067
y Fq(=)h Fo(y)1706 5079 y Fk(k)1746 5067 y Fq(,)i(in)-150
5159 y(Equation)23 b(\(13\))h(ha)n(v)n(e)e(to)i(b)r(e)h(large)d(in)i
(order)f(to)h(classify)f(\010\()p Fm(x)1801 5171 y Fk(k)1843
5159 y Fq(\))-150 5250 y(correctly)-7 b(.)65 b(SVMs)38
b(use)f(the)h(same)f(margin)f(for)h(suc)n(h)g(p)r(oin)n(ts)2025
-67 y(\010\()p Fm(x)2167 -55 y Fk(i)2195 -67 y Fq(\))c(and)g(they)g
(attempt)g(to)g(classify)f(\010\()p Fm(x)3483 -55 y Fk(k)3524
-67 y Fq(\))h(correctly)-7 b(.)51 b(In)2025 24 y(LOOMs)38
b(the)i(margin)e(is)h(automatically)f(increased)h(to)g(1)25
b(+)2025 116 y Fo(\013)2078 128 y Fk(i)2106 116 y Fo(k)s
Fq(\()p Fm(x)2234 128 y Fk(i)2262 116 y Fo(;)14 b Fm(x)2349
128 y Fk(i)2377 116 y Fq(\))20 b(for)g(these)g(p)r(oin)n(ts)f(and)h(th)
n(us)g(less)g(attempt)g(is)g(made)2025 207 y(to)37 b(correctly)e
(classify)h(\010\()p Fm(x)2927 219 y Fk(k)2969 207 y
Fq(\).)64 b(Th)n(us)37 b(the)g Fp(adaptive)i Fq(margin)2025
298 y(pro)n(vides)27 b(robustness.)39 b(Moreo)n(v)n(er,)26
b(it)i(b)r(ecomes)h(clear)e(that)i(in)2025 390 y(LOOMs)35
b(the)i(p)r(oin)n(ts)g(\010\()p Fm(x)2904 402 y Fk(k)2945
390 y Fq(\))g(whic)n(h)f(are)g(represen)n(tativ)n(es)e(of)2025
481 y(clusters)27 b(\(cen)n(tres\))f(in)i(feature)f(space,)f(i.e.)37
b(those)27 b(whic)n(h)g(ha)n(v)n(e)2025 572 y(large)21
b(v)-5 b(alues)22 b(of)h Fo(k)s Fq(\()p Fm(x)2683 584
y Fk(i)2711 572 y Fo(;)14 b Fm(x)2798 584 y Fk(k)2839
572 y Fq(\))23 b(to)g(p)r(oin)n(ts)f(in)h(their)g(class,)f(will)h(ha)n
(v)n(e)2025 664 y(non{zero)j Fo(\013)2429 676 y Fk(k)2470
664 y Fq(.)2025 868 y Fs(5)112 b(Exp)s(erimen)m(ts)2025
996 y Fq(In)35 b(this)h(section)f(w)n(e)f(describ)r(e)h(exp)r(erimen)n
(ts)g(comparing)f(the)2025 1087 y(new)25 b(tec)n(hnique)f(to)g(SVMs.)37
b(W)-7 b(e)24 b(\014rst)h(describ)r(e)f Fp(arti\014cial)k(data)2025
1178 y Fq(to)j(visualize)e(the)i(tec)n(hniques,)h(and)e(then)h(presen)n
(t)f(results)g(on)2025 1270 y Fp(b)l(enchmark)h(datasets)p
Fq(.)2025 1439 y Ff(5.1)105 b(Arti\014cial)35 b(Data)2025
1559 y Fq(W)-7 b(e)27 b(\014rst)g(describ)r(e)f(some)g(to)n(y)g(t)n(w)n
(o)g(dimensional)g(examples)g(to)2025 1650 y(illustrate)i(ho)n(w)f(the)
h(new)g(tec)n(hnique)g(w)n(orks.)36 b(Figure)28 b(1)f(sho)n(ws)2025
1742 y(t)n(w)n(o)34 b(arti\014cially)g(constructed)h(training)f
(problems)g(\(left)i(and)2025 1833 y(righ)n(t\))20 b(with)i(v)-5
b(arious)19 b(solutions)h(\(top)h(to)g(b)r(ottom)g(of)f(the)i(page\).)
2025 1924 y(W)-7 b(e)28 b(\014xed)g(the)g(k)n(ernel)e(to)i(b)r(e)g(a)f
(radial)f(basis)h(function)h(\(RBF\))2557 2086 y Fo(K)6
b Fq(\()p Fo(x;)14 b(y)s Fq(\))24 b(=)e(exp\()p Fn(\000)p
Fo(\025)p Fn(j)p Fo(x)d Fn(\000)f Fo(y)s Fn(j)3448 2051
y Fj(2)3485 2086 y Fq(\))385 b(\(19\))2025 2237 y(with)27
b Fo(\025)d Fq(=)f(1)j(and)h(then)g(found)h(the)f(solution)g(to)f(the)i
(problems)2025 2329 y(with)23 b(Lea)n(v)n(e-One-Out)d(Mac)n(hines)h
(\(LOOMs\),)i(whic)n(h)f(ha)n(v)n(e)f(no)2025 2420 y(other)37
b(free)h(parameters,)h(and)f(with)g(SVMs,)j(for)d(whic)n(h)f(one)2025
2511 y(con)n(trols)23 b(the)i Fp(soft)i(mar)l(gin)e Fq(with)g(the)g
(free)g(parameter)e Fo(C)6 b Fq(.)36 b(The)2025 2603
y(\014rst)20 b(solution)f(\(top)h(of)g(the)h(page\))e(for)g(b)r(oth)i
(training)e(problems)2025 2694 y(\(left)25 b(and)e(righ)n(t\))h(is)f
(the)i(solution)e(giv)n(en)g(b)n(y)g(LOOMs,)h(and)g(the)2025
2785 y(other)38 b(four)f(solutions)h(are)f(SVMs)h(with)h(v)-5
b(arious)37 b(c)n(hoices)g(of)2025 2877 y Fp(soft)30
b(mar)l(gin)e Fq(\(parameter)f Fo(C)6 b Fq(\).)2108 3057
y(In)26 b(the)h(\014rst)f(problem)f(\(left\))j(the)e(t)n(w)n(o)g
(classes)f(\(crosses)f(and)2025 3148 y(dots\))34 b(are)f(almost)h
(linearly)f(separable)g(apart)g(from)h(a)g(single)2025
3240 y(outlier)j(\(a)h(dot\).)68 b(The)38 b(automatic)f
Fp(soft)i(mar)l(gin)g Fq(con)n(trol)d(of)2025 3331 y(LOOMs)42
b(constructs)h(a)g(classi\014er)f(whic)n(h)h(incorrectly)f(clas-)2025
3422 y(si\014es)37 b(the)h(far)g(righ)n(t)e(dot,)41 b(assuming)36
b(that)i(it)h(is)e(an)g(outlier.)2025 3514 y(Thic)n(k)22
b(lines)g(represen)n(t)e(the)j(separating)d(h)n(yp)r(erplane)i(and)f
(dot-)2025 3605 y(ted)43 b(lines)f(represen)n(t)f(the)i(size)f(of)g
(margin.)81 b(Supp)r(ort)42 b(V)-7 b(ec-)2025 3696 y(tors)30
b(\(training)h(p)r(oin)n(ts)g(with)h Fo(\013)3044 3708
y Fk(i)3101 3696 y Fo(>)c Fq(0\))k(are)e(emphasized)h(with)2025
3788 y(rings.)51 b(Note)32 b(also)g(the)h(large)e(margin)g(of)i(the)g
(LOOM)e(classi-)2025 3879 y(\014cation.)52 b(The)33 b(Supp)r(ort)g(V)-7
b(ector)32 b(solutions)h(\(second)f(picture)2025 3970
y(from)g(top)h(do)n(wn)n(w)n(ards\))d(ha)n(v)n(e)i(parameters)e
Fo(C)38 b Fq(=)31 b(1)h(\(middle\))2025 4062 y(and)19
b Fo(C)30 b Fq(=)22 b(100)c(\(b)r(ottom\).)35 b(Constructing)19
b(a)g Fp(har)l(d)24 b(mar)l(gin)c Fq(with)2025 4153 y
Fo(C)29 b Fq(=)23 b(100)h(o)n(v)n(er\014ts)f(with)j(zero)e(training)h
(error)e(whilst)j(with)f(de-)2025 4244 y(creasing)33
b Fo(C)41 b Fq(the)35 b(SVM)g(solution)g(tends)g(to)n(w)n(ards)d(a)j
(decision)2025 4336 y(rule)22 b(similar)f(to)g(the)i(one)e(found)h(b)n
(y)g(LOOMs.)34 b(Note,)23 b(ho)n(w)n(ev)n(er,)2025 4427
y(ev)n(en)g(with)g Fo(C)30 b Fq(=)22 b(1)h(the)h(non-smo)r(othness)e
(of)h(the)h(decision)e(rule)2025 4518 y(b)n(y)34 b(examining)h(the)g
(margin)f(\(dotted)h(line\).)59 b(Moreo)n(v)n(er,)34
b(the)2025 4610 y(outlier)27 b(here)g(is)h(still)g(correctly)e
(classi\014ed.)2108 4702 y(In)d(the)h(second)e(training)h(problem)g
(\(righ)n(t\),)g(the)h(t)n(w)n(o)e(classes)2025 4793
y(o)r(ccup)n(y)31 b(opp)r(osite)g(sides)g(\(horizon)n(tally\))g(of)g
(the)h(picture,)g(but)2025 4885 y(sligh)n(tly)37 b(o)n(v)n(erlap.)67
b(In)38 b(this)g(case)f(the)i(data)e(is)h(only)g(separa-)2025
4976 y(ble)j(with)g(a)f(highly)g(nonlinear)g(decision)g(rule,)j(as)d
(re\015ected)2025 5067 y(in)c(the)h Fp(har)l(d)i(mar)l(gin)d
Fq(solution)g(b)n(y)g(an)g(SVM)h(with)g(parame-)2025
5159 y(ter)29 b Fo(C)i Fq(=)25 b(100)j(\(b)r(ottom)h(righ)n(t\).)41
b(Again,)28 b(a)h(reasonable)e(c)n(hoice)2025 5250 y(of)35
b(rule)f(\()p Fo(C)42 b Fq(=)35 b(1,)h(middle)f(righ)n(t)f(picture\))i
(can)e(b)r(e)h(found)g(b)n(y)p eop
%%Page: 4 4
4 3 bop -147 -147 1010 4 v -147 848 4 995 v -91 823 a
@beginspecial 140 @llx 227 @lly 477 @urx 583 @ury 1077
@rwi 1133 @rhi @setspecial
%%BeginDocument: loo1.eps


% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def

MathWorks begin

0 cap

end

MathWorks begin
bpage

bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1470   340  4039  4274 MR c np
88 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
1 j
1 sg
   0    0 6913 5186 PR
6 w
gs 898 388 5357 4226 MR c np

gr 
1e+02 w
0 sg
2151 3668 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2507 3600 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2863 3359 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2258 2810 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2863 2123 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2472 2054 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2187 1436 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2650 1092 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
5001 2054 PD
gs 898 388 5357 4226 MR c np
24 w

gr 
24 w
4417 3859 mt 4517 3959 L
4517 3859 mt 4417 3959 L
gs 898 388 5357 4226 MR c np

gr 
4773 3447 mt 4873 3547 L
4873 3447 mt 4773 3547 L
gs 898 388 5357 4226 MR c np

gr 
4524 3103 mt 4624 3203 L
4624 3103 mt 4524 3203 L
gs 898 388 5357 4226 MR c np

gr 
4951 2760 mt 5051 2860 L
5051 2760 mt 4951 2860 L
gs 898 388 5357 4226 MR c np

gr 
4630 2416 mt 4730 2516 L
4730 2416 mt 4630 2516 L
gs 898 388 5357 4226 MR c np

gr 
4737 1557 mt 4837 1657 L
4837 1557 mt 4737 1657 L
gs 898 388 5357 4226 MR c np

gr 
4452 1042 mt 4552 1142 L
4552 1042 mt 4452 1142 L
gs 898 388 5357 4226 MR c np
-16 84 -15 85 -15 84 -15 85 -4 17 -10 67 -14 85 -14 84 
-13 85 -13 84 -13 85 -12 84 -12 85 -6 35 -7 49 -13 85 
-14 84 -15 85 -18 84 -19 85 -21 80 -1 4 -24 85 -26 84 
-28 85 -28 80 -2 4 -31 85 -30 84 -29 85 -15 54 -10 30 
-21 85 -12 84 -2 85 7 84 18 85 20 68 4 16 28 85 
33 84 34 85 8 21 25 63 34 85 32 84 16 48 14 37 
30 84 27 85 26 84 10 42 14 43 24 84 22 85 21 84 
19 85 7 35 13 49 20 85 3222 388 61 MP stroke
DO
0 2 -4 84 -6 85 -7 84 -11 85 -16 84 -24 85 -36 84 
-3 5 -41 80 -65 84 -1 1 -90 84 -17 13 -107 61 -32 10 
-75 26 -107 16 -108 -4 -107 -22 -39 -16 -68 -24 -104 -60 -3 -2 
-107 -81 -1 -2 -89 -84 -17 -18 -60 -67 -47 -59 -19 -25 -60 -85 
-28 -46 -24 -38 -45 -85 -35 -84 -4 -12 -26 -73 -22 -84 -14 -85 
-7 -84 1 -85 7 -84 12 -85 18 -84 22 -85 9 -33 13 -51 
23 -85 23 -84 25 -85 24 -81 0 -3 22 -85 23 -84 21 -85 
19 -84 17 -85 5 -25 9 -59 14 -85 18 -84 28 -85 38 -74 
5 -10 58 -85 44 -46 45 -38 62 -45 81 -40 26 -12 107 -34 
107 -15 108 2 107 21 89 38 18 8 107 77 0 0 77 84 
30 51 21 34 38 84 26 85 20 84 2 12 19 73 21 84 
21 85 21 84 20 85 5 29 13 55 15 85 11 84 6 85 
1 84 -2 85 -4 84 1501 2501 100 MP stroke
-6 85 -7 84 -6 85 -6 84 -5 85 -5 84 -5 83 1541 1911 8 MP stroke
14 54 30 84 42 85 21 34 30 50 66 85 11 13 71 71 
36 32 75 53 32 21 108 52 37 11 70 24 107 17 107 -1 
107 -21 49 -19 58 -19 107 -62 5 -3 102 -83 2 -2 77 -84 
29 -39 30 -46 47 -84 30 -73 5 -12 30 -84 21 -85 16 -84 
11 -85 8 -84 6 -85 3 -84 0 -85 -4 -84 -8 -85 -15 -84 
-24 -85 -36 -84 -13 -25 -33 -60 -67 -84 -7 -8 -86 -77 -22 -16 
-107 -60 -24 -8 -83 -30 -107 -19 -107 -1 -107 15 -107 33 -5 2 
-102 45 -63 39 -45 31 -65 54 -42 40 -43 44 -64 81 -3 4 
-61 84 -43 78 -4 7 -44 84 -33 85 -25 84 -1 7 -20 78 
-13 84 -5 85 2 84 9 85 18 84 9 31 5397 3146 79 MP stroke
1 1 23 85 42 84 41 56 24 29 84 76 12 8 95 57 
83 28 24 8 107 18 107 -4 91 -22 16 -3 107 -46 52 -36 
55 -43 40 -41 60 -85 8 -16 33 -68 24 -84 9 -85 -3 -85 
-17 -84 -32 -85 -14 -26 -32 -58 -67 -85 -9 -9 -87 -75 -20 -15 
-107 -55 -54 -15 -53 -16 -107 -8 -107 16 -22 8 -85 29 -90 56 
-17 12 -78 72 -30 37 -35 48 -44 84 -25 85 -3 18 -12 66 
-1 85 13 83 5076 981 51 MP stroke
SO

gr 
  90   90 2151 3668 FO
  90   90 2507 3600 FO
  90   90 2863 3359 FO
  90   90 2258 2810 FO
  90   90 2472 2054 FO
  90   90 2187 1436 FO
  90   90 4467 3909 FO
  90   90 4823 3497 FO
  90   90 4574 3153 FO
  90   90 4502 1092 FO
gs 898 388 5357 4226 MR c np

gr 
6 w

end

eplot

epage
end

showpage

%%EndDocument
 @endspecial 859 848 V -147 851 1010 4 v 890 -147 V 890
848 4 995 v 1037 w @beginspecial 134 @llx 227 @lly 543
@urx 592 @ury 1077 @rwi 1133 @rhi @setspecial
%%BeginDocument: loo2.eps


% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def

MathWorks begin

0 cap

end

MathWorks begin
bpage

bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1393   231  4910  4383 MR c np
88 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
1 j
1 sg
   0    0 6913 5186 PR
6 w
gs 898 388 5357 4226 MR c np

gr 
1e+02 w
0 sg
1753 4093 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2665 3999 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3576 3672 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3257 2922 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2346 2454 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3120 1985 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3075 1564 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2254 1048 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3758 580 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
4032 1892 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3576 4280 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
1981 1751 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2984 627 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
5399 1985 PD
gs 898 388 5357 4226 MR c np
24 w

gr 
24 w
4210 4371 mt 4310 4471 L
4310 4371 mt 4210 4471 L
gs 898 388 5357 4226 MR c np

gr 
4665 3809 mt 4765 3909 L
4765 3809 mt 4665 3909 L
gs 898 388 5357 4226 MR c np

gr 
3891 3340 mt 3991 3440 L
3991 3340 mt 3891 3440 L
gs 898 388 5357 4226 MR c np

gr 
5349 2872 mt 5449 2972 L
5449 2872 mt 5349 2972 L
gs 898 388 5357 4226 MR c np

gr 
4939 2404 mt 5039 2504 L
5039 2404 mt 4939 2504 L
gs 898 388 5357 4226 MR c np

gr 
4164 1233 mt 4264 1333 L
4264 1233 mt 4164 1333 L
gs 898 388 5357 4226 MR c np

gr 
4392  530 mt 4492  630 L
4492  530 mt 4392  630 L
gs 898 388 5357 4226 MR c np

gr 
4893  905 mt 4993 1005 L
4993  905 mt 4893 1005 L
gs 898 388 5357 4226 MR c np

gr 
4210 2638 mt 4310 2738 L
4310 2638 mt 4210 2738 L
gs 898 388 5357 4226 MR c np

gr 
4711 1842 mt 4811 1942 L
4811 1842 mt 4711 1942 L
gs 898 388 5357 4226 MR c np

gr 
5121 3340 mt 5221 3440 L
5221 3340 mt 5121 3440 L
gs 898 388 5357 4226 MR c np

gr 
3754 2169 mt 3854 2269 L
3854 2169 mt 3754 2269 L
gs 898 388 5357 4226 MR c np

gr 
2615 3340 mt 2715 3440 L
2715 3340 mt 2615 3440 L
gs 898 388 5357 4226 MR c np
18 84 19 85 20 84 21 85 16 62 6 22 21 85 22 84 
21 85 20 84 18 73 2 12 23 84 26 85 33 84 23 49 
19 36 54 84 34 50 30 35 69 84 8 11 65 74 42 60 
21 24 52 85 32 84 2 12 17 73 1 84 -17 85 -1 2 
-26 83 -41 84 -40 65 -11 20 -56 84 -40 56 -20 28 -62 85 
-25 36 -36 49 -56 84 -15 27 -37 57 -42 85 -28 82 -2 3 
-22 84 -10 84 -2 85 6 85 12 84 17 84 1 5 16 80 
19 85 19 84 17 84 15 85 12 85 9 77 0 7 7 84 
4 85 3886 388 66 MP stroke
DO
50 84 22 48 19 37 34 84 25 85 18 84 11 82 1 3 
6 84 0 85 -6 84 -1 6 -10 79 -17 84 -23 85 -30 84 
-27 63 -9 22 -39 84 -46 85 -13 25 -34 59 -47 85 -26 51 
-19 33 -34 85 -19 84 1 85 21 84 38 85 12 20 37 65 
55 84 15 22 42 63 57 84 8 12 49 72 53 85 5 9 
48 76 47 84 12 24 33 60 41 85 33 80 2 5 34 84 
28 84 22 85 16 85 5 41 7 43 8 84 1 85 -4 85 
-11 84 -1 5 -13 79 -20 85 -27 85 -35 84 -12 24 -27 60 
-47 85 1615 388 66 MP stroke
-3 84 3 85 8 84 12 85 16 84 18 85 17 68 3 16 
21 85 21 84 21 85 24 84 17 50 12 35 40 84 52 85 
3 4 69 80 38 44 50 41 57 54 45 30 62 56 42 29 
65 62 31 22 74 85 2 5 53 79 18 85 -10 84 -37 85 
-24 31 -29 54 -65 84 -13 13 -54 72 -53 59 -19 25 -68 84 
-20 24 -46 61 -61 85 0 0 -55 84 -46 84 -6 15 -33 70 
-30 85 -20 84 -11 84 -4 85 2 85 8 84 12 84 15 85 
17 85 17 84 16 84 11 56 5 29 15 85 16 84 16 84 
17 85 3721 388 66 MP stroke
28 47 17 37 38 85 36 84 16 41 15 44 29 84 26 85 
24 84 13 51 9 34 21 84 19 85 19 84 23 85 17 54 
10 30 35 85 43 84 19 34 33 51 56 84 18 28 41 57 
50 84 16 35 27 50 30 84 15 85 2 84 -11 85 -25 85 
-38 84 0 1 -45 84 -56 84 -6 9 -57 75 -50 64 -19 21 
-72 85 -16 22 -55 62 -53 74 -9 10 -52 85 -33 85 -13 60 
-5 24 -4 84 8 85 1 5 14 80 20 84 24 84 26 85 
23 76 3 9 24 84 21 84 16 85 11 85 4 84 -4 84 
-12 85 4049 388 66 MP stroke
35 67 50 84 22 35 30 50 54 84 23 36 30 48 50 85 
27 52 17 33 34 84 25 84 14 85 5 85 -3 84 -8 84 
-11 85 -10 85 -9 84 -6 84 -2 85 2 85 7 84 13 84 
18 85 21 69 5 16 29 84 38 84 36 63 12 22 5706 388 32 MP stroke
42 -73 61 -84 4 -6 60 -79 47 -52 29 -32 6011 4613 7 MP stroke
SO

gr 
  90   90 2665 3999 FO
  90   90 3576 3672 FO
  90   90 3075 1564 FO
  90   90 2254 1048 FO
  90   90 3576 4280 FO
  90   90 2984  627 FO
  90   90 4715 3859 FO
  90   90 4442  580 FO
  90   90 4943  955 FO
  90   90 4260 2688 FO
  90   90 5171 3390 FO
gs 898 388 5357 4226 MR c np

gr 
6 w

end

eplot

epage
end

showpage

%%EndDocument
 @endspecial 1896 848 V 890 851 1010 4 v -147 863 V -147
1858 4 995 v -91 1833 a @beginspecial 172 @llx 227 @lly
468 @urx 583 @ury 1077 @rwi 1133 @rhi @setspecial
%%BeginDocument: loo1_C1.eps


% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def

MathWorks begin

0 cap

end

MathWorks begin
bpage

bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1850   340  3551  4274 MR c np
88 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
1 j
1 sg
   0    0 6913 5186 PR
6 w
gs 898 388 5357 4226 MR c np

gr 
1e+02 w
0 sg
2151 3668 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2507 3600 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2863 3359 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2258 2810 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2863 2123 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2472 2054 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2187 1436 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2650 1092 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
5001 2054 PD
gs 898 388 5357 4226 MR c np
24 w

gr 
24 w
4417 3859 mt 4517 3959 L
4517 3859 mt 4417 3959 L
gs 898 388 5357 4226 MR c np

gr 
4773 3447 mt 4873 3547 L
4873 3447 mt 4773 3547 L
gs 898 388 5357 4226 MR c np

gr 
4524 3103 mt 4624 3203 L
4624 3103 mt 4524 3203 L
gs 898 388 5357 4226 MR c np

gr 
4951 2760 mt 5051 2860 L
5051 2760 mt 4951 2860 L
gs 898 388 5357 4226 MR c np

gr 
4630 2416 mt 4730 2516 L
4730 2416 mt 4630 2516 L
gs 898 388 5357 4226 MR c np

gr 
4737 1557 mt 4837 1657 L
4837 1557 mt 4737 1657 L
gs 898 388 5357 4226 MR c np

gr 
4452 1042 mt 4552 1142 L
4552 1042 mt 4452 1142 L
gs 898 388 5357 4226 MR c np
0 -85 0 -84 -1 -85 -1 -84 -3 -85 -3 -84 -5 -85 -6 -84 
-8 -85 -10 -84 -13 -85 -15 -84 -1 -7 -15 -78 -18 -84 -17 -85 
-16 -84 -13 -85 -9 -84 -4 -85 1 -84 6 -85 10 -84 13 -85 
15 -84 16 -85 14 -84 14 -85 3 -23 8 -61 9 -85 6 -84 
4 -85 2 -84 2 -85 2 -84 3 -85 5 -84 7 -85 8 -84 
11 -85 12 -84 12 -85 12 -84 4 -26 9 -59 13 -84 12 -85 
11 -84 11 -85 10 -84 9 -85 8 -84 3493 4613 54 MP stroke
-37 -37 31 -84 6 -3 107 -71 27 -11 80 -13 59 13 48 10 
73 75 -10 84 -63 61 -79 24 -28 10 -107 -2 -37 -8 -70 -48 
5290 1957 17 MP stroke
DO
-29 32 -78 59 -92 26 -16 7 -107 44 -28 33 -69 85 -10 8 
-107 60 -107 -34 -30 -34 -9 -85 38 -84 1 -2 81 -83 26 -46 
27 -38 18 -85 -7 -84 -38 -64 -11 -21 -96 -84 0 0 -107 -81 
-4 -4 -99 -84 -4 -4 -61 -81 -32 -84 0 -85 37 -84 56 -67 
27 -18 80 -55 73 -29 34 -20 107 -47 48 -18 45 -84 -16 -85 
-21 -84 -16 -85 -20 -84 -20 -36 -36 -49 -71 -42 -71 -42 -36 -13 
-103 -72 -4 -2 -63 -82 -27 -85 9 -84 41 -85 40 -53 29 -31 
78 -78 6 -7 100 -84 1 -1 107 -63 62 -21 45 -15 107 -16 
107 -3 108 14 47 20 60 27 59 58 39 84 3 85 -22 84 
-44 85 -35 60 -19 24 -52 85 -28 84 5 85 35 84 38 85 
17 84 -10 85 -45 84 -48 61 -44 24 -64 63 -44 21 -4 85 
42 84 6 9 34 76 32 84 17 85 3 84 -6 85 -7 84 
16 85 19 21 37 63 2146 1656 100 MP stroke
69 85 1 1 33 83 -4 85 -29 52 2076 1350 6 MP stroke
101 65 6 5 108 78 1 1 89 85 17 10 107 22 56 -32 
51 -85 0 0 13 -84 7 -85 18 -84 37 -85 32 -51 16 -33 
43 -85 29 -84 10 -85 -4 -84 -14 -85 -18 -84 -15 -85 -6 -84 
10 -85 24 -84 18 -85 -15 -84 -78 -70 -107 1 -104 69 -3 4 
-81 80 -26 23 -85 62 -22 12 -88 72 -20 19 -50 66 -37 84 
-16 85 -4 44 -4 40 -5 85 -11 84 -21 85 -29 84 -25 85 
-7 84 20 85 62 84 20 20 5076 2650 53 MP stroke
32 -11 -13 -85 -19 -10 -10 10 -4 85 14 11 4540 1053 7 MP stroke
SO

gr 
  90   90 2151 3668 FO
  90   90 2507 3600 FO
  90   90 2863 3359 FO
  90   90 2258 2810 FO
  90   90 2863 2123 FO
  90   90 2472 2054 FO
  90   90 2187 1436 FO
  90   90 2650 1092 FO
  90   90 5001 2054 FO
  90   90 4467 3909 FO
  90   90 4823 3497 FO
  90   90 4574 3153 FO
  90   90 5001 2810 FO
  90   90 4680 2466 FO
  90   90 4787 1607 FO
  90   90 4502 1092 FO
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
  90   90 2151 3668 FO
  90   90 2507 3600 FO
  90   90 2863 3359 FO
  90   90 2258 2810 FO
  90   90 2863 2123 FO
  90   90 2472 2054 FO
  90   90 2187 1436 FO
  90   90 2650 1092 FO
  90   90 5001 2054 FO
  90   90 4467 3909 FO
  90   90 4823 3497 FO
  90   90 4574 3153 FO
  90   90 5001 2810 FO
  90   90 4680 2466 FO
  90   90 4787 1607 FO
  90   90 4502 1092 FO
gs 898 388 5357 4226 MR c np

gr 

end

eplot

epage
end

showpage

%%EndDocument
 @endspecial 859 1858 V -147 1861 1010 4 v 890 863 V
890 1858 4 995 v 1037 w @beginspecial 172 @llx 227 @lly
463 @urx 583 @ury 1077 @rwi 1133 @rhi @setspecial
%%BeginDocument: loo2_C1.eps


% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def

MathWorks begin

0 cap

end

MathWorks begin
bpage

bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1850   340  3501  4274 MR c np
88 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
1 j
1 sg
   0    0 6913 5186 PR
6 w
gs 898 388 5357 4226 MR c np

gr 
1e+02 w
0 sg
2151 3668 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2863 3600 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3576 3359 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3327 2810 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2614 2466 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3220 2123 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3184 1814 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2543 1436 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3719 1092 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3932 2054 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3576 3806 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2329 1951 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3113 1127 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
5001 2123 PD
gs 898 388 5357 4226 MR c np
24 w

gr 
24 w
4060 3859 mt 4160 3959 L
4160 3859 mt 4060 3959 L
gs 898 388 5357 4226 MR c np

gr 
4417 3447 mt 4517 3547 L
4517 3447 mt 4417 3547 L
gs 898 388 5357 4226 MR c np

gr 
3811 3103 mt 3911 3203 L
3911 3103 mt 3811 3203 L
gs 898 388 5357 4226 MR c np

gr 
4951 2760 mt 5051 2860 L
5051 2760 mt 4951 2860 L
gs 898 388 5357 4226 MR c np

gr 
4630 2416 mt 4730 2516 L
4730 2416 mt 4630 2516 L
gs 898 388 5357 4226 MR c np

gr 
4025 1557 mt 4125 1657 L
4125 1557 mt 4025 1657 L
gs 898 388 5357 4226 MR c np

gr 
4203 1042 mt 4303 1142 L
4303 1042 mt 4203 1142 L
gs 898 388 5357 4226 MR c np

gr 
4595 1317 mt 4695 1417 L
4695 1317 mt 4595 1417 L
gs 898 388 5357 4226 MR c np

gr 
4060 2588 mt 4160 2688 L
4160 2588 mt 4060 2688 L
gs 898 388 5357 4226 MR c np

gr 
4452 2004 mt 4552 2104 L
4552 2004 mt 4452 2104 L
gs 898 388 5357 4226 MR c np

gr 
4773 3103 mt 4873 3203 L
4873 3103 mt 4773 3203 L
gs 898 388 5357 4226 MR c np

gr 
3704 2244 mt 3804 2344 L
3804 2244 mt 3704 2344 L
gs 898 388 5357 4226 MR c np

gr 
2813 3103 mt 2913 3203 L
2913 3103 mt 2813 3203 L
gs 898 388 5357 4226 MR c np
6 -85 6 -84 5 -85 5 -84 3 -85 2 -84 3 -85 7 -84 
14 -85 26 -81 1 -3 37 -85 38 -84 28 -85 3 -19 11 -65 
-1 -85 -10 -58 -5 -26 -29 -85 -48 -84 -25 -28 -36 -57 7 -84 
29 -19 107 1 107 -60 5 -7 62 -84 28 -85 8 -84 -3 -85 
-11 -84 -13 -85 -10 -84 -3 -85 2 -84 1 -85 -10 -84 -32 -85 
-24 -35 -26 -49 -47 -85 -32 -84 -2 -8 -22 -77 -14 -84 -6 -85 
1 -84 8 -85 13 -84 14 -85 6 -43 8 -41 14 -85 13 -84 
11 -85 9 -84 9 -85 7 -84 3719 4613 61 MP stroke
-56 -32 56 -46 41 46 -41 32 5076 2046 5 MP stroke
14 -9 26 -85 -40 -27 -78 27 52 85 26 9 2826 3083 7 MP stroke
DO
-8 14 -42 84 -31 85 -27 79 -1 5 -31 85 -59 84 -16 17 
-100 68 -7 4 -107 38 -107 29 -29 13 -78 41 -52 44 -55 36 
-98 48 -9 4 -108 7 -29 -11 -78 -36 -57 -48 -37 -85 0 -84 
19 -85 16 -84 -5 -85 -27 -84 -16 -34 -16 -51 -26 -84 -14 -85 
-1 -84 9 -85 15 -84 30 -85 3 -6 53 -78 54 -64 38 -21 
69 -55 71 -29 37 -22 107 -52 13 -11 94 -50 62 -34 45 -16 
107 -14 86 30 21 10 78 74 29 59 16 26 39 84 52 82 
2 3 65 84 41 55 16 30 31 84 4 85 -21 84 -30 71 
2183 1754 65 MP stroke
-25 -36 25 -21 35 21 -35 36 2183 3648 5 MP stroke
-53 -14 53 -28 16 28 -16 14 2826 3585 5 MP stroke
28 47 79 83 3 2 99 84 5 5 77 80 31 29 51 55 
56 65 21 20 47 84 19 85 20 79 2 5 50 85 55 78 
32 6 75 66 25 -66 50 -84 32 -78 2 -7 16 -84 14 -85 
29 -84 46 -62 21 -23 86 -64 28 -20 80 -66 13 -19 37 -84 
5 -85 -19 -84 -28 -85 -8 -36 -21 -48 -19 -85 -17 -84 -51 -69 
-8 -16 -42 -84 -24 -85 -14 -84 -15 -85 -4 -19 -16 -65 -39 -85 
-52 -52 -107 -8 -107 24 -73 36 -34 18 -91 67 -16 14 -86 70 
-21 17 -82 68 -26 21 -62 63 -45 58 -19 27 -48 84 -34 85 
-6 19 -22 65 -17 85 -2 84 21 85 20 37 5183 2717 71 MP stroke
53 59 54 41 107 39 13 4 94 39 62 46 45 17 83 -17 
24 -31 7 -54 -7 -27 -37 -57 -16 -85 8 -84 43 -85 2 -2 
107 -59 15 -23 -15 -66 -107 -12 -29 -7 -78 -15 -107 -50 -76 65 
-31 9 -107 72 -4 4 -84 84 -19 31 -22 54 7 84 15 26 
4754 1292 33 MP stroke
SO

gr 
  90   90 2151 3668 FO
  90   90 2863 3600 FO
  90   90 3576 3359 FO
  90   90 3327 2810 FO
  90   90 2614 2466 FO
  90   90 3220 2123 FO
  90   90 3184 1814 FO
  90   90 2543 1436 FO
  90   90 3719 1092 FO
  90   90 3932 2054 FO
  90   90 3576 3806 FO
  90   90 2329 1951 FO
  90   90 3113 1127 FO
  90   90 5001 2123 FO
  90   90 4110 3909 FO
  90   90 4467 3497 FO
  90   90 3861 3153 FO
  90   90 5001 2810 FO
  90   90 4680 2466 FO
  90   90 4075 1607 FO
  90   90 4253 1092 FO
  90   90 4645 1367 FO
  90   90 4110 2638 FO
  90   90 4502 2054 FO
  90   90 4823 3153 FO
  90   90 3754 2294 FO
  90   90 2863 3153 FO
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
  90   90 2151 3668 FO
  90   90 2863 3600 FO
  90   90 3576 3359 FO
  90   90 3327 2810 FO
  90   90 2614 2466 FO
  90   90 3220 2123 FO
  90   90 3184 1814 FO
  90   90 2543 1436 FO
  90   90 3719 1092 FO
  90   90 3932 2054 FO
  90   90 3576 3806 FO
  90   90 2329 1951 FO
  90   90 3113 1127 FO
  90   90 5001 2123 FO
  90   90 4110 3909 FO
  90   90 4467 3497 FO
  90   90 3861 3153 FO
  90   90 5001 2810 FO
  90   90 4680 2466 FO
  90   90 4075 1607 FO
  90   90 4253 1092 FO
  90   90 4645 1367 FO
  90   90 4110 2638 FO
  90   90 4502 2054 FO
  90   90 4823 3153 FO
  90   90 3754 2294 FO
  90   90 2863 3153 FO
gs 898 388 5357 4226 MR c np

gr 

end

eplot

epage
end

showpage

%%EndDocument
 @endspecial 1896 1858 V 890 1861 1010 4 v -147 1873
V -147 2867 4 995 v -91 2842 a @beginspecial 172 @llx
227 @lly 543 @urx 583 @ury 1077 @rwi 1133 @rhi @setspecial
%%BeginDocument: loo1_C100.eps


% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def

MathWorks begin

0 cap

end

MathWorks begin
bpage

bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1850   340  4453  4274 MR c np
88 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
1 j
1 sg
   0    0 6913 5186 PR
6 w
gs 898 388 5357 4226 MR c np

gr 
1e+02 w
0 sg
2151 3668 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2507 3600 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2863 3359 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2258 2810 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2863 2123 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2472 2054 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2187 1436 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2650 1092 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
5001 2054 PD
gs 898 388 5357 4226 MR c np
24 w

gr 
24 w
4417 3859 mt 4517 3959 L
4517 3859 mt 4417 3959 L
gs 898 388 5357 4226 MR c np

gr 
4773 3447 mt 4873 3547 L
4873 3447 mt 4773 3547 L
gs 898 388 5357 4226 MR c np

gr 
4524 3103 mt 4624 3203 L
4624 3103 mt 4524 3203 L
gs 898 388 5357 4226 MR c np

gr 
4951 2760 mt 5051 2860 L
5051 2760 mt 4951 2860 L
gs 898 388 5357 4226 MR c np

gr 
4630 2416 mt 4730 2516 L
4730 2416 mt 4630 2516 L
gs 898 388 5357 4226 MR c np

gr 
4737 1557 mt 4837 1657 L
4837 1557 mt 4737 1657 L
gs 898 388 5357 4226 MR c np

gr 
4452 1042 mt 4552 1142 L
4552 1042 mt 4452 1142 L
gs 898 388 5357 4226 MR c np
-1 -85 -1 -84 -1 -85 -2 -84 -2 -85 -3 -84 -3 -85 -5 -84 
-7 -85 -9 -84 -11 -85 -13 -84 -15 -85 -18 -84 -7 -36 -11 -49 
-17 -84 -16 -85 -13 -84 -8 -85 -2 -84 3 -85 7 -84 11 -85 
13 -84 13 -85 12 -84 8 -60 3 -25 9 -84 7 -85 4 -84 
3 -85 2 -84 2 -85 3 -84 5 -85 7 -84 10 -85 12 -84 
14 -85 15 -84 11 -63 4 -22 17 -84 16 -85 16 -84 15 -85 
14 -84 13 -85 12 -80 1 -4 12 -85 12 -84 3444 4613 55 MP stroke
107 -26 107 -23 84 -19 23 -2 107 -17 108 -13 107 -10 107 -7 
107 -3 107 2 107 10 107 20 51 20 56 18 108 63 6 4 
91 84 10 22 38 63 -8 84 -30 37 -34 48 -73 50 -61 34 
-47 27 -107 48 -35 10 -72 34 -107 37 -59 13 -48 20 -107 29 
-107 24 -70 12 -37 10 -108 20 -107 16 -107 12 -107 10 -107 7 
6254 1496 41 MP stroke
DO
-19 29 -77 84 -11 12 -93 73 -14 12 -99 72 -9 7 -107 70 
-15 8 -92 40 -107 16 -107 -18 -68 -38 -39 -28 -50 -57 -38 -84 
-13 -85 3 -84 15 -85 19 -84 12 -85 -5 -84 -29 -85 -21 -34 
-28 -50 -57 -85 -22 -32 -30 -52 -36 -85 -18 -84 1 -85 21 -84 
42 -85 20 -31 43 -53 64 -77 8 -8 66 -84 33 -78 2 -7 
7 -84 -9 -41 -10 -44 -43 -84 -54 -66 -12 -19 -68 -84 -27 -36 
-29 -49 -34 -84 -12 -85 8 -84 31 -85 36 -57 20 -27 78 -85 
9 -8 93 -76 14 -11 107 -69 9 -5 98 -48 107 -34 10 -2 
97 -20 107 -9 108 10 58 19 49 15 98 69 9 9 57 76 
29 84 7 85 -9 84 -23 85 -29 84 -25 85 -7 48 -6 36 
3 85 3 22 8 62 12 85 4 84 -10 85 -14 53 -9 31 
-34 85 -42 84 -22 55 -14 30 -16 84 1 85 10 84 11 85 
8 59 4 25 18 85 2054 1909 100 MP stroke
26 84 36 85 23 46 16 38 31 85 14 84 -4 85 -26 84 
-31 56 1969 1262 10 MP stroke
-90 -58 -13 -84 78 -85 25 -10 106 10 1 1 77 84 -21 84 
-56 48 -107 10 5076 1936 11 MP stroke
17 22 90 75 15 10 92 60 28 24 80 63 20 22 87 63 
62 21 45 20 107 -8 25 -12 82 -65 17 -19 41 -85 20 -84 
11 -85 11 -84 7 -41 8 -44 20 -84 21 -85 15 -84 9 -85 
2 -84 -1 -85 1 -84 6 -85 15 -84 11 -51 7 -34 16 -84 
4 -85 -14 -84 -13 -28 -26 -57 -81 -81 -6 -3 -101 -44 -107 -3 
-107 35 -22 12 -85 60 -29 24 -78 83 -2 2 -76 84 -30 35 
-41 50 -59 84 -7 13 -38 72 -31 84 -18 85 -13 84 -7 41 
-8 44 -18 84 -21 85 -19 84 -10 85 4 84 27 85 45 62 
5183 2692 65 MP stroke
25 79 32 85 36 84 15 29 26 56 57 84 24 25 77 60 
30 17 107 29 107 -13 60 -33 47 -34 43 -50 37 -85 8 -85 
-14 -84 -31 -85 -43 -83 0 -1 -49 -85 -51 -84 -7 -9 -56 -76 
-51 -39 -99 -45 -8 -2 -107 -1 -9 3 -98 39 -58 45 -45 85 
-5 32 -10 52 9 85 1 5 4969 1397 37 MP stroke
SO

gr 
  90   90 2151 3668 FO
  90   90 2507 3600 FO
  90   90 2863 3359 FO
  90   90 2258 2810 FO
  90   90 2863 2123 FO
  90   90 2472 2054 FO
  90   90 2187 1436 FO
  90   90 2650 1092 FO
  90   90 5001 2054 FO
  90   90 4467 3909 FO
  90   90 4823 3497 FO
  90   90 4574 3153 FO
  90   90 5001 2810 FO
  90   90 4680 2466 FO
  90   90 4787 1607 FO
  90   90 4502 1092 FO
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
  90   90 2151 3668 FO
  90   90 2507 3600 FO
  90   90 2863 3359 FO
  90   90 2258 2810 FO
  90   90 2863 2123 FO
  90   90 2472 2054 FO
  90   90 2187 1436 FO
  90   90 2650 1092 FO
  90   90 5001 2054 FO
  90   90 4467 3909 FO
  90   90 4823 3497 FO
  90   90 4574 3153 FO
  90   90 5001 2810 FO
  90   90 4680 2466 FO
  90   90 4787 1607 FO
  90   90 4502 1092 FO
gs 898 388 5357 4226 MR c np

gr 

end

eplot

epage
end

showpage

%%EndDocument
 @endspecial 859 2867 V -147 2870 1010 4 v 890 1873 V
890 2867 4 995 v 1037 w @beginspecial 172 @llx 227 @lly
543 @urx 583 @ury 1077 @rwi 1133 @rhi @setspecial
%%BeginDocument: loo2_C100.eps


% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def

MathWorks begin

0 cap

end

MathWorks begin
bpage

bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1850   340  4453  4274 MR c np
88 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
1 j
1 sg
   0    0 6913 5186 PR
6 w
gs 898 388 5357 4226 MR c np

gr 
1e+02 w
0 sg
2151 3668 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2863 3600 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3576 3359 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3327 2810 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2614 2466 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3220 2123 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3184 1814 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2543 1436 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3719 1092 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3932 2054 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3576 3806 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2329 1951 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3113 1127 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
5001 2123 PD
gs 898 388 5357 4226 MR c np
24 w

gr 
24 w
4060 3859 mt 4160 3959 L
4160 3859 mt 4060 3959 L
gs 898 388 5357 4226 MR c np

gr 
4417 3447 mt 4517 3547 L
4517 3447 mt 4417 3547 L
gs 898 388 5357 4226 MR c np

gr 
3811 3103 mt 3911 3203 L
3911 3103 mt 3811 3203 L
gs 898 388 5357 4226 MR c np

gr 
4951 2760 mt 5051 2860 L
5051 2760 mt 4951 2860 L
gs 898 388 5357 4226 MR c np

gr 
4630 2416 mt 4730 2516 L
4730 2416 mt 4630 2516 L
gs 898 388 5357 4226 MR c np

gr 
4025 1557 mt 4125 1657 L
4125 1557 mt 4025 1657 L
gs 898 388 5357 4226 MR c np

gr 
4203 1042 mt 4303 1142 L
4303 1042 mt 4203 1142 L
gs 898 388 5357 4226 MR c np

gr 
4595 1317 mt 4695 1417 L
4695 1317 mt 4595 1417 L
gs 898 388 5357 4226 MR c np

gr 
4060 2588 mt 4160 2688 L
4160 2588 mt 4060 2688 L
gs 898 388 5357 4226 MR c np

gr 
4452 2004 mt 4552 2104 L
4552 2004 mt 4452 2104 L
gs 898 388 5357 4226 MR c np

gr 
4773 3103 mt 4873 3203 L
4873 3103 mt 4773 3203 L
gs 898 388 5357 4226 MR c np

gr 
3704 2244 mt 3804 2344 L
3804 2244 mt 3704 2344 L
gs 898 388 5357 4226 MR c np

gr 
2813 3103 mt 2913 3203 L
2913 3103 mt 2813 3203 L
gs 898 388 5357 4226 MR c np
9 -85 9 -84 8 -85 2 -11 6 -73 6 -85 7 -84 6 -85 
9 -84 16 -85 28 -84 29 -60 13 -25 48 -84 33 -85 11 -84 
-14 -85 -55 -84 -36 -26 -82 -59 -25 -14 -84 -70 -24 -41 -21 -44 
-1 -84 22 -43 30 -42 78 -42 107 9 79 33 28 15 107 21 
78 -36 29 -20 48 -64 28 -85 2 -84 -21 -85 -37 -84 -20 -46 
-17 -39 -25 -84 -9 -85 2 -84 3 -85 -11 -84 -38 -85 -12 -15 
-42 -69 -54 -85 -11 -26 -35 -58 -27 -85 -11 -84 0 -85 9 -84 
13 -85 16 -84 14 -85 14 -84 7 -56 5 -29 12 -84 10 -85 
8 -84 7 -85 6 -84 3742 4613 68 MP stroke
107 -8 107 -7 107 -6 107 -4 108 -3 107 -2 107 1 107 3 
107 8 107 13 22 6 85 17 107 45 29 22 79 67 14 18 
44 84 11 85 -13 84 -32 85 -24 43 -39 41 -69 69 -27 16 
-80 57 -59 27 -48 33 -107 50 -7 2 -100 48 -95 36 -12 8 
-107 44 -95 33 -12 7 -108 41 -106 36 -1 1 -107 39 -107 34 
-44 11 -63 25 6254 1208 43 MP stroke
4 -4 29 -84 -21 -85 -12 -14 -46 -70 -61 -42 -97 -43 -10 -2 
-107 -12 -107 14 -1 0 -106 58 -28 27 -39 84 5 85 43 84 
19 23 71 62 36 26 107 29 107 -8 107 -39 18 -8 89 -81 
2505 3004 25 MP stroke
DO
-107 66 -107 8 -108 -29 -98 -52 -9 -6 -107 -49 -107 9 -101 46 
-6 2 -107 29 -107 4 -107 -5 -108 24 -42 31 -65 65 -14 19 
-62 85 -31 47 -107 25 -107 -48 -20 -24 -71 -85 -16 -69 -5 -15 
-2 -85 -4 -84 -10 -85 -6 -84 15 -85 12 -25 49 -59 58 -55 
102 -30 5 -1 107 -1 18 2 89 16 107 19 108 10 107 6 
107 11 107 21 9 2 98 24 107 10 107 -19 68 -15 39 -7 
108 -3 39 10 68 16 99 68 8 8 51 77 20 84 -13 85 
-52 84 -6 7 1969 3508 59 MP stroke
-19 -33 18 -85 1 0 107 -69 107 18 48 51 8 85 -56 80 
-22 4 -85 24 -58 -24 -49 -51 5183 2045 13 MP stroke
-3 9 -31 84 -35 85 -35 84 -3 7 -33 78 -50 84 -25 31 
-47 54 -60 52 -52 32 -55 35 -103 50 -4 2 -107 59 -36 24 
-71 43 -73 41 -34 18 -107 39 -108 19 -107 4 -107 -1 -107 -4 
-107 -9 -107 -31 -43 -35 -64 -53 -17 -32 -26 -84 16 -85 27 -46 
42 -38 65 -64 37 -21 70 -70 16 -14 52 -85 17 -84 -2 -85 
-12 -84 -11 -85 9 -84 38 -83 0 -2 38 -84 41 -85 28 -54 
19 -30 50 -85 30 -84 1 -85 -47 -84 -53 -34 -36 -51 -54 -84 
-11 -85 30 -84 71 -81 107 32 45 49 62 80 4 4 47 85 
53 84 4 5 107 43 107 -6 107 -20 107 -10 107 15 107 51 
11 7 86 84 10 17 50 68 50 84 8 13 43 72 44 84 
20 49 14 36 19 84 3 85 -13 85 -23 75 2076 1749 87 MP stroke
-2 -3 -6 -84 8 -8 107 -28 60 36 32 84 -92 60 -107 -57 
4004 1991 9 MP stroke
44 51 63 48 58 37 49 30 63 54 45 39 35 46 72 78 
8 6 66 85 21 84 3 85 6 84 3 26 12 59 8 84 
-20 76 -2 9 -49 84 -56 65 -16 20 -60 84 -31 80 -2 5 
-11 84 13 67 3 18 40 84 64 80 5 5 102 84 0 1 
107 61 70 23 37 11 107 2 30 -13 77 -27 52 -58 49 -84 
6 -33 11 -52 9 -84 21 -85 42 -84 25 -35 24 -50 26 -84 
-23 -85 -27 -29 -86 -55 -22 -14 -107 -56 -24 -15 -52 -84 -7 -85 
3 -84 10 -85 35 -84 35 -40 75 -45 32 -14 108 -9 40 23 
67 23 73 62 34 15 107 -15 0 0 42 -85 -23 -84 -19 -38 
-43 -47 -51 -84 -13 -35 -20 -50 -17 -84 -1 -85 17 -84 21 -52 
8 -33 17 -84 -13 -85 -12 -18 -68 -66 -39 -42 -69 -43 -38 -49 
-33 -35 -32 -85 -4 -84 18 -85 38 -84 13 -25 18 -60 5 -84 
-23 -73 -7 -12 -97 -84 4108 4106 100 MP stroke
-4 -3 -107 -18 -80 21 -27 8 -107 68 -11 8 -91 85 -5 5 
-83 79 -24 23 -64 62 -43 44 -40 40 -67 76 -9 9 -77 84 
-22 24 -54 61 -53 65 -14 19 -55 85 -38 77 -4 7 -34 85 
-22 84 -9 85 8 84 34 85 27 33 5183 2721 30 MP stroke
82 -57 7 -85 -89 -67 -107 33 -30 34 13 85 17 20 107 37 
2826 3035 9 MP stroke
SO

gr 
  90   90 2151 3668 FO
  90   90 2863 3600 FO
  90   90 3576 3359 FO
  90   90 3327 2810 FO
  90   90 2614 2466 FO
  90   90 3220 2123 FO
  90   90 3184 1814 FO
  90   90 2543 1436 FO
  90   90 3719 1092 FO
  90   90 3932 2054 FO
  90   90 3576 3806 FO
  90   90 2329 1951 FO
  90   90 3113 1127 FO
  90   90 5001 2123 FO
  90   90 4110 3909 FO
  90   90 4467 3497 FO
  90   90 3861 3153 FO
  90   90 5001 2810 FO
  90   90 4680 2466 FO
  90   90 4075 1607 FO
  90   90 4253 1092 FO
  90   90 4645 1367 FO
  90   90 4110 2638 FO
  90   90 4502 2054 FO
  90   90 4823 3153 FO
  90   90 3754 2294 FO
  90   90 2863 3153 FO
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
  90   90 2151 3668 FO
  90   90 2863 3600 FO
  90   90 3576 3359 FO
  90   90 3327 2810 FO
  90   90 2614 2466 FO
  90   90 3220 2123 FO
  90   90 3184 1814 FO
  90   90 2543 1436 FO
  90   90 3719 1092 FO
  90   90 3932 2054 FO
  90   90 3576 3806 FO
  90   90 2329 1951 FO
  90   90 3113 1127 FO
  90   90 5001 2123 FO
  90   90 4110 3909 FO
  90   90 4467 3497 FO
  90   90 3861 3153 FO
  90   90 5001 2810 FO
  90   90 4680 2466 FO
  90   90 4075 1607 FO
  90   90 4253 1092 FO
  90   90 4645 1367 FO
  90   90 4110 2638 FO
  90   90 4502 2054 FO
  90   90 4823 3153 FO
  90   90 3754 2294 FO
  90   90 2863 3153 FO
gs 898 388 5357 4226 MR c np

gr 

end

eplot

epage
end

showpage

%%EndDocument
 @endspecial 1896 2867 V 890 2870 1010 4 v -150 3017
a Fq(Figure)20 b(1:)33 b(Tw)n(o)19 b(training)h(problems)g(\(left)h
(and)f(righ)n(t)g(pictures\))-150 3108 y(are)38 b(solv)n(ed)g(b)n(y)g
(Lea)n(v)n(e-One-Out)f(SVMs)i(\(top)g(left)g(and)g(top)-150
3199 y(righ)n(t\))25 b(whic)n(h)h(ha)n(v)n(e)f(no)g Fp(soft)k(mar)l
(gin)d Fq(regularization)e(parame-)-150 3291 y(ter)g(and)g(SVMs)g(for)g
(v)-5 b(arious)23 b(of)h Fo(C)30 b Fq(\(lo)n(w)n(er)23
b(four)h(pictures\).)36 b(F)-7 b(or)-150 3382 y(SVMs,)28
b(the)g(t)n(w)n(o)f(problems)g(are)g(solv)n(ed)g(with)h
Fo(C)i Fq(=)23 b(1)k(\(middle)-150 3473 y(ro)n(w\))g(and)g
Fo(C)i Fq(=)23 b(100)j(\(b)r(ottom)i(ro)n(w\).)-150 3786
y(SVMs)38 b(with)g(the)f(correct)f(c)n(hoice)h(of)g(free)g(parameter.)
65 b(The)-150 3877 y(\(parameterless\))23 b(decision)h(constructed)g(b)
n(y)g(the)g(LOOM)g(\(top)-150 3969 y(righ)n(t\))35 b(ho)n(w)n(ev)n(er)e
(pro)n(vides)g(a)i(similar)f(decision)h(to)g(the)h(SVM)-150
4060 y(with)31 b Fo(C)i Fq(=)27 b(1.)44 b(Note)30 b(again,)g(the)g(smo)
r(othness)f(of)h(the)h(LOOM)-150 4151 y(solution)39 b(in)h(comparison)e
(to)i(the)g(SVM)h(one,)h(ev)n(en)d(though)-150 4243 y(they)28
b(are)e(similar.)-67 4337 y(Finally)-7 b(,)30 b(Figure)e(2)h(giv)n(es)f
(some)g(insigh)n(t)h(in)n(to)g(ho)n(w)g(the)g(soft)-150
4428 y(margin)20 b(is)h(c)n(hosen)f(b)n(y)h(LOOMs.)33
b(A)21 b(simple)h(to)n(y)e(training)g(set)h(is)-150 4519
y(again)27 b(sho)n(wn.)40 b(The)28 b(\014rst)h(picture)f(\(left\))i
(has)e(a)g(small)g(cluster)-150 4611 y(of)d(crosses)e(in)i(the)g(top)g
(left)g(of)g(the)g(picture)g(and)g(a)f(single)h(cross)-150
4702 y(in)c(the)h(b)r(ottom)g(righ)n(t)e(of)h(the)h(picture.)35
b(The)21 b(other)f(class)h(\(dots\))-150 4793 y(is)34
b(distributed)h(almost)e(ev)n(enly)h(across)e(the)j(space.)56
b(LOOMs)-150 4885 y(construct)36 b(a)g(decision)f(rule)h(whic)n(h)g
(treats)g(the)g(cross)f(in)i(the)-150 4976 y(b)r(ottom)29
b(righ)n(t)f(of)g(the)h(picture)g(as)f(an)g(outlier.)40
b(In)29 b(the)g(second)-150 5067 y(picture)40 b(\(righ)n(t\))f(w)n(e)h
(ha)n(v)n(e)f(almost)g(the)h(same)f(problem)g(but)-150
5159 y(near)25 b(the)h(single)f(cross)f(w)n(e)h(add)g(another)g(t)n(w)n
(o)f(training)h(p)r(oin)n(ts)-150 5250 y(so)d(there)g(are)f(no)n(w)h(t)
n(w)n(o)g(clusters)g(of)g(crosses.)33 b(No)n(w)22 b(the)h(LOOM)2025
-67 y(solution)i(is)h(a)g(decision)f(rule)h(with)g(t)n(w)n(o)f
(clusters;)h(b)r(ecause)g(the)2025 24 y(single)36 b(cross)f(from)h(the)
g(left)h(hand)g(picture)f(no)n(w)g(is)g(close)f(to)2025
116 y(other)e(training)f(p)r(oin)n(ts,)i(it)g(can)f(b)r(e)g(left)h(out)
f(of)g(the)h(decision)2025 207 y(rule)40 b(but)i(still)f(b)r(e)g
(classi\014ed)f(correctly)f(in)i(the)g(constrain)n(ts)2025
298 y(\(13\).)34 b(When)20 b(a)f(training)g(p)r(oin)n(t)g(is)h(not)f
(close)g(\(in)h Fp(fe)l(atur)l(e)i(sp)l(ac)l(e)p Fq(\))2025
390 y(to)27 b(an)n(y)g(other)f(p)r(oin)n(ts)i(in)f(the)h(same)f(class)f
(it)i(is)f(considered)f(an)2025 481 y(outlier.)p 2014
629 V 2014 1624 4 995 v 2070 1599 a @beginspecial 92
@llx 218 @lly 525 @urx 592 @ury 1077 @rwi 1133 @rhi @setspecial
%%BeginDocument: loo3.eps


% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def

MathWorks begin

0 cap

end

MathWorks begin
bpage

bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  898   231  5193  4492 MR c np
88 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
1 j
1 sg
   0    0 6913 5186 PR
6 w
gs 898 388 5357 4226 MR c np

gr 
1e+02 w
0 sg
1915 4122 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2746 4037 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3576 3738 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3285 3055 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2455 2629 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3161 2202 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3742 921 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3991 2116 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3576 4293 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2123 1988 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
5237 2202 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
4199 4421 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3908 3482 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
5237 3055 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
4863 2629 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
4157 1562 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
4365 921 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
4822 1263 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
4199 2842 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
4656 2116 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
5029 3482 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3784 2415 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2746 3482 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
4614 3909 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
5237 4336 PD
gs 898 388 5357 4226 MR c np
24 w

gr 
24 w
4356 3219 mt 4456 3319 L
4456 3219 mt 4356 3319 L
gs 898 388 5357 4226 MR c np

gr 
2696 1085 mt 2796 1185 L
2796 1085 mt 2696 1185 L
gs 898 388 5357 4226 MR c np

gr 
2571 1554 mt 2671 1654 L
2671 1554 mt 2571 1654 L
gs 898 388 5357 4226 MR c np

gr 
2986 1341 mt 3086 1441 L
3086 1341 mt 2986 1441 L
gs 898 388 5357 4226 MR c np

gr 
2322 1298 mt 2422 1398 L
2422 1298 mt 2322 1398 L
gs 898 388 5357 4226 MR c np

gr 
2633 1298 mt 2733 1398 L
2733 1298 mt 2633 1398 L
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
1915 921 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2123 1007 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2746 623 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3161 580 PD
gs 898 388 5357 4226 MR c np
24 w
6 -14 27 -85 20 -84 11 -85 -2 -84 -18 -85 -35 -84 -9 -17 
-45 -68 -61 -84 -1 -1 -86 -84 -21 -22 -106 -62 -1 -1 -107 -31 
-107 16 -22 16 -81 84 -4 6 -30 79 -20 84 -11 85 -5 84 
0 85 4 84 9 85 12 84 17 85 21 84 3 7 26 78 
39 84 42 74 11 11 89 84 7 8 107 27 63 -35 44 -19 
51 -65 56 -77 4 -8 41 -84 36 -85 26 -70 2398 1219 47 MP stroke
DO
-40 -53 -67 -78 -6 -7 -72 -84 -29 -33 -46 -52 -61 -66 -17 -18 
-78 -85 -12 -13 -65 -71 -43 -46 -35 -39 -72 -79 -4 -5 -69 -85 
-34 -46 -27 -38 -50 -85 -30 -72 -5 -12 -13 -85 10 -84 8 -19 
26 -66 52 -84 29 -39 32 -46 61 -84 14 -21 42 -64 45 -84 
20 -52 14 -33 27 -84 15 -85 5 -84 -6 -85 -18 -84 -33 -85 
-4 -7 -36 -77 -62 -85 -9 -9 -73 -75 1614 4613 46 MP stroke
-10 24 -28 60 -24 85 -10 84 3 85 15 84 30 85 14 27 
28 57 58 85 21 26 53 58 54 55 35 30 72 64 27 20 
80 70 20 15 87 77 10 7 94 85 3 3 90 81 18 21 
78 64 29 38 79 46 28 50 107 19 107 6 107 4 107 2 
107 1 108 0 107 0 107 2 19 1 88 8 107 19 107 31 
62 26 45 28 67 57 40 53 17 31 22 85 6 84 -21 85 
-24 17 -44 -17 -63 -16 -107 -41 -96 -28 -11 -3 -107 -36 -107 -27 
-88 -18 -19 -6 -107 -31 -108 -28 -75 -20 -32 -14 -107 -49 -51 -21 
-56 -43 -85 -42 -22 -34 -107 -40 -99 -10 -8 -2 -107 -6 -108 5 
-21 3 -86 6 -107 15 -107 26 -97 37 -10 3 -107 48 -54 34 
-53 32 -66 52 -41 36 -49 49 -59 72 -9 12 -57 85 -39 84 
-2 5 -34 80 -24 84 -15 85 -9 84 -2 85 3 84 7 85 
12 84 15 85 17 84 5963 1656 100 MP stroke
18 85 12 53 6 31 15 85 15 84 16 85 18 84 20 85 
17 65 5 19 21 85 25 84 30 85 27 62 8 22 34 85 
42 84 23 41 21 44 5590 388 20 MP stroke
18 -45 29 -85 22 -84 14 -85 3 -84 -11 -85 -29 -84 -43 -85 
-3 -6 -50 -78 -53 -85 -4 -7 -65 -77 -42 -55 -40 -30 -67 -61 
-42 -23 -65 -51 -71 -34 -36 -30 -107 -53 -108 0 -9 83 -3 85 
0 84 2 85 2 84 2 85 4 84 2 34 3 51 6 84 
8 85 10 84 12 85 14 84 19 85 22 84 14 45 13 40 
38 84 46 85 10 18 67 66 40 42 107 25 107 -57 7 -10 
65 -84 35 -49 17 -36 39 -84 37 -85 14 -39 2398 1188 55 MP stroke
20 -63 18 -84 6 -85 -6 -84 -24 -85 -14 -30 -31 -54 -62 -85 
-14 -18 -79 -66 -28 -26 -107 -49 -107 -8 -107 38 -41 45 -55 84 
-11 25 -18 60 -16 84 -7 85 -1 84 5 85 10 84 16 85 
11 44 9 40 30 85 41 84 27 48 37 37 70 66 100 18 
7 2 3 -2 104 -46 30 -38 65 -85 12 -17 33 -67 37 -85 
31 -84 6 -22 2398 1255 43 MP stroke
SO

gr 
24 w
  90   90 1915 4122 FO
  90   90 2746 4037 FO
  90   90 2455 2629 FO
  90   90 3742  921 FO
  90   90 3576 4293 FO
  90   90 2123 1988 FO
  90   90 5237 2202 FO
  90   90 4199 4421 FO
  90   90 4365  921 FO
  90   90 4822 1263 FO
  90   90 5237 4336 FO
  90   90 2746 1135 FO
  90   90 3036 1391 FO
  90   90 2683 1348 FO
  90   90 1915  921 FO
  90   90 2123 1007 FO
  90   90 2746  623 FO
  90   90 3161  580 FO
gs 898 388 5357 4226 MR c np

gr 
6 w

end

eplot

epage
end

showpage

%%EndDocument
 @endspecial 3020 1624 V 2014 1627 1010 4 v 3051 629
V 3051 1624 4 995 v 1037 w @beginspecial 121 @llx 218
@lly 518 @urx 592 @ury 1077 @rwi 1133 @rhi @setspecial
%%BeginDocument: loo4.eps


% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def

MathWorks begin

0 cap

end

MathWorks begin
bpage

bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1238   231  4772  4492 MR c np
88 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
1 j
1 sg
   0    0 6913 5186 PR
6 w
gs 898 388 5357 4226 MR c np

gr 
1e+02 w
0 sg
1915 4122 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2746 4037 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3576 3738 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3285 3055 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2455 2629 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3161 2202 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3742 921 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3991 2116 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3576 4293 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2123 1988 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
5237 2202 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
4199 4421 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3908 3482 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
5237 3055 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
4863 2629 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
4157 1562 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
4365 921 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
4822 1263 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
4199 2842 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
4656 2116 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
5029 3482 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3784 2415 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2746 3482 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
4614 3909 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
5237 4336 PD
gs 898 388 5357 4226 MR c np
24 w

gr 
24 w
4149 3219 mt 4249 3319 L
4249 3219 mt 4149 3319 L
gs 898 388 5357 4226 MR c np

gr 
4439 3048 mt 4539 3148 L
4539 3048 mt 4439 3148 L
gs 898 388 5357 4226 MR c np

gr 
4377 3261 mt 4477 3361 L
4477 3261 mt 4377 3361 L
gs 898 388 5357 4226 MR c np

gr 
2696 1085 mt 2796 1185 L
2796 1085 mt 2696 1185 L
gs 898 388 5357 4226 MR c np

gr 
2571 1554 mt 2671 1654 L
2671 1554 mt 2571 1654 L
gs 898 388 5357 4226 MR c np

gr 
2986 1341 mt 3086 1441 L
3086 1341 mt 2986 1441 L
gs 898 388 5357 4226 MR c np

gr 
2322 1298 mt 2422 1398 L
2422 1298 mt 2322 1398 L
gs 898 388 5357 4226 MR c np

gr 
2633 1298 mt 2733 1398 L
2733 1298 mt 2633 1398 L
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
1915 921 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2123 1007 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
2746 623 PD
gs 898 388 5357 4226 MR c np
6 w

gr 
6 w
1e+02 w
3161 580 PD
gs 898 388 5357 4226 MR c np
24 w
21 -36 19 -85 -12 -84 -28 -50 -17 -35 -76 -84 -15 -12 -84 -73 
-23 -16 -107 -59 -34 -9 -73 -20 -107 -2 -105 22 -2 0 -107 44 
-73 40 -34 21 -88 64 -20 18 -65 66 -42 63 -14 22 -34 84 
-11 85 9 84 31 85 19 31 34 53 73 72 15 13 93 60 
44 24 63 28 107 33 107 13 107 -8 107 -41 28 -25 79 -75 
7 -9 67 -85 33 -43 34 -41 55 -85 19 -48 2183 1366 47 MP stroke
28 56 77 85 2 1 107 60 107 15 107 -22 107 -52 4 -2 
103 -64 26 -21 71 -84 11 -23 25 -62 7 -84 -19 -85 -13 -28 
-26 -56 -54 -85 -28 -37 -58 -47 -49 -35 -107 -30 -107 5 -107 33 
-50 27 -57 39 -44 45 -51 85 -12 34 -18 50 -16 85 1 84 
19 85 14 28 4754 3064 35 MP stroke
DO
32 11 107 56 24 17 83 70 15 15 64 84 28 58 14 27 
27 84 12 85 0 84 -12 85 -21 84 -20 57 -9 28 -29 84 
-29 85 -25 84 -15 76 -1 9 -6 84 1 85 6 73 1 11 
13 85 15 84 15 85 14 84 12 85 9 84 7 85 5 84 
3 85 1 84 0 85 -2 84 -4 85 -8 84 -10 85 -10 84 
-3 85 18 84 31 56 15 29 59 84 33 47 25 38 49 84 
34 78 3 7 31 84 20 85 9 84 0 85 -9 84 -20 85 
-32 84 -2 4 -38 81 -59 84 -11 14 -64 71 1498 388 63 MP stroke
-44 84 -28 85 -17 84 -7 61 -3 24 -4 84 2 85 5 84 
0 12 4 73 3 84 -2 85 -5 61 -2 23 -13 85 -18 84 
-18 85 -17 84 -15 85 -11 84 -8 85 -5 79 0 5 -3 85 
1 84 2 85 0 2 3 82 4 85 3 84 5 85 7 84 
9 85 13 84 18 85 25 84 20 54 10 31 33 84 41 85 
24 44 19 40 44 85 44 80 2 4 38 85 38 84 29 62 
9 23 34 84 41 85 23 41 21 43 51 85 35 49 24 35 
70 85 13 15 65 69 42 41 49 44 58 49 46 35 62 45 
62 40 4799 388 66 MP stroke
27 -24 51 -85 15 -84 -35 -85 -58 -38 -48 -46 -59 -33 -63 -52 
-45 -32 -69 -52 -38 -28 -107 -50 -27 -7 -80 -18 -107 -3 -107 21 
-2 0 -105 41 -83 44 -24 13 -108 67 -6 4 -101 83 -2 2 
-73 84 -32 57 -16 28 -29 84 -9 85 8 84 29 85 17 32 
29 52 74 85 4 4 107 76 8 4 100 49 91 36 16 5 
107 27 107 14 107 3 107 -23 35 -26 72 -63 14 -22 58 -84 
35 -45 30 -40 71 -84 7 -11 69 -74 38 -60 2076 1378 55 MP stroke
19 23 88 73 22 11 85 42 107 14 107 -22 61 -34 46 -22 
107 -54 14 -8 94 -75 9 -10 59 -84 26 -85 2 -84 -20 -85 
-39 -84 -37 -70 -9 -15 -55 -84 -44 -52 -47 -33 -60 -37 -107 -23 
-107 11 -107 34 -37 15 -70 34 -69 51 -38 46 -23 38 -36 85 
-25 84 -14 85 1 84 15 85 35 84 47 62 4754 2946 39 MP stroke
24 -36 28 -84 3 -85 -22 -84 -33 -54 -17 -31 -78 -84 -12 -10 
-107 -71 -12 -4 -95 -30 -107 -1 -107 26 -12 5 -95 45 -65 40 
-42 31 -62 53 -46 53 -24 32 -42 84 -14 85 9 84 36 85 
35 48 29 36 79 68 22 17 85 50 88 34 19 7 107 14 
107 -17 9 -4 98 -50 37 -34 70 -72 10 -13 67 -84 30 -49 
2291 1282 41 MP stroke
103 73 4 2 107 18 87 -20 20 -5 107 -53 41 -27 66 -56 
26 -28 46 -85 12 -84 -17 -85 -44 -84 -23 -32 -53 -53 -54 -43 
-107 -36 -107 1 -107 36 -60 42 -47 48 -27 37 -38 84 -17 85 
1 84 20 85 50 84 11 12 4647 2996 29 MP stroke
SO

gr 
24 w
  90   90 1915 4122 FO
  90   90 2746 4037 FO
  90   90 3576 3738 FO
  90   90 3285 3055 FO
  90   90 2455 2629 FO
  90   90 3161 2202 FO
  90   90 3742  921 FO
  90   90 3991 2116 FO
  90   90 3576 4293 FO
  90   90 2123 1988 FO
  90   90 5237 2202 FO
  90   90 4199 4421 FO
  90   90 3908 3482 FO
  90   90 5237 3055 FO
  90   90 4863 2629 FO
  90   90 4157 1562 FO
  90   90 4365  921 FO
  90   90 4822 1263 FO
  90   90 4199 2842 FO
  90   90 4656 2116 FO
  90   90 5029 3482 FO
  90   90 3784 2415 FO
  90   90 2746 3482 FO
  90   90 4614 3909 FO
  90   90 5237 4336 FO
  90   90 4199 3269 FO
  90   90 4489 3098 FO
  90   90 4427 3311 FO
  90   90 2746 1135 FO
  90   90 2621 1604 FO
  90   90 3036 1391 FO
  90   90 2372 1348 FO
  90   90 2683 1348 FO
  90   90 1915  921 FO
  90   90 2123 1007 FO
  90   90 2746  623 FO
  90   90 3161  580 FO
gs 898 388 5357 4226 MR c np

gr 
6 w

end

eplot

epage
end

showpage

%%EndDocument
 @endspecial 4057 1624 V 3051 1627 1010 4 v 2025 1773
a(Figure)g(2:)36 b(Demonstration)25 b(of)i(soft)f(margin)g(selection)g
(b)n(y)g(the)2025 1864 y(Lea)n(v)n(e-One-Out)20 b(SVM)k(algorithm.)34
b(A)24 b(cluster)e(of)h(\014v)n(e)g(crosses)2025 1956
y(is)g(classi\014ed)e(correctly)h(but)h(the)g(sixth)g(\(b)r(ottom)g
(righ)n(t\))f(is)h(con-)2025 2047 y(sidered)28 b(an)g(outlier)f(\(left)
j(picture\).)39 b(When)28 b(more)g(crosses)e(are)2025
2138 y(placed)37 b(near)f(the)i(p)r(oin)n(t)f(previously)f(considered)h
(an)g(outlier)2025 2230 y(\(righ)n(t)31 b(picture\))g(the)g(algorithm)f
(decides)h(the)h(training)e(p)r(oin)n(t)2025 2321 y(is)22
b(not)f(an)h(outlier)f(and)h(constructs)f(a)g(classi\014er)f(with)j(t)n
(w)n(o)d(clus-)2025 2412 y(ters)27 b(instead)h(of)f(one.)2025
2818 y Ff(5.2)105 b(Benc)m(hmark)35 b(Datasets)2025 2939
y Fq(W)-7 b(e)43 b(conducted)h(computer)e(sim)n(ulations)h(using)f(6)h
(arti\014cial)2025 3030 y(and)48 b(real)f(w)n(orld)g(datasets)h(from)g
(the)g(UCI,)h(DEL)-9 b(VE)47 b(and)2025 3122 y(ST)-7
b(A)g(TLOG)35 b(b)r(enc)n(hmark)e(rep)r(ositories,)i(follo)n(wing)e
(the)i(same)2025 3213 y(exp)r(erimen)n(tal)c(setup)g(as)f(in)2956
3206 y([)2979 3213 y(R\177)-42 b(atsc)n(h)30 b Fp(et)j(al.)p
Fq(,)g(1998)3669 3206 y(])3690 3213 y(.)48 b(The)31 b(au-)2025
3304 y(thors)c(of)h(this)g(article)f(also)g(pro)n(vide)f(a)i(w)n
(ebsite)f(to)h(obtain)g(the)2025 3396 y(data)2187 3365
y Fj(2)2224 3396 y Fq(.)46 b(Brie\015y)-7 b(,)31 b(the)g(setup)g(is)g
(as)f(follo)n(ws:)42 b(the)31 b(p)r(erformance)2025 3487
y(of)h(a)f(classi\014er)f(is)h(measured)g(b)n(y)g(its)h(a)n(v)n(erage)d
(error)h(o)n(v)n(er)f(one)2025 3578 y(h)n(undred)22 b(partitions)f(of)h
(the)g(datasets)f(in)n(to)g(training)g(and)h(test-)2025
3670 y(ing)h(sets.)35 b(F)-7 b(ree)23 b(parameter\(s\))f(in)i(the)g
(learning)e(algorithm)g(are)2025 3761 y(c)n(hosen)k(as)g(the)i(median)f
(v)-5 b(alue)27 b(of)f(the)i(b)r(est)f(mo)r(del)g(c)n(hosen)f(b)n(y)
2025 3852 y(cross)g(v)-5 b(alidation)27 b(of)h(the)g(\014rst)f(\014v)n
(e)g(training)g(datasets.)2108 3945 y(T)-7 b(able)44
b(1)f(compares)f(p)r(ercen)n(tage)h(test)h(error)e(of)i(LOOMs)2025
4037 y(to)37 b(AdaBo)r(ost)g(\(AB\),)h(Regularized)e(AdaBo)r(ost)h
(\(AB)3792 4049 y Fk(R)3846 4037 y Fq(\))h(and)2025 4128
y(SVMs)f(whic)n(h)f(are)g(all)g(kno)n(wn)g(to)g(b)r(e)h(excellen)n(t)f
(classi\014ers)3991 4098 y Fj(3)4027 4128 y Fq(.)2025
4219 y(The)51 b(comp)r(etitiv)n(eness)f(of)g(LOOMs)g(to)g(SVMs)h(and)f
(AB)3995 4231 y Fk(R)2025 4311 y Fq(\(whic)n(h)40 b(b)r(oth)g(ha)n(v)n
(e)f(a)g Fp(soft)i(mar)l(gin)f Fq(con)n(trol)f(parameter\))f(is)2025
4402 y(remark)-5 b(able)40 b(considering)h(LOOMs)f(ha)n(v)n(e)h(no)g
(free)h(parame-)2025 4493 y(ter.)60 b(This)36 b(indicates)f(that)h(the)
g Fp(soft)h(mar)l(gin)f Fq(automatically)2025 4585 y(selected)28
b(b)n(y)g(LOOMs)g(is)g(close)g(to)g(optimal.)39 b(AdaBo)r(ost)28
b(loses)p 2025 4661 499 4 v 2129 4714 a Fe(2)2163 4746
y Fd(h)n(ttp://svm.\014rst.gmd.de/)p Fb(\030)p Fd(raetsc)n(h/data/b)r
(enc)n(hmarks.h)n(tm.)2025 4829 y(The)23 b(datasets)g(ha)n(v)n(e)f(b)r
(een)g(pre-pro)r(cessed)g(to)h(ha)n(v)n(e)f(zero)h(mean)e(and)2025
4912 y(standard)28 b(deviation)f(one,)i(and)e(the)g(exact)h(one)g(h)n
(undred)e(splits)i(of)2025 4995 y(training)20 b(and)f(testing)g(sets)h
(used)f(in)g(the)g(author's)h(exp)r(erimen)n(ts)e(can)2025
5078 y(b)r(e)26 b(obtained.)2129 5135 y Fe(3)2163 5167
y Fd(The)34 b(results)g(for)g(AB,)g(AB)2985 5175 y Fa(R)3069
5167 y Fd(and)f(SVMs)g(w)n(ere)h(obtained)g(b)n(y)2025
5250 y(R\177)-38 b(aetsc)n(h,)26 b Fc(et)i(al)p Fd(.)p
eop
%%Page: 5 5
5 4 bop -150 -67 a Fq(out)35 b(to)g(the)g(three)g(other)f(algorithms,)h
(b)r(eing)g(essen)n(tially)f(an)-150 24 y(algorithm)26
b(designed)i(to)f(deal)g(with)h(noise-free)f(data.)p
27 153 1643 4 v 489 244 4 92 v 506 244 V 570 217 a(AB)p
752 244 V 113 w(AB)925 229 y Fk(R)p 1028 244 V 1079 217
a Fq(SVM)p 1312 244 V 100 w(LOOM)p 27 247 1643 4 v 77
311 a(Banana)p 489 339 4 92 v 506 339 V 203 w(12.3)p
752 339 V 112 w(10.9)p 1028 339 V 131 w(11.5)p 1312 339
V 171 w(10.6)77 403 y(B.)h(Cancer)p 489 430 V 506 430
V 115 w(30.4)p 752 430 V 112 w(26.5)p 1028 430 V 131
w(26.0)p 1312 430 V 171 w(26.3)77 494 y(Diab)r(etes)p
489 521 V 506 521 V 165 w(26.5)p 752 521 V 112 w(23.9)p
1028 521 V 131 w(23.5)p 1312 521 V 171 w(23.4)77 585
y(Heart)p 489 613 V 506 613 V 274 w(20.3)p 752 613 V
112 w(16.6)p 1028 613 V 131 w(16.0)p 1312 613 V 171 w(16.6)77
677 y(Th)n(yroid)p 489 704 V 506 704 V 208 w(4.4)p 752
704 V 155 w(4.4)p 1028 704 V 172 w(4.8)p 1312 704 V 214
w(5.0)77 768 y(Titanic)p 489 795 V 506 795 V 217 w(22.6)p
752 795 V 112 w(22.6)p 1028 795 V 131 w(22.4)p 1312 795
V 171 w(22.7)p 27 799 1643 4 v -150 995 a(T)-7 b(able)41
b(1:)65 b(Comparison)40 b(of)i(p)r(ercen)n(tage)e(test)i(error)e(of)i
(Ad-)-150 1086 y(aBo)r(ost)h(\(AB\),)i(Regularized)d(AdaBo)r(ost)i
(\(AB)1424 1098 y Fk(R)1478 1086 y Fq(\),)49 b(Supp)r(ort)-150
1178 y(V)-7 b(ector)29 b(Mac)n(hines)g(\(SVMs\))h(and)f(Lea)n(v)n
(e-One-Out)e(Mac)n(hines)-150 1269 y(\(LOOMs\))g(on)g(6)h(datasets.)-67
1524 y(Finally)-7 b(,)42 b(to)e(sho)n(w)e(the)i(b)r(eha)n(viour)e(of)h
(the)h(algorithm)e(w)n(e)-150 1615 y(giv)n(e)f(t)n(w)n(o)h(plots)f(in)i
(Figure)e(3.)68 b(The)39 b(top)f(graph)f(sho)n(ws)g(the)-150
1706 y(fraction)21 b(of)h(training)f(p)r(oin)n(ts)h(that)g(ha)n(v)n(e)e
(non-zero)g(co)r(e\016cien)n(ts)-150 1798 y(\()p Fp(SVs)p
Fq(\))37 b(plotted)h(against)e(log\()p Fo(\025)p Fq(\))i(\()p
Fp(RBF)h(width)p Fq(\))g(on)e(the)g(th)n(y-)-150 1889
y(roid)c(dataset.)54 b(Here,)34 b(one)f(can)g(see)g(the)h(sparsit)n(y)e
(of)h(the)h(de-)-150 1980 y(cision)k(rule)g(\(cf.)h(Equation)e
(\(1\)\),)42 b(the)c(sparseness)f(of)h(whic)n(h)-150
2072 y(dep)r(ends)e(on)g(the)g(c)n(hosen)f(v)-5 b(alue)36
b(of)g Fo(\025)p Fq(.)62 b(The)36 b(b)r(ottom)g(graph)-150
2163 y(sho)n(ws)30 b(the)h(n)n(um)n(b)r(er)g(of)g(training)f(and)h
(test)g(errors)e(\()p Fp(tr)l(ain)k(err)-150 2274 y Fq(and)24
b Fp(test)i(err)p Fq(\),)f(the)g(v)-5 b(alue)24 b(of)792
2212 y Fl(P)880 2232 y Fk(`)880 2299 y(i)p Fj(=1)1006
2274 y Fo(\030)1042 2286 y Fk(i)1094 2274 y Fq(\()p Fp(slacks)p
Fq(\))i(and)e(the)g(v)-5 b(alue)-150 2365 y(of)24 b(the)h(b)r(ound)f
(giv)n(en)g(in)g(Theorem)f(1)h(\()p Fp(l-o-o)j(b)l(ound)p
Fq(\).)37 b(One)23 b(can)-150 2457 y(see)32 b(the)h(training)f(and)g
(test)h(error)d(\(and)j(the)g(b)r(ound\))g(closely)-150
2548 y(matc)n(h)i(whic)n(h)g(w)n(ould)f(b)r(e)i(natural)e(for)h(an)f
(algorithm)g(whic)n(h)-150 2639 y(minimized)26 b(lea)n(v)n(e-one-out)d
(error.)34 b(The)25 b(minim)n(um)h(of)f(all)g(four)-150
2731 y(plots)38 b(is)g(roughly)f(at)h(log)q(\()p Fo(\025)p
Fq(\))k(=)e Fn(\000)p Fq(1,)g(indicating)e(one)g(could)-150
2822 y(p)r(erform)27 b(mo)r(del)h(selection)f(using)g(one)h(of)f(the)h
(kno)n(wn)f(expres-)-150 2913 y(sions.)41 b(Note)29 b(also)g(that)g
(for)g(a)g(reasonable)e(range)h(of)h(di\013eren)n(t)-150
3005 y(RBF)19 b(widths)h(the)g(test)f(error)f(is)h(roughly)f(the)i
(same,)g(indicating)-150 3096 y(the)29 b Fp(automatic)h
Fq(soft)f(margin)f(con)n(trol)g(o)n(v)n(ercomes)e(o)n(v)n(er\014tting)
-150 3187 y(problems.)36 b(Moreo)n(v)n(er,)23 b(the)j(v)-5
b(alues)26 b(of)g Fo(\025)g Fq(whic)n(h)g(giv)n(e)f(the)i(b)r(est)-150
3279 y(generalization)e(error)g(also)h(giv)n(e)g(the)h(most)g(sparse)f
(classi\014ers.)-150 3480 y Fs(6)112 b(Discussion)-150
3606 y Fq(In)32 b(this)f(article,)h(motiv)-5 b(ated)32
b(b)n(y)f(a)g(b)r(ound)h(on)f(lea)n(v)n(e{one{out)-150
3698 y(error)f(for)h(k)n(ernel)g(classi\014ers,)h(w)n(e)f(presen)n(ted)
h(a)f(new)h(learning)-150 3789 y(algorithm)23 b(for)i(solving)e
(pattern)i(recognition)e(problems.)35 b(The)-150 3880
y(robustness)f(of)h(the)g(approac)n(h,)g(despite)g(ha)n(ving)f(no)g
(regular-)-150 3972 y(ization)39 b(parameter,)h(can)f(b)r(e)h(understo)
r(o)r(d)e(in)i(terms)f(of)g(the)-150 4063 y(b)r(ound)31
b(\(one)f(m)n(ust)g(classify)g(p)r(oin)n(ts)g(correctly)e(without)j
(their)-150 4154 y(o)n(wn)21 b(basis)f(function\),)k(in)d(terms)g(of)h
(margin)e(\(see)h(Section)h(4.3\),)-150 4245 y(and)e(through)g
(empirical)g(study)-7 b(.)35 b(W)-7 b(e)21 b(w)n(ould)f(also)f(lik)n(e)
h(to)h(p)r(oin)n(t)-150 4337 y(out)f(that)g(if)g(one)f(constructs)g(a)h
(k)n(ernel)e(matrix)i Fo(K)1396 4349 y Fk(ij)1477 4337
y Fq(=)i Fo(k)s Fq(\()p Fm(x)1692 4349 y Fk(i)1720 4337
y Fo(;)14 b Fm(x)1807 4349 y Fk(j)1843 4337 y Fq(\))-150
4428 y(then)28 b(the)f(regularization)e(tec)n(hnique)i(emplo)n(y)n(ed)f
(is)h(to)h(set)f(the)-150 4519 y(diagonal)h(of)i(the)g(matrix)f(to)g
(zero,)h(whic)n(h)f(suggests)g(that)g(one)-150 4611 y(can)j(con)n(trol)
f(regularization)f(through)i(con)n(trol)f(of)h(the)h(ridge,)-150
4702 y(as)27 b(in)h(regression)d(tec)n(hniques.)-150
4912 y Fm(Ac)m(kno)m(wledgmen)m(ts)82 b Fq(W)-7 b(e)27
b(w)n(ould)f(lik)n(e)h(to)g(thank)f(Vladimir)-150 5004
y(V)-7 b(apnik,)36 b(Ralf)e(Herbric)n(h)f(and)g(Alex)h(Gammerman)g(for)
f(their)-150 5095 y(help)27 b(with)f(this)h(w)n(ork.)35
b(W)-7 b(e)27 b(also)e(thank)h(the)h(ESPR)n(C)e(for)h(pro-)-150
5186 y(viding)h(\014nancial)g(supp)r(ort)h(through)f(gran)n(t)f
(GR/L35812.)2211 1055 y @beginspecial 50 @llx 50 @lly
410 @urx 302 @ury 1984 @rwi 1445 @rhi @setspecial
%%BeginDocument: gr2.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
/Helvetica findfont 140 scalefont setfont
newpath
LTa
LTb
840 351 M
63 0 V
2466 0 R
-63 0 V
756 351 M
(0) Rshow
840 613 M
63 0 V
2466 0 R
-63 0 V
756 613 M
(0.1) Rshow
840 876 M
63 0 V
2466 0 R
-63 0 V
756 876 M
(0.2) Rshow
840 1138 M
63 0 V
2466 0 R
-63 0 V
-2550 0 R
(0.3) Rshow
840 1400 M
63 0 V
2466 0 R
-63 0 V
-2550 0 R
(0.4) Rshow
840 1662 M
63 0 V
2466 0 R
-63 0 V
-2550 0 R
(0.5) Rshow
840 1925 M
63 0 V
2466 0 R
-63 0 V
-2550 0 R
(0.6) Rshow
840 2187 M
63 0 V
2466 0 R
-63 0 V
-2550 0 R
(0.7) Rshow
840 2449 M
63 0 V
2466 0 R
-63 0 V
-2550 0 R
(0.8) Rshow
1009 351 M
0 63 V
0 2035 R
0 -63 V
0 -2175 R
(-4) Cshow
1346 351 M
0 63 V
0 2035 R
0 -63 V
0 -2175 R
(-3) Cshow
1683 351 M
0 63 V
0 2035 R
0 -63 V
0 -2175 R
(-2) Cshow
2020 351 M
0 63 V
0 2035 R
0 -63 V
0 -2175 R
(-1) Cshow
2357 351 M
0 63 V
0 2035 R
0 -63 V
0 -2175 R
(0) Cshow
2695 351 M
0 63 V
0 2035 R
0 -63 V
0 -2175 R
(1) Cshow
3032 351 M
0 63 V
0 2035 R
0 -63 V
0 -2175 R
(2) Cshow
3369 351 M
0 63 V
0 2035 R
0 -63 V
0 -2175 R
(3) Cshow
840 351 M
2529 0 V
0 2098 V
-2529 0 V
840 351 L
140 1400 M
currentpoint gsave translate 90 rotate 0 0 M
(SVs) Cshow
grestore
2104 71 M
(RBF width) Cshow
LT0
840 1614 M
353 -101 V
1581 857 L
388 37 V
388 57 V
389 355 V
388 600 V
233 281 V
stroke
grestore
end
showpage
%%EndDocument
 @endspecial 1213 x @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1984 @rwi 1445 @rhi @setspecial
%%BeginDocument: gr1.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
/Helvetica findfont 140 scalefont setfont
newpath
LTa
LTb
840 351 M
63 0 V
2466 0 R
-63 0 V
756 351 M
(0) Rshow
840 561 M
63 0 V
2466 0 R
-63 0 V
756 561 M
(2) Rshow
840 771 M
63 0 V
2466 0 R
-63 0 V
756 771 M
(4) Rshow
840 980 M
63 0 V
2466 0 R
-63 0 V
756 980 M
(6) Rshow
840 1190 M
63 0 V
2466 0 R
-63 0 V
-2550 0 R
(8) Rshow
840 1400 M
63 0 V
2466 0 R
-63 0 V
-2550 0 R
(10) Rshow
840 1610 M
63 0 V
2466 0 R
-63 0 V
-2550 0 R
(12) Rshow
840 1820 M
63 0 V
2466 0 R
-63 0 V
-2550 0 R
(14) Rshow
840 2029 M
63 0 V
2466 0 R
-63 0 V
-2550 0 R
(16) Rshow
840 2239 M
63 0 V
2466 0 R
-63 0 V
-2550 0 R
(18) Rshow
840 2449 M
63 0 V
2466 0 R
-63 0 V
-2550 0 R
(20) Rshow
1009 351 M
0 63 V
0 2035 R
0 -63 V
0 -2175 R
(-4) Cshow
1346 351 M
0 63 V
0 2035 R
0 -63 V
0 -2175 R
(-3) Cshow
1683 351 M
0 63 V
0 2035 R
0 -63 V
0 -2175 R
(-2) Cshow
2020 351 M
0 63 V
0 2035 R
0 -63 V
0 -2175 R
(-1) Cshow
2357 351 M
0 63 V
0 2035 R
0 -63 V
0 -2175 R
(0) Cshow
2695 351 M
0 63 V
0 2035 R
0 -63 V
0 -2175 R
(1) Cshow
3032 351 M
0 63 V
0 2035 R
0 -63 V
0 -2175 R
(2) Cshow
3369 351 M
0 63 V
0 2035 R
0 -63 V
0 -2175 R
(3) Cshow
840 351 M
2529 0 V
0 2098 V
-2529 0 V
840 351 L
140 1400 M
currentpoint gsave translate 90 rotate 0 0 M
(Error) Cshow
grestore
2104 71 M
(RBF width) Cshow
LT0
2020 2134 M
(slacks) Rshow
2104 2134 M
252 0 V
1081 2449 M
112 -470 V
388 -861 V
1969 742 L
388 551 V
389 1112 V
9 44 V
LT1
2020 1994 M
(test err) Rshow
2104 1994 M
252 0 V
840 1050 M
353 0 V
1581 771 L
1969 631 L
388 279 V
389 0 V
388 0 V
233 140 V
LT2
2020 1854 M
(l-o-o bound) Rshow
2104 1854 M
252 0 V
840 1141 M
1193 801 L
1581 576 L
388 -75 V
388 75 V
389 150 V
388 299 V
233 75 V
LT3
2020 1714 M
(train err) Rshow
2104 1714 M
252 0 V
840 1141 M
1193 801 L
1581 501 L
388 -75 V
388 75 V
389 150 V
388 299 V
233 150 V
stroke
grestore
end
showpage
%%EndDocument
 @endspecial 2025 2442 a(Figure)e(3:)35 b(The)25 b(fraction)f(of)h
(training)f(patterns)g(that)i(are)d(sup-)2025 2533 y(p)r(ort)h(v)n
(ectors)e(\(top\))i(and)g(v)-5 b(arious)22 b(error)g(rates)h(\(b)r
(ottom\))i(b)r(oth)2025 2625 y(plotted)43 b(against)f(RBF)h(k)n(ernel)f
(width)h(for)g(Lea)n(v)n(e-One-Out)2025 2716 y(Mac)n(hines)27
b(on)g(the)h(th)n(yroid)f(dataset.)2025 2937 y Fs(References)2025
3052 y Fq([)2048 3059 y(Cortes)g(and)g(V)-7 b(apnik,)28
b(1995)2948 3052 y(])3010 3059 y(Corinna)19 b(Cortes)f(and)h(Vladimir)
2113 3150 y(V)-7 b(apnik.)25 b(Supp)r(ort)c(Vector)f(Net)n(w)n(orks.)k
Fp(Machine)h(L)l(e)l(arning)p Fq(,)2113 3241 y(20:273{297,)e(1995.)2025
3356 y([)2048 3363 y(Jaakk)n(ola)i(and)i(Haussler,)g(1999)3081
3356 y(])3143 3363 y(T)-7 b(ommi)44 b(S.)g(Jaakk)n(ola)c(and)2113
3454 y(Da)n(vid)30 b(Haussler.)47 b(Probabilistic)29
b(k)n(ernel)h(regression)f(mo)r(d-)2113 3546 y(els.)36
b(In)28 b Fp(Pr)l(o)l(c)l(e)l(e)l(dings)i(of)h(the)e(1999)j(Confer)l
(enc)l(e)e(on)g(AI)f(and)2113 3637 y(Statistics)p Fq(.)e(Morgan)f
(Kaufmann,)h(1999.)2025 3752 y([)2048 3759 y(Osuna)g(and)g(Girosi,)g
(1998)2905 3752 y(])2968 3759 y(E.)34 b(Osuna)f(and)h(F.)h(Girosi.)55
b(Re-)2113 3850 y(ducing)29 b(run-time)g(complexit)n(y)g(in)h(SVMs.)43
b(In)29 b Fp(Pr)l(o)l(c)l(e)l(e)l(dings)2113 3941 y(of)34
b(the)g(14th)g(Int'l)f(Conf.)i(on)f(Pattern)f(R)l(e)l(c)l(o)l(gnition,)
h(Bris-)2113 4033 y(b)l(ane,)c(A)n(ustr)l(alia)p Fq(,)e(1998.)2025
4147 y([)2048 4154 y(R\177)-42 b(atsc)n(h)27 b Fp(et)j(al.)p
Fq(,)e(1998)2727 4147 y(])2790 4154 y(Gunnar)54 b(R\177)-42
b(atsc)n(h,)60 b(T.)54 b(Ono)r(da,)59 b(and)2113 4246
y(Klaus-Rob)r(ert)48 b(M)r(\177)-44 b(uller.)105 b(Soft)50
b(margins)f(for)h(adab)r(o)r(ost.)2113 4337 y(T)-7 b(ec)n(hnical)30
b(rep)r(ort,)i(Ro)n(y)n(al)e(Hollo)n(w)n(a)n(y)-7 b(,)30
b(Univ)n(ersit)n(y)g(of)i(Lon-)2113 4428 y(don,)27 b(1998.)35
b(TR{98{21.)2025 4543 y([)2048 4550 y(Sc)n(h\177)-42
b(olk)n(opf,)27 b(1997)2613 4543 y(])2675 4550 y(Bernhard)39
b(Sc)n(h\177)-42 b(olk)n(opf.)73 b Fp(Supp)l(ort)41 b(V)-6
b(e)l(ctor)2113 4641 y(L)l(e)l(arning)p Fq(.)58 b(PhD)35
b(thesis,)i(T)-7 b(ec)n(hnisc)n(he)34 b(Univ)n(ersit\177)-42
b(a)33 b(Berlin,)2113 4733 y(Berlin,)27 b(German)n(y)-7
b(,)27 b(1997.)2025 4847 y([)2048 4854 y(V)-7 b(apnik,)28
b(1995)2523 4847 y(])2585 4854 y(Vladimir)k(V)-7 b(apnik.)47
b Fp(The)34 b(Natur)l(e)f(of)h(Statis-)2113 4946 y(tic)l(al)41
b(L)l(e)l(arning)g(The)l(ory)p Fq(.)75 b(Springer{V)-7
b(erlag,)41 b(New)f(Y)-7 b(ork,)2113 5037 y(1995.)2025
5152 y([)2048 5159 y(V)g(apnik,)28 b(1998)2523 5152 y(])2585
5159 y(Vladimir)48 b(V)-7 b(apnik.)98 b Fp(Statistic)l(al)49
b(L)l(e)l(arning)2113 5250 y(The)l(ory)p Fq(.)38 b(John)27
b(Wiley)h(and)f(Sons,)h(New)f(Y)-7 b(ork,)27 b(1998.)p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
